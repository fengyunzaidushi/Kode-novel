{
  "recommendedOrder": [
    "src/index.ts",
    "src/services/sentry.ts",
    "src/constants/product.ts",
    "src/history.ts",
    "src/types/logs.ts",
    "src/constants/macros.ts",
    "src/utils/log.ts",
    "src/utils/PersistentShell.ts",
    "src/utils/state.ts",
    "src/utils/style.ts",
    "src/utils/execFileNoThrow.ts",
    "src/utils/env.ts",
    "src/utils/json.ts",
    "src/utils/errors.ts",
    "src/types/conversation.ts",
    "src/utils/debugLogger.ts",
    "src/utils/sessionState.ts",
    "src/utils/model.ts",
    "src/utils/config.ts",
    "src/utils/theme.ts",
    "src/components/FallbackToolUseRejectedMessage.tsx",
    "src/Tool.ts",
    "src/tools/lsTool/prompt.ts",
    "src/utils/permissions/filesystem.ts",
    "src/tools/lsTool/lsTool.tsx",
    "src/utils/git.ts",
    "src/utils/ripgrep.ts",
    "src/utils/generators.ts",
    "src/utils/user.ts",
    "src/context.ts",
    "src/utils/format.tsx",
    "src/cost-tracker.ts",
    "src/constants/models.ts",
    "src/utils/http.ts",
    "src/components/messages/UserBashInputMessage.tsx",
    "src/components/Spinner.tsx",
    "src/services/customCommands.ts",
    "src/utils/agentStorage.ts",
    "src/utils/todoStorage.ts",
    "src/services/systemReminder.ts",
    "src/utils/agentLoader.ts",
    "src/services/mentionProcessor.ts",
    "src/utils/messages.tsx",
    "src/utils/tokens.ts",
    "src/services/vcr.ts",
    "src/utils/messageContextManager.ts",
    "src/types/modelCapabilities.ts",
    "src/services/adapters/base.ts",
    "src/services/adapters/responsesAPI.ts",
    "src/services/adapters/chatCompletions.ts",
    "src/constants/modelCapabilities.ts",
    "src/services/modelAdapterFactory.ts",
    "src/services/responseStateManager.ts",
    "src/constants/prompts.ts",
    "src/services/openai.ts",
    "src/tools/ThinkTool/prompt.ts",
    "src/components/MessageResponse.tsx",
    "src/tools/ThinkTool/ThinkTool.tsx",
    "src/utils/thinking.ts",
    "src/services/claude.ts",
    "src/utils/commands.ts",
    "src/utils/file.ts",
    "src/tools/TaskTool/constants.ts",
    "src/components/HighlightedCode.tsx",
    "src/services/fileFreshness.ts",
    "src/types/notebook.ts",
    "src/tools/BashTool/utils.ts",
    "src/tools/NotebookReadTool/prompt.ts",
    "src/tools/NotebookReadTool/NotebookReadTool.tsx",
    "src/tools/FileReadTool/prompt.ts",
    "src/utils/secureFile.ts",
    "src/tools/FileReadTool/FileReadTool.tsx",
    "src/tools/GlobTool/prompt.ts",
    "src/tools/GrepTool/prompt.ts",
    "src/tools/BashTool/prompt.ts",
    "src/tools/BashTool/OutputLine.tsx",
    "src/tools/BashTool/BashToolResultMessage.tsx",
    "src/tools/BashTool/BashTool.tsx",
    "src/utils/array.ts",
    "src/components/StructuredDiff.tsx",
    "src/hooks/useTerminalSize.ts",
    "src/components/FileEditToolUpdatedMessage.tsx",
    "src/tools/NotebookEditTool/prompt.ts",
    "src/tools/NotebookEditTool/NotebookEditTool.tsx",
    "src/tools/FileEditTool/prompt.ts",
    "src/utils/diff.ts",
    "src/tools/FileEditTool/utils.ts",
    "src/tools/FileEditTool/FileEditTool.tsx",
    "src/tools/FileWriteTool/prompt.ts",
    "src/tools/FileWriteTool/FileWriteTool.tsx",
    "src/permissions.ts",
    "src/components/CustomSelect/theme.ts",
    "src/components/CustomSelect/select-option.tsx",
    "src/components/CustomSelect/option-map.ts",
    "src/components/CustomSelect/use-select-state.ts",
    "src/components/CustomSelect/use-select.ts",
    "src/components/CustomSelect/select.tsx",
    "src/utils/unaryLogging.ts",
    "src/components/permissions/FileEditPermissionRequest/FileEditToolDiff.tsx",
    "src/components/permissions/FileEditPermissionRequest/FileEditPermissionRequest.tsx",
    "src/hooks/usePermissionRequestLogging.ts",
    "src/components/permissions/hooks.ts",
    "src/components/permissions/PermissionRequestTitle.tsx",
    "src/components/permissions/utils.ts",
    "src/components/permissions/toolUseOptions.ts",
    "src/components/permissions/BashPermissionRequest/BashPermissionRequest.tsx",
    "src/components/permissions/FallbackPermissionRequest.tsx",
    "src/services/notifier.ts",
    "src/hooks/useNotifyAfterTimeout.ts",
    "src/components/permissions/FileWritePermissionRequest/FileWriteToolDiff.tsx",
    "src/components/permissions/FileWritePermissionRequest/FileWritePermissionRequest.tsx",
    "src/components/Cost.tsx",
    "src/tools/GrepTool/GrepTool.tsx",
    "src/tools/GlobTool/GlobTool.tsx",
    "src/components/permissions/FilesystemPermissionRequest/FilesystemPermissionRequest.tsx",
    "src/components/permissions/PermissionRequest.tsx",
    "src/hooks/useCanUseTool.ts",
    "src/utils/toolExecutionController.ts",
    "src/utils/terminal.ts",
    "src/utils/fileRecoveryCore.ts",
    "src/utils/autoCompactCore.ts",
    "src/query.ts",
    "src/messages.ts",
    "src/hooks/useDoublePress.ts",
    "src/utils/Cursor.ts",
    "src/hooks/useTextInput.ts",
    "src/components/TextInput.tsx",
    "src/utils/browser.ts",
    "src/hooks/useExitOnCtrlCD.ts",
    "src/components/Bug.tsx",
    "src/commands/bug.tsx",
    "src/commands/clear.ts",
    "src/commands/compact.ts",
    "src/components/Config.tsx",
    "src/commands/config.tsx",
    "src/commands/cost.ts",
    "src/commands/ctx_viz.ts",
    "src/components/PressEnterToContinue.tsx",
    "src/screens/Doctor.tsx",
    "src/commands/doctor.ts",
    "src/components/Help.tsx",
    "src/commands/help.tsx",
    "src/commands/terminalSetup.ts",
    "src/constants/releaseNotes.ts",
    "src/ProjectOnboarding.tsx",
    "src/commands/init.ts",
    "src/commands/listen.ts",
    "src/constants/oauth.ts",
    "src/services/oauth.ts",
    "src/components/AsciiLogo.tsx",
    "src/tools/MCPTool/prompt.ts",
    "src/tools/MCPTool/MCPTool.tsx",
    "src/services/mcpClient.ts",
    "src/components/Logo.tsx",
    "src/services/gpt5ConnectionTest.ts",
    "src/components/ModelSelector.tsx",
    "src/components/Onboarding.tsx",
    "src/components/ConsoleOAuthFlow.tsx",
    "src/utils/auth.ts",
    "src/commands/login.tsx",
    "src/commands/logout.tsx",
    "src/commands/mcp.ts",
    "src/components/ModelListManager.tsx",
    "src/components/ModelConfig.tsx",
    "src/commands/model.tsx",
    "src/components/ModelStatusDisplay.tsx",
    "src/commands/modelstatus.tsx",
    "src/commands/onboarding.tsx",
    "src/commands/pr_comments.ts",
    "src/commands/refreshCommands.ts",
    "src/commands/release-notes.ts",
    "src/commands/review.ts",
    "src/components/Link.tsx",
    "src/components/CostThresholdDialog.tsx",
    "src/components/messages/UserToolResultMessage/UserToolCanceledMessage.tsx",
    "src/components/messages/UserToolResultMessage/UserToolErrorMessage.tsx",
    "src/components/messages/UserToolResultMessage/utils.tsx",
    "src/components/messages/UserToolResultMessage/UserToolRejectMessage.tsx",
    "src/components/messages/UserToolResultMessage/UserToolSuccessMessage.tsx",
    "src/components/messages/UserToolResultMessage/UserToolResultMessage.tsx",
    "src/hooks/useInterval.ts",
    "src/constants/figures.ts",
    "src/components/ToolUseLoader.tsx",
    "src/utils/markdown.ts",
    "src/components/messages/AssistantThinkingMessage.tsx",
    "src/components/messages/TaskToolMessage.tsx",
    "src/components/messages/AssistantToolUseMessage.tsx",
    "src/components/messages/AssistantBashOutputMessage.tsx",
    "src/components/messages/AssistantLocalCommandOutputMessage.tsx",
    "src/components/messages/AssistantTextMessage.tsx",
    "src/components/messages/UserKodingInputMessage.tsx",
    "src/components/messages/UserCommandMessage.tsx",
    "src/components/messages/UserPromptMessage.tsx",
    "src/components/messages/UserTextMessage.tsx",
    "src/components/messages/AssistantRedactedThinkingMessage.tsx",
    "src/components/Message.tsx",
    "src/components/MessageSelector.tsx",
    "src/utils/exampleCommands.ts",
    "src/hooks/useArrowKeyHistory.ts",
    "src/utils/advancedFuzzyMatcher.ts",
    "src/utils/fuzzyMatcher.ts",
    "src/utils/commonUnixCommands.ts",
    "src/hooks/useUnifiedCompletion.ts",
    "src/components/SentryErrorBoundary.ts",
    "src/components/TokenWarning.tsx",
    "src/types/PermissionMode.ts",
    "src/context/PermissionContext.tsx",
    "src/components/PromptInput.tsx",
    "src/hooks/useLogStartupTime.ts",
    "src/hooks/useApiKeyVerification.ts",
    "src/hooks/useCancelRequest.ts",
    "src/hooks/useLogMessages.ts",
    "src/components/ModeIndicator.tsx",
    "src/components/binary-feedback/BinaryFeedbackOption.tsx",
    "src/components/binary-feedback/utils.ts",
    "src/components/binary-feedback/BinaryFeedbackView.tsx",
    "src/components/binary-feedback/BinaryFeedback.tsx",
    "src/screens/REPL.tsx",
    "src/utils/conversationRecovery.ts",
    "src/components/LogSelector.tsx",
    "src/screens/ResumeConversation.tsx",
    "src/commands/resume.tsx",
    "src/commands/agents.tsx",
    "src/commands.ts",
    "src/utils/ask.tsx",
    "src/tools/TaskTool/prompt.ts",
    "src/tools/TaskTool/TaskTool.tsx",
    "src/tools/ArchitectTool/prompt.ts",
    "src/tools/ArchitectTool/ArchitectTool.tsx",
    "src/utils/expertChatStorage.ts",
    "src/tools/AskExpertModelTool/AskExpertModelTool.tsx",
    "src/tools/MultiEditTool/prompt.ts",
    "src/tools/MultiEditTool/MultiEditTool.tsx",
    "src/tools/MemoryReadTool/prompt.ts",
    "src/tools/MemoryReadTool/MemoryReadTool.tsx",
    "src/tools/MemoryWriteTool/prompt.ts",
    "src/tools/MemoryWriteTool/MemoryWriteTool.tsx",
    "src/components/TodoItem.tsx",
    "src/tools/TodoWriteTool/prompt.ts",
    "src/tools/TodoWriteTool/TodoWriteTool.tsx",
    "src/tools/WebSearchTool/prompt.ts",
    "src/tools/WebSearchTool/searchProviders.ts",
    "src/tools/WebSearchTool/WebSearchTool.tsx",
    "src/tools/URLFetcherTool/prompt.ts",
    "src/tools/URLFetcherTool/htmlToMarkdown.ts",
    "src/tools/URLFetcherTool/cache.ts",
    "src/tools/URLFetcherTool/URLFetcherTool.tsx",
    "src/tools.ts",
    "src/components/ApproveApiKey.tsx",
    "src/components/TrustDialog.tsx",
    "src/screens/LogList.tsx",
    "src/entrypoints/mcp.ts",
    "src/utils/cleanup.ts",
    "src/commands/approvedTools.ts",
    "src/components/MCPServerDialogCopy.tsx",
    "src/components/MCPServerMultiselectDialog.tsx",
    "src/components/MCPServerApprovalDialog.tsx",
    "src/services/mcpServerApproval.tsx",
    "src/utils/autoUpdater.ts",
    "src/components/InvalidConfigDialog.tsx",
    "src/entrypoints/cli.tsx",
    "src/components/StickerRequestForm.tsx",
    "src/constants/claude-asterisk-ascii-art.tsx",
    "src/services/browserMocks.ts",
    "src/tools/StickerRequestTool/prompt.ts",
    "src/types/common.d.ts",
    "src/types/RequestContext.ts",
    "src/utils/globalLogger.ts",
    "src/utils/imagePaste.ts",
    "src/utils/responseState.ts",
    "src/utils/validate.ts",
    "src/components/messages/TaskProgressMessage.tsx",
    "src/tools/StickerRequestTool/StickerRequestTool.tsx",
    "src/test/testAdapters.ts"
  ],
  "entryPoints": [
    "src/commands/approvedTools.ts",
    "src/components/Cost.tsx",
    "src/components/CustomSelect/theme.ts",
    "src/components/MessageResponse.tsx",
    "src/components/StickerRequestForm.tsx",
    "src/constants/claude-asterisk-ascii-art.tsx",
    "src/constants/macros.ts",
    "src/constants/models.ts",
    "src/constants/oauth.ts",
    "src/constants/product.ts",
    "src/constants/releaseNotes.ts",
    "src/history.ts",
    "src/hooks/useDoublePress.ts",
    "src/hooks/useInterval.ts",
    "src/hooks/useLogStartupTime.ts",
    "src/hooks/useTerminalSize.ts",
    "src/index.ts",
    "src/services/browserMocks.ts",
    "src/services/responseStateManager.ts",
    "src/services/sentry.ts",
    "src/Tool.ts",
    "src/tools/ArchitectTool/prompt.ts",
    "src/tools/FileWriteTool/prompt.ts",
    "src/tools/GlobTool/prompt.ts",
    "src/tools/GrepTool/prompt.ts",
    "src/tools/lsTool/prompt.ts",
    "src/tools/MCPTool/prompt.ts",
    "src/tools/MemoryReadTool/prompt.ts",
    "src/tools/MemoryWriteTool/prompt.ts",
    "src/tools/NotebookEditTool/prompt.ts",
    "src/tools/NotebookReadTool/prompt.ts",
    "src/tools/StickerRequestTool/prompt.ts",
    "src/tools/TaskTool/constants.ts",
    "src/tools/ThinkTool/prompt.ts",
    "src/tools/TodoWriteTool/prompt.ts",
    "src/tools/URLFetcherTool/cache.ts",
    "src/tools/URLFetcherTool/htmlToMarkdown.ts",
    "src/tools/URLFetcherTool/prompt.ts",
    "src/tools/WebSearchTool/prompt.ts",
    "src/tools/WebSearchTool/searchProviders.ts",
    "src/types/common.d.ts",
    "src/types/conversation.ts",
    "src/types/logs.ts",
    "src/types/modelCapabilities.ts",
    "src/types/notebook.ts",
    "src/types/PermissionMode.ts",
    "src/types/RequestContext.ts",
    "src/utils/advancedFuzzyMatcher.ts",
    "src/utils/agentStorage.ts",
    "src/utils/array.ts",
    "src/utils/commonUnixCommands.ts",
    "src/utils/Cursor.ts",
    "src/utils/diff.ts",
    "src/utils/errors.ts",
    "src/utils/expertChatStorage.ts",
    "src/utils/format.tsx",
    "src/utils/generators.ts",
    "src/utils/globalLogger.ts",
    "src/utils/imagePaste.ts",
    "src/utils/responseState.ts",
    "src/utils/secureFile.ts",
    "src/utils/sessionState.ts",
    "src/utils/unaryLogging.ts",
    "src/utils/validate.ts",
    "src/components/SentryErrorBoundary.ts",
    "src/entrypoints/cli.tsx",
    "src/entrypoints/mcp.ts"
  ],
  "coreModules": [
    {
      "path": "src/utils/theme.ts",
      "dependents": 74,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/Tool.ts",
      "dependents": 53,
      "description": "🎯 工具系统核心接口 - Kode 可扩展架构的基础层🏗️ 核心功能：\n- 定义所有工具必须实现的标准化契约\n- 提供类型安全的工具输入输出接口\n- 集成权限系统和安全验证机制\n- 支持异步操作和流式输出处理🔄 依赖关系：\n- 上游：被所有具体工具实现和工具管理器使用\n- 下游：依赖 Zod 验证库和 React 组件系统📊 使用场景：\n- 工具系统的架构基础定义\n- 新工具开发的接口规范\n- 工具权限管理和安全验证\n- AI 代理的工具调用和结果处理🔧 技术实现：\n- 基于 TypeScript 泛型的类型安全设计\n- Zod 运行时类型验证和 JSON Schema 支持\n- React 组件集成用于 UI 渲染\n- 异步生成器模式支持流式处理",
      "functions": 0,
      "complexity": "low"
    },
    {
      "path": "src/utils/log.ts",
      "dependents": 47,
      "description": "",
      "functions": 19,
      "complexity": "medium"
    },
    {
      "path": "src/utils/state.ts",
      "dependents": 42,
      "description": "",
      "functions": 4,
      "complexity": "low"
    },
    {
      "path": "src/constants/product.ts",
      "dependents": 36,
      "description": "🎯 产品信息常量定义 - Kode 项目核心配置🏗️ 核心功能：\n- 定义产品的基本信息和标识\n- 配置项目的 URL 和文件路径\n- 提供统一的产品命名和配置\n- 包含品牌标识和 ASCII 艺术字🔄 依赖关系：\n- 上游：被整个应用的配置系统使用\n- 下游：无外部依赖，提供基础配置📊 使用场景：\n- 应用启动时的品牌显示\n- 配置文件的路径定义\n- 帮助信息和错误报告\n- GitHub 集成和问题跟踪🔧 技术实现：\n- 提供不可变的产品常量\n- 集中管理所有产品相关信息\n- 支持命令行工具的品牌识别\n- ASCII 艺术字增强终端体验",
      "functions": 0,
      "complexity": "low"
    },
    {
      "path": "src/commands.ts",
      "dependents": 32,
      "description": "导入React库，用于JSX命令组件",
      "functions": 2,
      "complexity": "medium"
    },
    {
      "path": "src/query.ts",
      "dependents": 27,
      "description": "从Anthropic SDK导入消息相关类型",
      "functions": 9,
      "complexity": "medium"
    },
    {
      "path": "src/utils/model.ts",
      "dependents": 26,
      "description": "🎯 模型管理核心系统 - Kode 多 AI 模型的统一管理层🏗️ 核心功能：\n- 实现多 AI 模型配置和动态切换管理\n- 提供模型指针系统的统一分发机制\n- 管理上下文窗口和模型兼容性检查\n- 支持动态模型切换和配置热更新🔄 依赖关系：\n- 上游：被查询处理和 AI 服务使用\n- 下游：依赖配置管理和日志系统📊 使用场景：\n- AI 模型的动态选择和切换\n- 不同任务场景的模型优化\n- 上下文溢出的自动处理\n- 模型配置的生命周期管理🔧 技术实现：\n- 单例模式避免配置竞争冲突\n- 支持多种部署方式（Bedrock、Vertex、官方 API）\n- 模型指针抽象适配不同使用场景\n- 上下文溢出自动处理和回退机制🔄 模型指针系统：\n- main: 主对话模型（用户交互）\n- task: 任务工具模型（工具调用）\n- reasoning: 推理模型（复杂逻辑）\n- quick: 快速模型（简单操作）",
      "functions": 3,
      "complexity": "medium"
    },
    {
      "path": "src/utils/config.ts",
      "dependents": 25,
      "description": "🎯 配置管理核心系统 - Kode 应用程序的配置中枢🏗️ 核心功能：\n- 实现多层次配置管理架构（全局/项目级）\n- 提供统一的模型配置文件系统\n- 管理 MCP 服务器配置和集成\n- 支持用户偏好和主题定制🔄 依赖关系：\n- 上游：被整个应用的配置相关功能使用\n- 下游：依赖文件系统、JSON 解析和状态管理📊 使用场景：\n- 应用程序启动时的配置初始化\n- 用户设置的读取和保存\n- 项目特定配置的管理\n- AI 模型配置的动态切换🔧 技术实现：\n- 基于文件系统的持久化存储\n- 类型安全的配置模式验证\n- 配置迁移和向后兼容机制\n- 测试环境的配置隔离支持🏗️ 配置架构：\n- 全局配置：存储在用户主目录 ~/.kode.json\n- 项目配置：存储在全局配置中的projects字段，按项目路径索引\n- MCP配置：支持全局、项目和.mcprc文件三种作用域🔒 安全特性：\n- API密钥安全存储和截断\n- 配置文件解析错误处理\n- 权限和作用域验证\n- 测试环境隔离",
      "functions": 35,
      "complexity": "high"
    },
    {
      "path": "src/utils/env.ts",
      "dependents": 20,
      "description": "",
      "functions": 0,
      "complexity": "low"
    },
    {
      "path": "src/utils/messages.tsx",
      "dependents": 20,
      "description": "消息处理系统核心模块 - 处理用户输入、AI响应和工具使用的消息流转",
      "functions": 23,
      "complexity": "high"
    },
    {
      "path": "src/components/FallbackToolUseRejectedMessage.tsx",
      "dependents": 19,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/services/claude.ts",
      "dependents": 18,
      "description": "🎯 Claude AI 服务集成 - Kode 多 AI 模型调用的统一服务层🏗️ 核心功能：\n- 实现多平台 AI 模型的统一调用接口（Anthropic、OpenAI、Bedrock、Vertex）\n- 提供智能 API 适配和协议转换能力\n- 管理流式响应处理和上下文状态\n- 支持成本计算和使用统计跟踪\n- 集成重试机制和错误恢复策略\n- 优化提示缓存和上下文压缩🔄 依赖关系：\n- 上游：被查询编排系统和工具系统使用\n- 下游：依赖模型管理、配置系统和适配器工厂📊 使用场景：\n- AI 代理的统一模型调用入口\n- 多平台 AI 服务的抽象适配\n- 流式对话和工具调用处理\n- 成本监控和性能分析🔧 技术实现：\n- 多AI平台统一接口：Anthropic原生SDK + OpenAI兼容适配\n- 智能模型适配器工厂：根据模型能力自动选择最优API\n- GPT-5响应API支持：推理模型的高级特性集成\n- 上下文智能管理：自动缓存和压缩策略\n- 实时调试日志：完整的API调用链路追踪🔄 API调用流程：\n1. 模型解析和配置加载（ModelManager）\n2. 系统提示和上下文构建（formatSystemPromptWithContext）\n3. API适配器选择（Anthropic原生/OpenAI兼容）\n4. 流式/非流式调用执行\n5. 响应解析和成本计算\n6. 错误处理和重试机制📊 上游依赖：\n- ../utils/model.ts（模型管理）\n- ../utils/config.ts（配置系统）\n- ./modelAdapterFactory.ts（适配器工厂）📈 下游使用者：\n- ../query.ts（查询编排）\n- ../tools/（各种工具调用）\n- ../components/（UI组件的API调用）",
      "functions": 31,
      "complexity": "high"
    },
    {
      "path": "src/components/CustomSelect/select.tsx",
      "dependents": 17,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/hooks/useExitOnCtrlCD.ts",
      "dependents": 15,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/tools/BashTool/BashTool.tsx",
      "dependents": 13,
      "description": "🎯 Bash 工具实现 - 系统命令执行工具的核心实现🏗️ 核心功能：\n- 提供安全的 Shell 命令执行接口\n- 支持持久化会话和状态管理\n- 集成完整的权限控制和安全检查\n- 实现命令输出的格式化和截断\n- 支持命令超时和中断机制🔄 依赖关系：\n- 上游：被 AI 代理调用执行系统操作\n- 下游：依赖持久化 Shell、权限系统、格式化工具📊 使用场景：\n- 系统命令的安全执行\n- Git 操作和版本控制\n- 文件系统的批量操作\n- 开发工具的集成调用🔧 技术实现：\n- 持久化会话：跨命令的状态保持\n- 安全控制：禁用命令列表和权限验证\n- 输出管理：智能截断和格式化\n- 错误处理：完善的异常捕获和恢复💡 设计原则：\n- 安全第一：严格的命令过滤和权限控制\n- 用户友好：清晰的输出格式和错误提示\n- 性能优化：持久化会话减少启动开销\n- 可控性：超时和中断机制确保系统稳定",
      "functions": 0,
      "complexity": "medium"
    },
    {
      "path": "src/constants/macros.ts",
      "dependents": 12,
      "description": "🎯 宏定义常量 - 动态版本和 URL 配置🏗️ 核心功能：\n- 从 package.json 动态获取版本信息\n- 提供文档和包管理的 URL 链接\n- 统一的错误报告和帮助信息\n- 支持构建时的动态配置注入🔄 依赖关系：\n- 上游：被版本显示和帮助系统使用\n- 下游：依赖 package.json 和 ES 模块系统📊 使用场景：\n- 版本信息显示和检查\n- 帮助文档链接生成\n- 错误报告引导\n- 包管理器链接构建🔧 技术实现：\n- 使用 ES 模块的 createRequire 加载 JSON\n- 动态读取 package.json 版本信息\n- 提供统一的 URL 和消息模板\n- 支持构建时的配置替换",
      "functions": 0,
      "complexity": "low"
    },
    {
      "path": "src/hooks/useTerminalSize.ts",
      "dependents": 12,
      "description": "",
      "functions": 2,
      "complexity": "low"
    },
    {
      "path": "src/services/systemReminder.ts",
      "dependents": 12,
      "description": "系统提醒服务 - 智能上下文提醒和任务状态管理",
      "functions": 0,
      "complexity": "medium"
    },
    {
      "path": "src/utils/permissions/filesystem.ts",
      "dependents": 12,
      "description": "",
      "functions": 11,
      "complexity": "low"
    },
    {
      "path": "src/services/fileFreshness.ts",
      "dependents": 11,
      "description": "文件新鲜度服务 - 文件变更检测和冲突管理系统",
      "functions": 0,
      "complexity": "medium"
    },
    {
      "path": "src/utils/terminal.ts",
      "dependents": 11,
      "description": "",
      "functions": 3,
      "complexity": "low"
    },
    {
      "path": "src/context.ts",
      "dependents": 10,
      "description": "",
      "functions": 3,
      "complexity": "medium"
    },
    {
      "path": "src/tools/NotebookEditTool/NotebookEditTool.tsx",
      "dependents": 9,
      "description": "🎯 Notebook 编辑工具实现 - Jupyter Notebook 专用编辑工具🏗️ 核心功能：\n- 提供 Jupyter Notebook 单元格的精确编辑能力\n- 支持代码和 Markdown 单元格的类型管理\n- 集成单元格的增删改操作和状态管理\n- 实现 Notebook 格式的完整性验证\n- 生成详细的编辑操作反馈和预览🔄 依赖关系：\n- 上游：被 AI 代理调用进行 Notebook 文件编辑\n- 下游：依赖文件系统、JSON 解析、权限管理📊 使用场景：\n- 数据科学项目的代码单元格修改\n- 文档单元格的内容更新和调整\n- Notebook 结构的重组和优化\n- 代码执行结果的清理和重置🔧 技术实现：\n- 格式验证：确保 Notebook JSON 结构完整性\n- 单元格操作：支持替换、插入、删除三种模式\n- 类型管理：自动处理代码和文档单元格差异\n- 状态重置：清理执行计数和输出结果\n- 编码保持：维持原文件的编码和格式💡 设计原则：\n- 专业化：专门针对 Jupyter Notebook 格式优化\n- 完整性：保持 Notebook 的结构和元数据完整\n- 灵活操作：支持多种编辑模式和单元格类型\n- 安全可靠：严格的格式验证和错误处理",
      "functions": 0,
      "complexity": "medium"
    },
    {
      "path": "src/utils/execFileNoThrow.ts",
      "dependents": 9,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/permissions.ts",
      "dependents": 8,
      "description": "🎯 权限管理系统 - Kode 安全架构的核心组件🏗️ 核心功能：\n- 实现细粒度的工具权限控制机制\n- 提供命令注入检测和安全验证\n- 管理持久化和会话级权限存储\n- 支持安全模式和权限升级流程🔄 依赖关系：\n- 上游：被工具系统和用户交互钩子使用\n- 下游：依赖工具接口、配置管理和文件系统权限📊 使用场景：\n- 工具执行前的权限验证\n- 用户权限授权的安全检查\n- 命令行工具的安全执行控制\n- 文件编辑权限的动态管理🔧 技术实现：\n- 基于白名单的权限控制策略\n- 命令前缀匹配和精确匹配机制\n- 分层权限存储（磁盘持久化 + 内存会话）\n- 命令注入检测和防护机制",
      "functions": 2,
      "complexity": "medium"
    },
    {
      "path": "src/services/mcpClient.ts",
      "dependents": 8,
      "description": "🎯 MCP 客户端服务 - 模型上下文协议的核心集成层🏗️ 核心功能：\n- 实现 MCP (Model Context Protocol) 协议的客户端集成\n- 提供多作用域的 MCP 服务器配置管理\n- 建立和维护与 MCP 服务器的连接池\n- 将 MCP 工具和提示转换为 Kode 统一格式\n- 支持多传输协议和错误恢复机制🔄 依赖关系：\n- 上游：被工具系统和命令系统使用\n- 下游：依赖配置管理和日志系统📊 使用场景：\n- 外部工具的 MCP 协议集成\n- 分布式 AI 服务的统一访问\n- 跨项目的工具共享和管理\n- 安全的外部资源访问控制🔧 技术实现：\n- 协议抽象：MCP 协议的完整实现\n- 传输层支持：stdio 和 SSE 多传输方式\n- 连接池管理：自动重连和故障转移\n- 权限控制：基于作用域的访问管理\n- 错误恢复：连接超时和重试机制🌐 MCP (Model Context Protocol) 协议特性：\n- 让 AI 模型安全地访问外部数据和工具\n- 标准化 AI 应用与外部服务的集成方式\n- 支持工具调用、提示模板、资源访问等功能📁 支持的配置作用域：\n- project: 项目级配置 (.kode.json)\n- global: 全局配置 (~/.kode.json)\n- mcprc: 项目根目录的 .mcprc 文件🔌 支持的传输协议：\n- stdio: 标准输入输出（子进程）\n- sse: 服务器发送事件（HTTP）",
      "functions": 11,
      "complexity": "medium"
    },
    {
      "path": "src/tools/FileWriteTool/FileWriteTool.tsx",
      "dependents": 8,
      "description": "🎯 文件写入工具实现 - 完整文件创建和覆盖的核心工具🏗️ 核心功能：\n- 提供完整的文件创建和内容替换能力\n- 支持自动编码检测和换行符保持\n- 集成差异对比和变更可视化展示\n- 实现文件修改时间跟踪和冲突检测\n- 生成详细的操作结果反馈和预览🔄 依赖关系：\n- 上游：被 AI 代理调用进行完整文件写入\n- 下游：依赖文件系统、差异处理、权限管理📊 使用场景：\n- 新文件的创建和初始化\n- 现有文件的完整内容替换\n- 代码生成和模板文件创建\n- 配置文件的批量更新操作🔧 技术实现：\n- 智能覆盖：区分文件创建和更新操作\n- 编码保持：维持原文件的编码格式\n- 差异展示：生成详细的修改前后对比\n- 冲突检测：验证文件修改时间戳避免冲突\n- 权限验证：确保写入操作的安全性💡 设计原则：\n- 操作明确：清晰区分创建和更新场景\n- 安全可控：严格的权限检查和冲突预防\n- 用户友好：详细的操作反馈和差异展示\n- 格式保持：维护文件的原有编码和格式",
      "functions": 0,
      "complexity": "medium"
    },
    {
      "path": "src/utils/debugLogger.ts",
      "dependents": 8,
      "description": "",
      "functions": 23,
      "complexity": "high"
    },
    {
      "path": "src/utils/file.ts",
      "dependents": 8,
      "description": "",
      "functions": 18,
      "complexity": "medium"
    },
    {
      "path": "src/components/StructuredDiff.tsx",
      "dependents": 7,
      "description": "",
      "functions": 4,
      "complexity": "low"
    },
    {
      "path": "src/messages.ts",
      "dependents": 7,
      "description": "",
      "functions": 6,
      "complexity": "low"
    },
    {
      "path": "src/tools/FileEditTool/FileEditTool.tsx",
      "dependents": 7,
      "description": "🎯 文件编辑工具实现 - 精确文本替换的核心文件修改工具🏗️ 核心功能：\n- 提供精确的字符串替换文件修改能力\n- 支持全编码格式的文件读写操作\n- 集成完整的权限控制和安全验证\n- 实现智能的文件更改跟踪和冲突检测\n- 生成结构化的修改差异展示🔄 依赖关系：\n- 上游：被 AI 代理调用进行文件编辑操作\n- 下游：依赖文件系统工具、权限管理、差异处理📊 使用场景：\n- 代码文件的精确修改和重构\n- 配置文件的更新和调整\n- 文档内容的编辑和维护\n- 批量文件内容的标准化处理🔧 技术实现：\n- 唯一性验证：确保替换字符串在文件中唯一存在\n- 编码检测：自动识别并保持文件原始编码格式\n- 时间戳检测：防止并发修改导致的内容冲突\n- 差异生成：生成结构化的修改前后对比视图\n- 权限控制：集成文件写入权限的安全检查💡 设计原则：\n- 精确性：只替换指定的唯一字符串匹配\n- 安全性：严格的权限控制和文件状态验证\n- 可视化：清晰的修改差异展示和确认\n- 兼容性：支持各种编码格式和换行符风格",
      "functions": 1,
      "complexity": "medium"
    },
    {
      "path": "src/tools/FileReadTool/FileReadTool.tsx",
      "dependents": 7,
      "description": "🎯 文件读取工具实现 - 多格式文件内容读取的核心工具🏗️ 核心功能：\n- 提供统一的文件读取接口支持文本和图片\n- 实现智能文件大小检测和分页读取\n- 集成图像处理和压缩优化功能\n- 支持完整的文件权限控制和安全验证\n- 生成格式化的代码高亮显示🔄 依赖关系：\n- 上游：被 AI 代理调用进行文件内容读取\n- 下游：依赖文件系统、图像处理库、权限管理📊 使用场景：\n- 源代码文件的内容分析和理解\n- 配置文件和文档的内容检查\n- 图片文件的视觉内容处理\n- 大文件的分段读取和浏览🔧 技术实现：\n- 自适应读取：根据文件大小自动选择读取策略\n- 图像优化：自动压缩和调整图片尺寸\n- 语法高亮：基于文件扩展名的代码着色\n- 分页支持：大文件的偏移量和限制参数\n- 编码检测：自动识别和处理各种文件编码💡 设计原则：\n- 性能优化：避免大文件导致的内存溢出\n- 用户体验：清晰的内容展示和格式化\n- 安全可控：严格的文件访问权限控制\n- 兼容全面：支持文本、图像等多种格式",
      "functions": 2,
      "complexity": "medium"
    },
    {
      "path": "src/tools/GlobTool/GlobTool.tsx",
      "dependents": 7,
      "description": "🎯 Glob 匹配工具实现 - 快速文件模式匹配的核心工具🏗️ 核心功能：\n- 提供高效的文件名模式匹配搜索\n- 支持标准 Glob 语法的完整实现\n- 集成智能文件发现和路径解析\n- 实现按修改时间的结果排序\n- 生成详细的搜索性能统计🔄 依赖关系：\n- 上游：被 AI 代理调用进行文件名匹配搜索\n- 下游：依赖文件系统遍历、权限验证系统📊 使用场景：\n- 特定文件类型的批量发现\n- 文件名模式的快速匹配查找\n- 项目结构的探索和分析\n- 代码库文件的组织和分类🔧 技术实现：\n- 模式匹配：支持通配符和复杂路径模式\n- 性能优化：限制结果数量防止内存溢出\n- 智能排序：按文件修改时间排序结果\n- 路径处理：自动处理绝对路径和相对路径\n- 权限集成：确保搜索路径的访问权限💡 设计原则：\n- 快速响应：适配大型代码库的文件发现\n- 模式灵活：支持复杂的 Glob 匹配表达式\n- 结果精准：准确的文件名和路径匹配\n- 用户友好：清晰的匹配结果展示",
      "functions": 0,
      "complexity": "medium"
    },
    {
      "path": "src/tools/lsTool/lsTool.tsx",
      "dependents": 7,
      "description": "",
      "functions": 4,
      "complexity": "medium"
    },
    {
      "path": "src/utils/agentLoader.ts",
      "dependents": 7,
      "description": "Agent configuration loader\nLoads agent configurations from markdown files with YAML frontmatter\nFollowing Claude Code's agent system architecture",
      "functions": 6,
      "complexity": "medium"
    },
    {
      "path": "src/utils/unaryLogging.ts",
      "dependents": 7,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/components/Cost.tsx",
      "dependents": 6,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/tools/GrepTool/GrepTool.tsx",
      "dependents": 6,
      "description": "🎯 Grep 搜索工具实现 - 高性能内容搜索的核心工具🏗️ 核心功能：\n- 提供基于正则表达式的快速文件内容搜索\n- 支持大规模代码库的高效搜索操作\n- 集成文件类型过滤和路径限制功能\n- 实现智能结果排序和数量限制\n- 生成详细的搜索统计和性能报告🔄 依赖关系：\n- 上游：被 AI 代理调用进行代码库内容搜索\n- 下游：依赖 ripgrep 搜索引擎、文件系统权限📊 使用场景：\n- 代码库中特定模式的快速定位\n- 函数定义和引用的批量查找\n- 配置文件中特定设置的搜索\n- 大型项目的内容分析和统计🔧 技术实现：\n- Ripgrep 集成：利用 Rust 高性能搜索引擎\n- 模式过滤：支持正则表达式和文件模式匹配\n- 智能排序：按文件修改时间排序结果\n- 性能监控：记录搜索耗时和结果统计\n- 权限控制：集成文件读取权限验证💡 设计原则：\n- 性能优先：适配任意规模的代码库搜索\n- 结果精准：精确的正则表达式匹配\n- 用户友好：清晰的搜索结果展示\n- 扩展灵活：支持多种过滤和排序选项",
      "functions": 0,
      "complexity": "medium"
    },
    {
      "path": "src/types/modelCapabilities.ts",
      "dependents": 6,
      "description": "🎯 模型能力类型定义 - 统一 API 支持的完整框架🏗️ 核心功能：\n- 定义不同 AI 模型的能力和限制\n- 提供统一的请求和响应接口\n- 支持多种 API 架构的适配和回退\n- 管理工具调用和状态管理能力🔄 依赖关系：\n- 上游：被模型适配器和服务层使用\n- 下游：适配各种 AI 模型 API（OpenAI、Anthropic 等）📊 使用场景：\n- 多模型支持的统一接口实现\n- 模型能力检测和功能启用\n- API 调用参数的标准化处理\n- 不同模型间的兼容性管理🔧 技术实现：\n- 支持 Chat Completions 和 Responses API 两种架构\n- 完整的工具调用能力定义\n- 灵活的参数映射和适配机制\n- 统一的流式传输和状态管理",
      "functions": 0,
      "complexity": "low"
    },
    {
      "path": "src/utils/array.ts",
      "dependents": 6,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/utils/errors.ts",
      "dependents": 6,
      "description": "",
      "functions": 0,
      "complexity": "low"
    },
    {
      "path": "src/components/HighlightedCode.tsx",
      "dependents": 5,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/components/permissions/PermissionRequest.tsx",
      "dependents": 5,
      "description": "🛡️ 权限请求管理系统 - 工具使用权限的统一管理和用户交互界面架构图：\n┌─────────────────────────────────────────────────────────────────┐\n│                    权限请求管理系统架构                              │\n├─────────────────────────────────────────────────────────────────┤\n│ 工具识别 → 组件选择 → 权限界面 → 用户决策 → 权限执行              │\n└─────────────────────────────────────────────────────────────────┘核心功能：\n1. 🎯 工具类型识别：根据工具类型自动选择对应的权限请求组件\n2. 🔒 权限验证：统一的权限检查和用户确认流程\n3. 🎨 界面分发：为不同工具提供定制化的权限请求界面\n4. ⚠️ 风险评估：集成风险评分系统，提供安全警告\n5. 💾 权限记忆：支持临时和永久权限授权机制",
      "functions": 3,
      "complexity": "medium"
    },
    {
      "path": "src/constants/prompts.ts",
      "dependents": 5,
      "description": "",
      "functions": 4,
      "complexity": "low"
    },
    {
      "path": "src/utils/agentStorage.ts",
      "dependents": 5,
      "description": "",
      "functions": 8,
      "complexity": "low"
    },
    {
      "path": "src/utils/commands.ts",
      "dependents": 5,
      "description": "",
      "functions": 3,
      "complexity": "low"
    },
    {
      "path": "src/utils/diff.ts",
      "dependents": 5,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/utils/generators.ts",
      "dependents": 5,
      "description": "",
      "functions": 2,
      "complexity": "low"
    },
    {
      "path": "src/utils/git.ts",
      "dependents": 5,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/utils/json.ts",
      "dependents": 5,
      "description": "",
      "functions": 1,
      "complexity": "low"
    },
    {
      "path": "src/commands/terminalSetup.ts",
      "dependents": 4,
      "description": "导入命令接口定义",
      "functions": 4,
      "complexity": "medium"
    }
  ],
  "utilityModules": [
    "src/constants/figures.ts",
    "src/constants/macros.ts",
    "src/constants/modelCapabilities.ts",
    "src/constants/models.ts",
    "src/constants/product.ts",
    "src/constants/prompts.ts",
    "src/constants/releaseNotes.ts",
    "src/utils/agentLoader.ts",
    "src/utils/agentStorage.ts",
    "src/utils/array.ts",
    "src/utils/auth.ts",
    "src/utils/browser.ts",
    "src/utils/commands.ts",
    "src/utils/config.ts",
    "src/utils/conversationRecovery.ts",
    "src/utils/debugLogger.ts",
    "src/utils/diff.ts",
    "src/utils/env.ts",
    "src/utils/errors.ts",
    "src/utils/exampleCommands.ts",
    "src/utils/execFileNoThrow.ts",
    "src/utils/file.ts",
    "src/utils/format.tsx",
    "src/utils/generators.ts",
    "src/utils/git.ts",
    "src/utils/http.ts",
    "src/utils/json.ts",
    "src/utils/log.ts",
    "src/utils/markdown.ts",
    "src/utils/messages.tsx",
    "src/utils/model.ts",
    "src/utils/permissions/filesystem.ts",
    "src/utils/PersistentShell.ts",
    "src/utils/ripgrep.ts",
    "src/utils/sessionState.ts",
    "src/utils/state.ts",
    "src/utils/style.ts",
    "src/utils/terminal.ts",
    "src/utils/theme.ts",
    "src/utils/thinking.ts",
    "src/utils/todoStorage.ts",
    "src/utils/tokens.ts",
    "src/utils/unaryLogging.ts"
  ],
  "beginner": {
    "startWith": [
      "src/index.ts",
      "src/services/sentry.ts",
      "src/constants/product.ts",
      "src/history.ts",
      "src/types/logs.ts"
    ],
    "avoidInitially": [
      "src/commands/agents.tsx",
      "src/components/ModelSelector.tsx",
      "src/services/claude.ts",
      "src/utils/config.ts",
      "src/utils/debugLogger.ts"
    ]
  }
}