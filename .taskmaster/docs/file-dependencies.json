{
  "metadata": {
    "totalFiles": 273,
    "analysisDate": "2025-09-15T15:04:56.201Z",
    "srcDirectory": "src"
  },
  "files": [
    {
      "path": "commands\\agents.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\agents.tsx",
      "imports": [
        "react",
        "ink",
        "ink-text-input",
        "utils\\agentLoader.ts",
        "utils\\agentLoader.ts",
        "fs",
        "path",
        "path",
        "os",
        "os",
        "utils\\state.ts",
        "utils\\theme.ts",
        "gray-matter",
        "child_process",
        "util",
        "fs",
        "services\\mcpClient.ts",
        "utils\\model.ts",
        "crypto",
        "path"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "ink-text-input",
          "resolvedPath": null,
          "relativePath": "ink-text-input"
        },
        {
          "importPath": "../utils/agentLoader",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentLoader.ts",
          "relativePath": "utils\\agentLoader.ts"
        },
        {
          "importPath": "../utils/agentLoader",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentLoader.ts",
          "relativePath": "utils\\agentLoader.ts"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "gray-matter",
          "resolvedPath": null,
          "relativePath": "gray-matter"
        },
        {
          "importPath": "child_process",
          "resolvedPath": null,
          "relativePath": "child_process"
        },
        {
          "importPath": "util",
          "resolvedPath": null,
          "relativePath": "util"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "../services/mcpClient",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\mcpClient.ts",
          "relativePath": "services\\mcpClient.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        }
      ],
      "dependencyCount": 20,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\approvedTools.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\approvedTools.ts",
      "imports": [],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "commands\\bug.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\bug.tsx",
      "imports": [
        "commands",
        "components\\Bug.tsx",
        "react",
        "constants\\product.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../components/Bug",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Bug.tsx",
          "relativePath": "components\\Bug.tsx"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\clear.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\clear.ts",
      "imports": [
        "commands",
        "messages.ts",
        "context",
        "utils\\style.ts",
        "utils\\terminal.ts",
        "utils\\state.ts",
        "query.ts",
        "services\\systemReminder.ts",
        "services\\fileFreshness.ts"
      ],
      "importedBy": [
        "commands\\login.tsx",
        "commands\\onboarding.tsx",
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\messages.ts",
          "relativePath": "messages.ts"
        },
        {
          "importPath": "../context",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context",
          "relativePath": "context"
        },
        {
          "importPath": "../utils/style",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\style.ts",
          "relativePath": "utils\\style.ts"
        },
        {
          "importPath": "../utils/terminal",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
          "relativePath": "utils\\terminal.ts"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../services/systemReminder",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
          "relativePath": "services\\systemReminder.ts"
        },
        {
          "importPath": "../services/fileFreshness",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\fileFreshness.ts",
          "relativePath": "services\\fileFreshness.ts"
        }
      ],
      "dependencyCount": 9,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "commands\\compact.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\compact.ts",
      "imports": [
        "commands",
        "context",
        "messages.ts",
        "services\\claude.ts",
        "utils\\style.ts",
        "utils\\terminal.ts",
        "services\\systemReminder.ts",
        "services\\fileFreshness.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../context",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context",
          "relativePath": "context"
        },
        {
          "importPath": "../messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\messages.ts",
          "relativePath": "messages.ts"
        },
        {
          "importPath": "../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        },
        {
          "importPath": "../utils/style",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\style.ts",
          "relativePath": "utils\\style.ts"
        },
        {
          "importPath": "../utils/terminal",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
          "relativePath": "utils\\terminal.ts"
        },
        {
          "importPath": "../services/systemReminder",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
          "relativePath": "services\\systemReminder.ts"
        },
        {
          "importPath": "../services/fileFreshness",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\fileFreshness.ts",
          "relativePath": "services\\fileFreshness.ts"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\config.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\config.tsx",
      "imports": [
        "commands",
        "components\\Config.tsx",
        "react"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../components/Config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Config.tsx",
          "relativePath": "components\\Config.tsx"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\cost.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\cost.ts",
      "imports": [
        "commands",
        "cost-tracker.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../cost-tracker",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\cost-tracker.ts",
          "relativePath": "cost-tracker.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\ctx_viz.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\ctx_viz.ts",
      "imports": [
        "commands",
        "Tool.ts",
        "cli-table3",
        "constants\\prompts.ts",
        "context",
        "zod-to-json-schema",
        "messages.ts",
        "constants\\product.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "cli-table3",
          "resolvedPath": null,
          "relativePath": "cli-table3"
        },
        {
          "importPath": "../constants/prompts",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\prompts.ts",
          "relativePath": "constants\\prompts.ts"
        },
        {
          "importPath": "../context",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context",
          "relativePath": "context"
        },
        {
          "importPath": "zod-to-json-schema",
          "resolvedPath": null,
          "relativePath": "zod-to-json-schema"
        },
        {
          "importPath": "../messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\messages.ts",
          "relativePath": "messages.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\doctor.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\doctor.ts",
      "imports": [
        "react",
        "commands",
        "screens\\Doctor.tsx",
        "constants\\product.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../screens/Doctor",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\screens\\Doctor.tsx",
          "relativePath": "screens\\Doctor.tsx"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\help.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\help.tsx",
      "imports": [
        "commands",
        "components\\Help.tsx",
        "react"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../components/Help",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Help.tsx",
          "relativePath": "components\\Help.tsx"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\init.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\init.ts",
      "imports": [
        "commands",
        "ProjectOnboarding.tsx",
        "constants\\product.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../ProjectOnboarding",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\ProjectOnboarding.tsx",
          "relativePath": "ProjectOnboarding.tsx"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\listen.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\listen.ts",
      "imports": [
        "commands",
        "utils\\log.ts",
        "utils\\execFileNoThrow.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../utils/execFileNoThrow",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\execFileNoThrow.ts",
          "relativePath": "utils\\execFileNoThrow.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\login.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\login.tsx",
      "imports": [
        "react",
        "commands",
        "components\\ConsoleOAuthFlow.tsx",
        "utils\\terminal.ts",
        "utils\\auth.ts",
        "hooks\\useExitOnCtrlCD.ts",
        "ink",
        "commands\\clear.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../components/ConsoleOAuthFlow",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ConsoleOAuthFlow.tsx",
          "relativePath": "components\\ConsoleOAuthFlow.tsx"
        },
        {
          "importPath": "../utils/terminal",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
          "relativePath": "utils\\terminal.ts"
        },
        {
          "importPath": "../utils/auth",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\auth.ts",
          "relativePath": "utils\\auth.ts"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "./clear",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\clear.ts",
          "relativePath": "commands\\clear.ts"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\logout.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\logout.tsx",
      "imports": [
        "react",
        "commands",
        "utils\\config.ts",
        "utils\\terminal.ts",
        "ink"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../utils/terminal",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
          "relativePath": "utils\\terminal.ts"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\mcp.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\mcp.ts",
      "imports": [
        "commands",
        "services\\mcpClient.ts",
        "constants\\product.ts",
        "chalk",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../services/mcpClient",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\mcpClient.ts",
          "relativePath": "services\\mcpClient.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\model.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\model.tsx",
      "imports": [
        "react",
        "ink",
        "components\\ModelConfig.tsx",
        "utils\\config.ts",
        "messages.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../components/ModelConfig",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModelConfig.tsx",
          "relativePath": "components\\ModelConfig.tsx"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\messages.ts",
          "relativePath": "messages.ts"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\modelstatus.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\modelstatus.tsx",
      "imports": [
        "react",
        "commands",
        "components\\ModelStatusDisplay.tsx"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../components/ModelStatusDisplay",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModelStatusDisplay.tsx",
          "relativePath": "components\\ModelStatusDisplay.tsx"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\onboarding.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\onboarding.tsx",
      "imports": [
        "react",
        "commands",
        "components\\Onboarding.tsx",
        "utils\\terminal.ts",
        "utils\\config.ts",
        "commands\\clear.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../components/Onboarding",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Onboarding.tsx",
          "relativePath": "components\\Onboarding.tsx"
        },
        {
          "importPath": "../utils/terminal",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
          "relativePath": "utils\\terminal.ts"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "./clear",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\clear.ts",
          "relativePath": "commands\\clear.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\pr_comments.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\pr_comments.ts",
      "imports": [
        "commands"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\refreshCommands.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\refreshCommands.ts",
      "imports": [
        "commands",
        "services\\customCommands.ts",
        "commands"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../services/customCommands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\customCommands.ts",
          "relativePath": "services\\customCommands.ts"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\release-notes.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\release-notes.ts",
      "imports": [
        "commands",
        "constants\\releaseNotes.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../constants/releaseNotes",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\releaseNotes.ts",
          "relativePath": "constants\\releaseNotes.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\resume.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\resume.tsx",
      "imports": [
        "react",
        "commands",
        "screens\\ResumeConversation.tsx",
        "ink",
        "utils\\log.ts"
      ],
      "importedBy": [
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../screens/ResumeConversation",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\screens\\ResumeConversation.tsx",
          "relativePath": "screens\\ResumeConversation.tsx"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "commands\\review.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\review.ts",
      "imports": [
        "commands",
        "tools\\BashTool\\BashTool.tsx"
      ],
      "importedBy": [
        "commands.ts",
        "entrypoints\\mcp.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../tools/BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "commands\\terminalSetup.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\terminalSetup.ts",
      "imports": [
        "commands",
        "os",
        "utils\\execFileNoThrow.ts",
        "chalk",
        "utils\\theme.ts",
        "utils\\env.ts",
        "utils\\config.ts",
        "ProjectOnboarding.tsx",
        "fs",
        "path",
        "utils\\json.ts",
        "utils\\log.ts"
      ],
      "importedBy": [
        "commands.ts",
        "ProjectOnboarding.tsx",
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "../utils/execFileNoThrow",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\execFileNoThrow.ts",
          "relativePath": "utils\\execFileNoThrow.ts"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../ProjectOnboarding",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\ProjectOnboarding.tsx",
          "relativePath": "ProjectOnboarding.tsx"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../utils/json",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\json.ts",
          "relativePath": "utils\\json.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 12,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "commands.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands.ts",
      "imports": [
        "react",
        "commands\\bug.tsx",
        "commands\\clear.ts",
        "commands\\compact.ts",
        "commands\\config.tsx",
        "commands\\cost.ts",
        "commands\\ctx_viz.ts",
        "commands\\doctor.ts",
        "commands\\help.tsx",
        "commands\\init.ts",
        "commands\\listen.ts",
        "commands\\login.tsx",
        "commands\\logout.tsx",
        "commands\\mcp.ts",
        "commands\\model.tsx",
        "commands\\modelstatus.tsx",
        "commands\\onboarding.tsx",
        "commands\\pr_comments.ts",
        "commands\\refreshCommands.ts",
        "commands\\release-notes.ts",
        "commands\\review.ts",
        "commands\\terminalSetup.ts",
        "Tool.ts",
        "commands\\resume.tsx",
        "commands\\agents.tsx",
        "services\\mcpClient.ts",
        "services\\customCommands.ts",
        "lodash-es",
        "query.ts",
        "utils\\auth.ts"
      ],
      "importedBy": [],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "./commands/bug",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\bug.tsx",
          "relativePath": "commands\\bug.tsx"
        },
        {
          "importPath": "./commands/clear",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\clear.ts",
          "relativePath": "commands\\clear.ts"
        },
        {
          "importPath": "./commands/compact",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\compact.ts",
          "relativePath": "commands\\compact.ts"
        },
        {
          "importPath": "./commands/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\config.tsx",
          "relativePath": "commands\\config.tsx"
        },
        {
          "importPath": "./commands/cost",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\cost.ts",
          "relativePath": "commands\\cost.ts"
        },
        {
          "importPath": "./commands/ctx_viz",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\ctx_viz.ts",
          "relativePath": "commands\\ctx_viz.ts"
        },
        {
          "importPath": "./commands/doctor",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\doctor.ts",
          "relativePath": "commands\\doctor.ts"
        },
        {
          "importPath": "./commands/help",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\help.tsx",
          "relativePath": "commands\\help.tsx"
        },
        {
          "importPath": "./commands/init",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\init.ts",
          "relativePath": "commands\\init.ts"
        },
        {
          "importPath": "./commands/listen",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\listen.ts",
          "relativePath": "commands\\listen.ts"
        },
        {
          "importPath": "./commands/login",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\login.tsx",
          "relativePath": "commands\\login.tsx"
        },
        {
          "importPath": "./commands/logout",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\logout.tsx",
          "relativePath": "commands\\logout.tsx"
        },
        {
          "importPath": "./commands/mcp",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\mcp.ts",
          "relativePath": "commands\\mcp.ts"
        },
        {
          "importPath": "./commands/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\model.tsx",
          "relativePath": "commands\\model.tsx"
        },
        {
          "importPath": "./commands/modelstatus",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\modelstatus.tsx",
          "relativePath": "commands\\modelstatus.tsx"
        },
        {
          "importPath": "./commands/onboarding",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\onboarding.tsx",
          "relativePath": "commands\\onboarding.tsx"
        },
        {
          "importPath": "./commands/pr_comments",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\pr_comments.ts",
          "relativePath": "commands\\pr_comments.ts"
        },
        {
          "importPath": "./commands/refreshCommands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\refreshCommands.ts",
          "relativePath": "commands\\refreshCommands.ts"
        },
        {
          "importPath": "./commands/release-notes",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\release-notes.ts",
          "relativePath": "commands\\release-notes.ts"
        },
        {
          "importPath": "./commands/review",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\review.ts",
          "relativePath": "commands\\review.ts"
        },
        {
          "importPath": "./commands/terminalSetup",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\terminalSetup.ts",
          "relativePath": "commands\\terminalSetup.ts"
        },
        {
          "importPath": "./Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "./commands/resume",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\resume.tsx",
          "relativePath": "commands\\resume.tsx"
        },
        {
          "importPath": "./commands/agents",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\agents.tsx",
          "relativePath": "commands\\agents.tsx"
        },
        {
          "importPath": "./services/mcpClient",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\mcpClient.ts",
          "relativePath": "services\\mcpClient.ts"
        },
        {
          "importPath": "./services/customCommands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\customCommands.ts",
          "relativePath": "services\\customCommands.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "./query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "./utils/auth",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\auth.ts",
          "relativePath": "utils\\auth.ts"
        }
      ],
      "dependencyCount": 30,
      "dependentCount": 0,
      "importanceScore": 9
    },
    {
      "path": "components\\ApproveApiKey.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ApproveApiKey.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\config.ts",
        "utils\\theme.ts",
        "components\\CustomSelect\\select.tsx",
        "hooks\\useExitOnCtrlCD.ts",
        "chalk"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        }
      ],
      "dependencyCount": 7,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\AsciiLogo.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\AsciiLogo.tsx",
      "imports": [
        "ink",
        "react",
        "utils\\theme.ts",
        "constants\\product.ts"
      ],
      "importedBy": [
        "components\\ConsoleOAuthFlow.tsx",
        "components\\Logo.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "components\\binary-feedback\\BinaryFeedback.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\binary-feedback\\BinaryFeedback.tsx",
      "imports": [
        "react",
        "hooks\\useNotifyAfterTimeout.ts",
        "query.ts",
        "Tool.ts",
        "utils\\messages.tsx",
        "components\\binary-feedback\\BinaryFeedbackView.tsx",
        "constants\\product.ts"
      ],
      "importedBy": [
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../hooks/useNotifyAfterTimeout",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useNotifyAfterTimeout.ts",
          "relativePath": "hooks\\useNotifyAfterTimeout.ts"
        },
        {
          "importPath": "../../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "./BinaryFeedbackView",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\binary-feedback\\BinaryFeedbackView.tsx",
          "relativePath": "components\\binary-feedback\\BinaryFeedbackView.tsx"
        },
        {
          "importPath": "../../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 7,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\binary-feedback\\BinaryFeedbackOption.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\binary-feedback\\BinaryFeedbackOption.tsx",
      "imports": [
        "tools\\FileEditTool\\FileEditTool.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
        "components\\Message.tsx",
        "Tool.ts",
        "hooks\\useTerminalSize.ts",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
        "query.ts",
        "react",
        "ink"
      ],
      "importedBy": [
        "components\\binary-feedback\\BinaryFeedbackView.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../../tools/FileEditTool/FileEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\FileEditTool.tsx",
          "relativePath": "tools\\FileEditTool\\FileEditTool.tsx"
        },
        {
          "importPath": "../permissions/FileEditPermissionRequest/FileEditToolDiff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
          "relativePath": "components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx"
        },
        {
          "importPath": "../Message",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Message.tsx",
          "relativePath": "components\\Message.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        },
        {
          "importPath": "../../tools/FileWriteTool/FileWriteTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileWriteTool\\FileWriteTool.tsx",
          "relativePath": "tools\\FileWriteTool\\FileWriteTool.tsx"
        },
        {
          "importPath": "../permissions/FileWritePermissionRequest/FileWriteToolDiff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
          "relativePath": "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx"
        },
        {
          "importPath": "../../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        }
      ],
      "dependencyCount": 10,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\binary-feedback\\BinaryFeedbackView.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\binary-feedback\\BinaryFeedbackView.tsx",
      "imports": [
        "chalk",
        "ink",
        "ink-link",
        "react",
        "utils\\theme.ts",
        "components\\CustomSelect\\select.tsx",
        "Tool.ts",
        "utils\\messages.tsx",
        "components\\binary-feedback\\BinaryFeedbackOption.tsx",
        "query.ts",
        "components\\binary-feedback\\utils.ts",
        "hooks\\useExitOnCtrlCD.ts",
        "components\\binary-feedback\\utils.ts",
        "constants\\product.ts"
      ],
      "importedBy": [
        "components\\binary-feedback\\BinaryFeedback.tsx"
      ],
      "externalImports": [
        "@inkjs/ui"
      ],
      "internalImports": [
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "ink-link",
          "resolvedPath": null,
          "relativePath": "ink-link"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "./BinaryFeedbackOption",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\binary-feedback\\BinaryFeedbackOption.tsx",
          "relativePath": "components\\binary-feedback\\BinaryFeedbackOption.tsx"
        },
        {
          "importPath": "../../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "./utils",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\binary-feedback\\utils.ts",
          "relativePath": "components\\binary-feedback\\utils.ts"
        },
        {
          "importPath": "../../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        },
        {
          "importPath": "./utils",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\binary-feedback\\utils.ts",
          "relativePath": "components\\binary-feedback\\utils.ts"
        },
        {
          "importPath": "../../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 14,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\binary-feedback\\utils.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\binary-feedback\\utils.ts",
      "imports": [
        "query.ts",
        "services\\claude.ts",
        "lodash-es",
        "utils\\git.ts"
      ],
      "importedBy": [
        "components\\binary-feedback\\BinaryFeedbackView.tsx",
        "components\\binary-feedback\\BinaryFeedbackView.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "../../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "../../utils/git",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\git.ts",
          "relativePath": "utils\\git.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "components\\Bug.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Bug.tsx",
      "imports": [
        "ink",
        "react",
        "react",
        "utils\\theme.ts",
        "messages.ts",
        "query.ts",
        "components\\TextInput.tsx",
        "utils\\log.ts",
        "utils\\env.ts",
        "utils\\git.ts",
        "hooks\\useTerminalSize.ts",
        "utils\\config.ts",
        "utils\\http.ts",
        "constants\\product.ts",
        "services\\claude.ts",
        "utils\\browser.ts",
        "hooks\\useExitOnCtrlCD.ts",
        "constants\\macros.ts",
        "constants\\product.ts"
      ],
      "importedBy": [
        "commands\\bug.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\messages.ts",
          "relativePath": "messages.ts"
        },
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "./TextInput",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\TextInput.tsx",
          "relativePath": "components\\TextInput.tsx"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "../utils/git",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\git.ts",
          "relativePath": "utils\\git.ts"
        },
        {
          "importPath": "../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../utils/http",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\http.ts",
          "relativePath": "utils\\http.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        },
        {
          "importPath": "../utils/browser",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\browser.ts",
          "relativePath": "utils\\browser.ts"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        },
        {
          "importPath": "../constants/macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 19,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\Config.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Config.tsx",
      "imports": [
        "ink",
        "react",
        "react",
        "figures",
        "utils\\theme.ts",
        "chalk",
        "hooks\\useExitOnCtrlCD.ts",
        "utils\\model.ts"
      ],
      "importedBy": [
        "commands\\config.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "figures",
          "resolvedPath": null,
          "relativePath": "figures"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\ConsoleOAuthFlow.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ConsoleOAuthFlow.tsx",
      "imports": [
        "react",
        "ink",
        "components\\TextInput.tsx",
        "services\\oauth.ts",
        "utils\\theme.ts",
        "components\\AsciiLogo.tsx",
        "hooks\\useTerminalSize.ts",
        "utils\\log.ts",
        "utils\\terminal.ts",
        "components\\Spinner.tsx",
        "components\\Onboarding.tsx",
        "constants\\product.ts",
        "services\\notifier.ts"
      ],
      "importedBy": [
        "commands\\login.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "./TextInput",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\TextInput.tsx",
          "relativePath": "components\\TextInput.tsx"
        },
        {
          "importPath": "../services/oauth",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\oauth.ts",
          "relativePath": "services\\oauth.ts"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./AsciiLogo",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\AsciiLogo.tsx",
          "relativePath": "components\\AsciiLogo.tsx"
        },
        {
          "importPath": "../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../utils/terminal",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
          "relativePath": "utils\\terminal.ts"
        },
        {
          "importPath": "./Spinner",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Spinner.tsx",
          "relativePath": "components\\Spinner.tsx"
        },
        {
          "importPath": "./Onboarding",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Onboarding.tsx",
          "relativePath": "components\\Onboarding.tsx"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "../services/notifier",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\notifier.ts",
          "relativePath": "services\\notifier.ts"
        }
      ],
      "dependencyCount": 13,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\Cost.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Cost.tsx",
      "imports": [
        "react",
        "ink"
      ],
      "importedBy": [
        "components\\messages\\AssistantTextMessage.tsx",
        "components\\messages\\AssistantToolUseMessage.tsx",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\GrepTool\\GrepTool.tsx",
        "tools\\URLFetcherTool\\URLFetcherTool.tsx",
        "tools\\WebSearchTool\\WebSearchTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 6,
      "importanceScore": 26
    },
    {
      "path": "components\\CostThresholdDialog.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CostThresholdDialog.tsx",
      "imports": [
        "ink",
        "react",
        "components\\CustomSelect\\select.tsx",
        "utils\\theme.ts",
        "components\\Link.tsx"
      ],
      "importedBy": [
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "./CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./Link",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Link.tsx",
          "relativePath": "components\\Link.tsx"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\CustomSelect\\option-map.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\option-map.ts",
      "imports": [
        "components\\CustomSelect\\select.tsx"
      ],
      "importedBy": [
        "components\\CustomSelect\\use-select-state.ts"
      ],
      "externalImports": [
        "@inkjs/ui"
      ],
      "internalImports": [
        {
          "importPath": "./select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\CustomSelect\\select-option.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select-option.tsx",
      "imports": [
        "figures",
        "ink",
        "react",
        "components\\CustomSelect\\theme.ts",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "components\\CustomSelect\\select.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "figures",
          "resolvedPath": null,
          "relativePath": "figures"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "./theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\theme.ts",
          "relativePath": "components\\CustomSelect\\theme.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\CustomSelect\\select.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
      "imports": [
        "ink",
        "react",
        "components\\CustomSelect\\select-option.tsx",
        "components\\CustomSelect\\theme.ts",
        "components\\CustomSelect\\use-select-state.ts",
        "components\\CustomSelect\\use-select.ts",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "components\\ApproveApiKey.tsx",
        "components\\binary-feedback\\BinaryFeedbackView.tsx",
        "components\\CostThresholdDialog.tsx",
        "components\\CustomSelect\\option-map.ts",
        "components\\CustomSelect\\use-select-state.ts",
        "components\\InvalidConfigDialog.tsx",
        "components\\LogSelector.tsx",
        "components\\MCPServerApprovalDialog.tsx",
        "components\\ModelSelector.tsx",
        "components\\Onboarding.tsx",
        "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx",
        "components\\permissions\\FallbackPermissionRequest.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx",
        "components\\permissions\\toolUseOptions.ts",
        "components\\TrustDialog.tsx"
      ],
      "externalImports": [
        "@inkjs/ui"
      ],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "./select-option",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select-option.tsx",
          "relativePath": "components\\CustomSelect\\select-option.tsx"
        },
        {
          "importPath": "./theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\theme.ts",
          "relativePath": "components\\CustomSelect\\theme.ts"
        },
        {
          "importPath": "./use-select-state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\use-select-state.ts",
          "relativePath": "components\\CustomSelect\\use-select-state.ts"
        },
        {
          "importPath": "./use-select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\use-select.ts",
          "relativePath": "components\\CustomSelect\\use-select.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 7,
      "dependentCount": 17,
      "importanceScore": 58
    },
    {
      "path": "components\\CustomSelect\\theme.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\theme.ts",
      "imports": [
        "ink"
      ],
      "importedBy": [
        "components\\CustomSelect\\select-option.tsx",
        "components\\CustomSelect\\select.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "components\\CustomSelect\\use-select-state.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\use-select-state.ts",
      "imports": [
        "node:util",
        "components\\CustomSelect\\option-map.ts",
        "components\\CustomSelect\\select.tsx"
      ],
      "importedBy": [
        "components\\CustomSelect\\select.tsx",
        "components\\CustomSelect\\use-select.ts"
      ],
      "externalImports": [
        "@inkjs/ui"
      ],
      "internalImports": [
        {
          "importPath": "node:util",
          "resolvedPath": null,
          "relativePath": "node:util"
        },
        {
          "importPath": "./option-map",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\option-map.ts",
          "relativePath": "components\\CustomSelect\\option-map.ts"
        },
        {
          "importPath": "./select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "components\\CustomSelect\\use-select.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\use-select.ts",
      "imports": [
        "ink",
        "components\\CustomSelect\\use-select-state.ts"
      ],
      "importedBy": [
        "components\\CustomSelect\\select.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "./use-select-state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\use-select-state.ts",
          "relativePath": "components\\CustomSelect\\use-select-state.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\FallbackToolUseRejectedMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
      "imports": [
        "react",
        "utils\\theme.ts",
        "ink",
        "constants\\product.ts"
      ],
      "importedBy": [
        "components\\messages\\UserToolResultMessage\\UserToolRejectMessage.tsx",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\GrepTool\\GrepTool.tsx",
        "tools\\lsTool\\lsTool.tsx",
        "tools\\MCPTool\\MCPTool.tsx",
        "tools\\MemoryReadTool\\MemoryReadTool.tsx",
        "tools\\MemoryWriteTool\\MemoryWriteTool.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "tools\\NotebookReadTool\\NotebookReadTool.tsx",
        "tools\\TaskTool\\TaskTool.tsx",
        "tools\\TodoWriteTool\\TodoWriteTool.tsx",
        "tools\\URLFetcherTool\\URLFetcherTool.tsx",
        "tools\\WebSearchTool\\WebSearchTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 19,
      "importanceScore": 65
    },
    {
      "path": "components\\FileEditToolUpdatedMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FileEditToolUpdatedMessage.tsx",
      "imports": [
        "diff",
        "ink",
        "react",
        "utils\\array.ts",
        "components\\StructuredDiff.tsx",
        "utils\\theme.ts",
        "utils\\state.ts",
        "path",
        "hooks\\useTerminalSize.ts"
      ],
      "importedBy": [
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "diff",
          "resolvedPath": null,
          "relativePath": "diff"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/array",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\array.ts",
          "relativePath": "utils\\array.ts"
        },
        {
          "importPath": "./StructuredDiff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\StructuredDiff.tsx",
          "relativePath": "components\\StructuredDiff.tsx"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        }
      ],
      "dependencyCount": 9,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "components\\Help.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Help.tsx",
      "imports": [
        "commands",
        "constants\\product.ts",
        "react",
        "ink",
        "utils\\theme.ts",
        "components\\PressEnterToContinue.tsx",
        "constants\\macros.ts"
      ],
      "importedBy": [
        "commands\\help.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./PressEnterToContinue",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\PressEnterToContinue.tsx",
          "relativePath": "components\\PressEnterToContinue.tsx"
        },
        {
          "importPath": "../constants/macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        }
      ],
      "dependencyCount": 7,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\HighlightedCode.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\HighlightedCode.tsx",
      "imports": [
        "cli-highlight",
        "ink",
        "react",
        "utils\\log.ts"
      ],
      "importedBy": [
        "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "cli-highlight",
          "resolvedPath": null,
          "relativePath": "cli-highlight"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 5,
      "importanceScore": 23
    },
    {
      "path": "components\\InvalidConfigDialog.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\InvalidConfigDialog.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\theme.ts",
        "components\\CustomSelect\\select.tsx",
        "ink",
        "fs",
        "utils\\errors.ts",
        "hooks\\useExitOnCtrlCD.ts"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "../utils/errors",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\errors.ts",
          "relativePath": "utils\\errors.ts"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\Link.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Link.tsx",
      "imports": [
        "ink-link",
        "ink",
        "react",
        "utils\\env.ts"
      ],
      "importedBy": [
        "components\\CostThresholdDialog.tsx",
        "components\\TrustDialog.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink-link",
          "resolvedPath": null,
          "relativePath": "ink-link"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "components\\Logo.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Logo.tsx",
      "imports": [
        "ink",
        "react",
        "utils\\theme.ts",
        "constants\\product.ts",
        "utils\\config.ts",
        "utils\\state.ts",
        "components\\AsciiLogo.tsx",
        "services\\mcpClient.ts",
        "utils\\model.ts",
        "constants\\macros.ts"
      ],
      "importedBy": [
        "components\\Onboarding.tsx",
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "./AsciiLogo",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\AsciiLogo.tsx",
          "relativePath": "components\\AsciiLogo.tsx"
        },
        {
          "importPath": "../services/mcpClient",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\mcpClient.ts",
          "relativePath": "services\\mcpClient.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../constants/macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        }
      ],
      "dependencyCount": 10,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "components\\LogSelector.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\LogSelector.tsx",
      "imports": [
        "react",
        "ink",
        "components\\CustomSelect\\select.tsx",
        "types\\logs.ts",
        "utils\\theme.ts",
        "hooks\\useTerminalSize.ts",
        "utils\\log.ts"
      ],
      "importedBy": [
        "screens\\LogList.tsx",
        "screens\\ResumeConversation.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "./CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "../types/logs",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\logs.ts",
          "relativePath": "types\\logs.ts"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 7,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "components\\MCPServerApprovalDialog.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MCPServerApprovalDialog.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\theme.ts",
        "components\\CustomSelect\\select.tsx",
        "components\\MCPServerDialogCopy.tsx",
        "hooks\\useExitOnCtrlCD.ts"
      ],
      "importedBy": [
        "services\\mcpServerApproval.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "./MCPServerDialogCopy",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MCPServerDialogCopy.tsx",
          "relativePath": "components\\MCPServerDialogCopy.tsx"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\MCPServerDialogCopy.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MCPServerDialogCopy.tsx",
      "imports": [
        "react",
        "ink",
        "ink-link",
        "constants\\product.ts"
      ],
      "importedBy": [
        "components\\MCPServerApprovalDialog.tsx",
        "components\\MCPServerMultiselectDialog.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "ink-link",
          "resolvedPath": null,
          "relativePath": "ink-link"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "components\\MCPServerMultiselectDialog.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MCPServerMultiselectDialog.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\theme.ts",
        "lodash-es",
        "components\\MCPServerDialogCopy.tsx",
        "hooks\\useExitOnCtrlCD.ts"
      ],
      "importedBy": [
        "services\\mcpServerApproval.tsx"
      ],
      "externalImports": [
        "@inkjs/ui"
      ],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "./MCPServerDialogCopy",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MCPServerDialogCopy.tsx",
          "relativePath": "components\\MCPServerDialogCopy.tsx"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\Message.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Message.tsx",
      "imports": [
        "ink",
        "react",
        "query.ts",
        "Tool.ts",
        "utils\\log.ts",
        "components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx",
        "components\\messages\\AssistantToolUseMessage.tsx",
        "components\\messages\\AssistantTextMessage.tsx",
        "components\\messages\\UserTextMessage.tsx",
        "utils\\messages.tsx",
        "components\\messages\\AssistantThinkingMessage.tsx",
        "components\\messages\\AssistantRedactedThinkingMessage.tsx",
        "hooks\\useTerminalSize.ts"
      ],
      "importedBy": [
        "components\\binary-feedback\\BinaryFeedbackOption.tsx",
        "components\\MessageSelector.tsx",
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "./messages/UserToolResultMessage/UserToolResultMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx",
          "relativePath": "components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx"
        },
        {
          "importPath": "./messages/AssistantToolUseMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantToolUseMessage.tsx",
          "relativePath": "components\\messages\\AssistantToolUseMessage.tsx"
        },
        {
          "importPath": "./messages/AssistantTextMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantTextMessage.tsx",
          "relativePath": "components\\messages\\AssistantTextMessage.tsx"
        },
        {
          "importPath": "./messages/UserTextMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserTextMessage.tsx",
          "relativePath": "components\\messages\\UserTextMessage.tsx"
        },
        {
          "importPath": "../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "./messages/AssistantThinkingMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantThinkingMessage.tsx",
          "relativePath": "components\\messages\\AssistantThinkingMessage.tsx"
        },
        {
          "importPath": "./messages/AssistantRedactedThinkingMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantRedactedThinkingMessage.tsx",
          "relativePath": "components\\messages\\AssistantRedactedThinkingMessage.tsx"
        },
        {
          "importPath": "../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        }
      ],
      "dependencyCount": 13,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "components\\MessageResponse.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MessageResponse.tsx",
      "imports": [
        "ink",
        "react"
      ],
      "importedBy": [
        "screens\\REPL.tsx",
        "tools\\ThinkTool\\ThinkTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "components\\messages\\AssistantBashOutputMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantBashOutputMessage.tsx",
      "imports": [
        "react",
        "tools\\BashTool\\BashToolResultMessage.tsx",
        "utils\\messages.tsx"
      ],
      "importedBy": [
        "components\\messages\\AssistantTextMessage.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../tools/BashTool/BashToolResultMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashToolResultMessage.tsx",
          "relativePath": "tools\\BashTool\\BashToolResultMessage.tsx"
        },
        {
          "importPath": "../../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\messages\\AssistantLocalCommandOutputMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantLocalCommandOutputMessage.tsx",
      "imports": [
        "react",
        "utils\\messages.tsx",
        "utils\\theme.ts",
        "ink"
      ],
      "importedBy": [
        "components\\messages\\AssistantTextMessage.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\messages\\AssistantRedactedThinkingMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantRedactedThinkingMessage.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "components\\Message.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\messages\\AssistantTextMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantTextMessage.tsx",
      "imports": [
        "react",
        "components\\messages\\AssistantBashOutputMessage.tsx",
        "components\\messages\\AssistantLocalCommandOutputMessage.tsx",
        "utils\\theme.ts",
        "ink",
        "components\\Cost.tsx",
        "constants\\figures.ts",
        "utils\\markdown.ts",
        "hooks\\useTerminalSize.ts"
      ],
      "importedBy": [
        "components\\Message.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "./AssistantBashOutputMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantBashOutputMessage.tsx",
          "relativePath": "components\\messages\\AssistantBashOutputMessage.tsx"
        },
        {
          "importPath": "./AssistantLocalCommandOutputMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantLocalCommandOutputMessage.tsx",
          "relativePath": "components\\messages\\AssistantLocalCommandOutputMessage.tsx"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../Cost",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Cost.tsx",
          "relativePath": "components\\Cost.tsx"
        },
        {
          "importPath": "../../constants/figures",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\figures.ts",
          "relativePath": "constants\\figures.ts"
        },
        {
          "importPath": "../../utils/markdown",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\markdown.ts",
          "relativePath": "utils\\markdown.ts"
        },
        {
          "importPath": "../../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        }
      ],
      "dependencyCount": 9,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\messages\\AssistantThinkingMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantThinkingMessage.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\theme.ts",
        "utils\\markdown.ts"
      ],
      "importedBy": [
        "components\\Message.tsx",
        "components\\messages\\AssistantToolUseMessage.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../utils/markdown",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\markdown.ts",
          "relativePath": "utils\\markdown.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "components\\messages\\AssistantToolUseMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantToolUseMessage.tsx",
      "imports": [
        "ink",
        "react",
        "utils\\log.ts",
        "Tool.ts",
        "components\\Cost.tsx",
        "components\\ToolUseLoader.tsx",
        "utils\\theme.ts",
        "constants\\figures.ts",
        "tools\\ThinkTool\\ThinkTool.tsx",
        "components\\messages\\AssistantThinkingMessage.tsx",
        "components\\messages\\TaskToolMessage.tsx"
      ],
      "importedBy": [
        "components\\Message.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../Cost",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Cost.tsx",
          "relativePath": "components\\Cost.tsx"
        },
        {
          "importPath": "../ToolUseLoader",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ToolUseLoader.tsx",
          "relativePath": "components\\ToolUseLoader.tsx"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../constants/figures",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\figures.ts",
          "relativePath": "constants\\figures.ts"
        },
        {
          "importPath": "../../tools/ThinkTool/ThinkTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\ThinkTool\\ThinkTool.tsx",
          "relativePath": "tools\\ThinkTool\\ThinkTool.tsx"
        },
        {
          "importPath": "./AssistantThinkingMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\AssistantThinkingMessage.tsx",
          "relativePath": "components\\messages\\AssistantThinkingMessage.tsx"
        },
        {
          "importPath": "./TaskToolMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\TaskToolMessage.tsx",
          "relativePath": "components\\messages\\TaskToolMessage.tsx"
        }
      ],
      "dependencyCount": 11,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\messages\\TaskProgressMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\TaskProgressMessage.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\theme.ts"
      ],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 0,
      "importanceScore": 7
    },
    {
      "path": "components\\messages\\TaskToolMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\TaskToolMessage.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\agentLoader.ts",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "components\\messages\\AssistantToolUseMessage.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../../utils/agentLoader",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentLoader.ts",
          "relativePath": "utils\\agentLoader.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\messages\\UserBashInputMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserBashInputMessage.tsx",
      "imports": [
        "ink",
        "react",
        "utils\\messages.tsx",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "components\\messages\\UserTextMessage.tsx",
        "utils\\messages.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "components\\messages\\UserCommandMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserCommandMessage.tsx",
      "imports": [
        "ink",
        "react",
        "utils\\theme.ts",
        "utils\\messages.tsx"
      ],
      "importedBy": [
        "components\\messages\\UserTextMessage.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\messages\\UserKodingInputMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserKodingInputMessage.tsx",
      "imports": [
        "ink",
        "react",
        "utils\\messages.tsx",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "components\\messages\\UserTextMessage.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\messages\\UserPromptMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserPromptMessage.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\theme.ts",
        "utils\\log.ts",
        "hooks\\useTerminalSize.ts"
      ],
      "importedBy": [
        "components\\messages\\UserTextMessage.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\messages\\UserTextMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserTextMessage.tsx",
      "imports": [
        "components\\messages\\UserBashInputMessage.tsx",
        "components\\messages\\UserKodingInputMessage.tsx",
        "components\\messages\\UserCommandMessage.tsx",
        "components\\messages\\UserPromptMessage.tsx",
        "react",
        "services\\claude.ts"
      ],
      "importedBy": [
        "components\\Message.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "./UserBashInputMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserBashInputMessage.tsx",
          "relativePath": "components\\messages\\UserBashInputMessage.tsx"
        },
        {
          "importPath": "./UserKodingInputMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserKodingInputMessage.tsx",
          "relativePath": "components\\messages\\UserKodingInputMessage.tsx"
        },
        {
          "importPath": "./UserCommandMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserCommandMessage.tsx",
          "relativePath": "components\\messages\\UserCommandMessage.tsx"
        },
        {
          "importPath": "./UserPromptMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserPromptMessage.tsx",
          "relativePath": "components\\messages\\UserPromptMessage.tsx"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\messages\\UserToolResultMessage\\UserToolCanceledMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\UserToolCanceledMessage.tsx",
      "imports": [
        "ink",
        "react",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 9
    },
    {
      "path": "components\\messages\\UserToolResultMessage\\UserToolErrorMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\UserToolErrorMessage.tsx",
      "imports": [
        "ink",
        "react",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 9
    },
    {
      "path": "components\\messages\\UserToolResultMessage\\UserToolRejectMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\UserToolRejectMessage.tsx",
      "imports": [
        "react",
        "Tool.ts",
        "query.ts",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "components\\messages\\UserToolResultMessage\\utils.tsx",
        "hooks\\useTerminalSize.ts"
      ],
      "importedBy": [
        "components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../../FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "./utils",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\utils.tsx",
          "relativePath": "components\\messages\\UserToolResultMessage\\utils.tsx"
        },
        {
          "importPath": "../../../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 1,
      "importanceScore": 9
    },
    {
      "path": "components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx",
      "imports": [
        "react",
        "Tool.ts",
        "query.ts",
        "utils\\messages.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolCanceledMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolErrorMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolRejectMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolSuccessMessage.tsx"
      ],
      "importedBy": [
        "components\\Message.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../../../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "./UserToolCanceledMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\UserToolCanceledMessage.tsx",
          "relativePath": "components\\messages\\UserToolResultMessage\\UserToolCanceledMessage.tsx"
        },
        {
          "importPath": "./UserToolErrorMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\UserToolErrorMessage.tsx",
          "relativePath": "components\\messages\\UserToolResultMessage\\UserToolErrorMessage.tsx"
        },
        {
          "importPath": "./UserToolRejectMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\UserToolRejectMessage.tsx",
          "relativePath": "components\\messages\\UserToolResultMessage\\UserToolRejectMessage.tsx"
        },
        {
          "importPath": "./UserToolSuccessMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\UserToolSuccessMessage.tsx",
          "relativePath": "components\\messages\\UserToolResultMessage\\UserToolSuccessMessage.tsx"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 1,
      "importanceScore": 9
    },
    {
      "path": "components\\messages\\UserToolResultMessage\\UserToolSuccessMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\UserToolSuccessMessage.tsx",
      "imports": [
        "ink",
        "react",
        "Tool.ts",
        "query.ts",
        "components\\messages\\UserToolResultMessage\\utils.tsx"
      ],
      "importedBy": [
        "components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "./utils",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\utils.tsx",
          "relativePath": "components\\messages\\UserToolResultMessage\\utils.tsx"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 1,
      "importanceScore": 9
    },
    {
      "path": "components\\messages\\UserToolResultMessage\\utils.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserToolResultMessage\\utils.tsx",
      "imports": [
        "query.ts",
        "react",
        "Tool.ts",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\GrepTool\\GrepTool.tsx"
      ],
      "importedBy": [
        "components\\messages\\UserToolResultMessage\\UserToolRejectMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolSuccessMessage.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "../../../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../../tools/GlobTool/GlobTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GlobTool\\GlobTool.tsx",
          "relativePath": "tools\\GlobTool\\GlobTool.tsx"
        },
        {
          "importPath": "../../../tools/GrepTool/GrepTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GrepTool\\GrepTool.tsx",
          "relativePath": "tools\\GrepTool\\GrepTool.tsx"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 2,
      "importanceScore": 12
    },
    {
      "path": "components\\MessageSelector.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MessageSelector.tsx",
      "imports": [
        "ink",
        "react",
        "react",
        "figures",
        "utils\\theme.ts",
        "components\\Message.tsx",
        "crypto",
        "Tool.ts",
        "query.ts",
        "hooks\\useExitOnCtrlCD.ts"
      ],
      "importedBy": [
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "figures",
          "resolvedPath": null,
          "relativePath": "figures"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./Message",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Message.tsx",
          "relativePath": "components\\Message.tsx"
        },
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        }
      ],
      "dependencyCount": 10,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\ModeIndicator.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModeIndicator.tsx",
      "imports": [
        "react",
        "ink",
        "context\\PermissionContext.tsx",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../context/PermissionContext",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context\\PermissionContext.tsx",
          "relativePath": "context\\PermissionContext.tsx"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\ModelConfig.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModelConfig.tsx",
      "imports": [
        "ink",
        "react",
        "react",
        "figures",
        "utils\\theme.ts",
        "utils\\model.ts",
        "hooks\\useExitOnCtrlCD.ts",
        "components\\ModelSelector.tsx",
        "components\\ModelListManager.tsx"
      ],
      "importedBy": [
        "commands\\model.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "figures",
          "resolvedPath": null,
          "relativePath": "figures"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        },
        {
          "importPath": "./ModelSelector",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModelSelector.tsx",
          "relativePath": "components\\ModelSelector.tsx"
        },
        {
          "importPath": "./ModelListManager",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModelListManager.tsx",
          "relativePath": "components\\ModelListManager.tsx"
        }
      ],
      "dependencyCount": 9,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\ModelListManager.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModelListManager.tsx",
      "imports": [
        "ink",
        "react",
        "react",
        "figures",
        "utils\\theme.ts",
        "utils\\model.ts",
        "hooks\\useExitOnCtrlCD.ts",
        "components\\ModelSelector.tsx"
      ],
      "importedBy": [
        "components\\ModelConfig.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "figures",
          "resolvedPath": null,
          "relativePath": "figures"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        },
        {
          "importPath": "./ModelSelector",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModelSelector.tsx",
          "relativePath": "components\\ModelSelector.tsx"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\ModelSelector.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModelSelector.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\theme.ts",
        "components\\CustomSelect\\select.tsx",
        "ink",
        "utils\\model.ts",
        "constants\\product.ts",
        "hooks\\useExitOnCtrlCD.ts",
        "constants\\models.ts",
        "components\\TextInput.tsx",
        "openai",
        "chalk",
        "services\\claude.ts",
        "services\\openai.ts",
        "services\\gpt5ConnectionTest.ts"
      ],
      "importedBy": [
        "components\\ModelConfig.tsx",
        "components\\ModelListManager.tsx",
        "components\\Onboarding.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        },
        {
          "importPath": "../constants/models",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\models.ts",
          "relativePath": "constants\\models.ts"
        },
        {
          "importPath": "./TextInput",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\TextInput.tsx",
          "relativePath": "components\\TextInput.tsx"
        },
        {
          "importPath": "openai",
          "resolvedPath": null,
          "relativePath": "openai"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        },
        {
          "importPath": "../services/openai",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\openai.ts",
          "relativePath": "services\\openai.ts"
        },
        {
          "importPath": "../services/gpt5ConnectionTest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\gpt5ConnectionTest.ts",
          "relativePath": "services\\gpt5ConnectionTest.ts"
        }
      ],
      "dependencyCount": 15,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "components\\ModelStatusDisplay.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModelStatusDisplay.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\model.ts",
        "utils\\config.ts",
        "hooks\\useExitOnCtrlCD.ts",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "commands\\modelstatus.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\Onboarding.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Onboarding.tsx",
      "imports": [
        "react",
        "constants\\product.ts",
        "ink",
        "hooks\\useExitOnCtrlCD.ts",
        "components\\Logo.tsx",
        "components\\CustomSelect\\select.tsx",
        "components\\StructuredDiff.tsx",
        "utils\\theme.ts",
        "utils\\terminal.ts",
        "components\\PressEnterToContinue.tsx",
        "components\\ModelSelector.tsx"
      ],
      "importedBy": [
        "commands\\onboarding.tsx",
        "components\\ConsoleOAuthFlow.tsx",
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [
        "@inkjs/ui"
      ],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        },
        {
          "importPath": "./Logo",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Logo.tsx",
          "relativePath": "components\\Logo.tsx"
        },
        {
          "importPath": "./CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "./StructuredDiff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\StructuredDiff.tsx",
          "relativePath": "components\\StructuredDiff.tsx"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../utils/terminal",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
          "relativePath": "utils\\terminal.ts"
        },
        {
          "importPath": "./PressEnterToContinue",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\PressEnterToContinue.tsx",
          "relativePath": "components\\PressEnterToContinue.tsx"
        },
        {
          "importPath": "./ModelSelector",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModelSelector.tsx",
          "relativePath": "components\\ModelSelector.tsx"
        }
      ],
      "dependencyCount": 11,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx",
      "imports": [
        "ink",
        "react",
        "hooks\\usePermissionRequestLogging.ts",
        "permissions.ts",
        "tools\\BashTool\\BashTool.tsx",
        "utils\\theme.ts",
        "components\\permissions\\hooks.ts",
        "components\\permissions\\PermissionRequestTitle.tsx",
        "components\\permissions\\utils.ts",
        "components\\CustomSelect\\select.tsx",
        "components\\permissions\\toolUseOptions.ts"
      ],
      "importedBy": [
        "components\\permissions\\PermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../../hooks/usePermissionRequestLogging",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\usePermissionRequestLogging.ts",
          "relativePath": "hooks\\usePermissionRequestLogging.ts"
        },
        {
          "importPath": "../../../permissions",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\permissions.ts",
          "relativePath": "permissions.ts"
        },
        {
          "importPath": "../../../tools/BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        },
        {
          "importPath": "../../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../hooks",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\hooks.ts",
          "relativePath": "components\\permissions\\hooks.ts"
        },
        {
          "importPath": "../PermissionRequestTitle",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\PermissionRequestTitle.tsx",
          "relativePath": "components\\permissions\\PermissionRequestTitle.tsx"
        },
        {
          "importPath": "../utils",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\utils.ts",
          "relativePath": "components\\permissions\\utils.ts"
        },
        {
          "importPath": "../../CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "../toolUseOptions",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\toolUseOptions.ts",
          "relativePath": "components\\permissions\\toolUseOptions.ts"
        }
      ],
      "dependencyCount": 11,
      "dependentCount": 1,
      "importanceScore": 9
    },
    {
      "path": "components\\permissions\\FallbackPermissionRequest.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FallbackPermissionRequest.tsx",
      "imports": [
        "ink",
        "react",
        "components\\CustomSelect\\select.tsx",
        "utils\\theme.ts",
        "utils\\unaryLogging.ts",
        "utils\\env.ts",
        "utils\\state.ts",
        "permissions.ts",
        "chalk"
      ],
      "importedBy": [
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\PermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../utils/unaryLogging",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\unaryLogging.ts",
          "relativePath": "utils\\unaryLogging.ts"
        },
        {
          "importPath": "../../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../../permissions",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\permissions.ts",
          "relativePath": "permissions.ts"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        }
      ],
      "dependencyCount": 9,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
      "imports": [
        "components\\CustomSelect\\select.tsx",
        "chalk",
        "ink",
        "path",
        "react",
        "permissions.ts",
        "utils\\env.ts",
        "utils\\theme.ts",
        "utils\\unaryLogging.ts",
        "components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
        "hooks\\useTerminalSize.ts",
        "utils\\permissions\\filesystem.ts"
      ],
      "importedBy": [
        "components\\permissions\\PermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../../CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../../permissions",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\permissions.ts",
          "relativePath": "permissions.ts"
        },
        {
          "importPath": "../../../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "../../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../../utils/unaryLogging",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\unaryLogging.ts",
          "relativePath": "utils\\unaryLogging.ts"
        },
        {
          "importPath": "./FileEditToolDiff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
          "relativePath": "components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx"
        },
        {
          "importPath": "../../../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        },
        {
          "importPath": "../../../utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        }
      ],
      "dependencyCount": 12,
      "dependentCount": 1,
      "importanceScore": 9
    },
    {
      "path": "components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
      "imports": [
        "react",
        "fs",
        "react",
        "components\\StructuredDiff.tsx",
        "ink",
        "utils\\theme.ts",
        "utils\\array.ts",
        "utils\\state.ts",
        "path",
        "utils\\diff.ts"
      ],
      "importedBy": [
        "components\\binary-feedback\\BinaryFeedbackOption.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../StructuredDiff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\StructuredDiff.tsx",
          "relativePath": "components\\StructuredDiff.tsx"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../../utils/array",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\array.ts",
          "relativePath": "utils\\array.ts"
        },
        {
          "importPath": "../../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../../../utils/diff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\diff.ts",
          "relativePath": "utils\\diff.ts"
        }
      ],
      "dependencyCount": 10,
      "dependentCount": 2,
      "importanceScore": 12
    },
    {
      "path": "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
      "imports": [
        "ink",
        "react",
        "components\\CustomSelect\\select.tsx",
        "utils\\theme.ts",
        "utils\\unaryLogging.ts",
        "utils\\env.ts",
        "chalk",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\GrepTool\\GrepTool.tsx",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\lsTool\\lsTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "tools\\NotebookReadTool\\NotebookReadTool.tsx",
        "components\\permissions\\FallbackPermissionRequest.tsx",
        "utils\\state.ts"
      ],
      "importedBy": [
        "components\\permissions\\PermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "../../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../../utils/unaryLogging",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\unaryLogging.ts",
          "relativePath": "utils\\unaryLogging.ts"
        },
        {
          "importPath": "../../../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "../../../tools/FileEditTool/FileEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\FileEditTool.tsx",
          "relativePath": "tools\\FileEditTool\\FileEditTool.tsx"
        },
        {
          "importPath": "../../../tools/FileWriteTool/FileWriteTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileWriteTool\\FileWriteTool.tsx",
          "relativePath": "tools\\FileWriteTool\\FileWriteTool.tsx"
        },
        {
          "importPath": "../../../tools/GrepTool/GrepTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GrepTool\\GrepTool.tsx",
          "relativePath": "tools\\GrepTool\\GrepTool.tsx"
        },
        {
          "importPath": "../../../tools/GlobTool/GlobTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GlobTool\\GlobTool.tsx",
          "relativePath": "tools\\GlobTool\\GlobTool.tsx"
        },
        {
          "importPath": "../../../tools/lsTool/lsTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\lsTool\\lsTool.tsx",
          "relativePath": "tools\\lsTool\\lsTool.tsx"
        },
        {
          "importPath": "../../../tools/FileReadTool/FileReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileReadTool\\FileReadTool.tsx",
          "relativePath": "tools\\FileReadTool\\FileReadTool.tsx"
        },
        {
          "importPath": "../../../tools/NotebookEditTool/NotebookEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\NotebookEditTool.tsx",
          "relativePath": "tools\\NotebookEditTool\\NotebookEditTool.tsx"
        },
        {
          "importPath": "../../../tools/NotebookReadTool/NotebookReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookReadTool\\NotebookReadTool.tsx",
          "relativePath": "tools\\NotebookReadTool\\NotebookReadTool.tsx"
        },
        {
          "importPath": "../FallbackPermissionRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FallbackPermissionRequest.tsx",
          "relativePath": "components\\permissions\\FallbackPermissionRequest.tsx"
        },
        {
          "importPath": "../../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        }
      ],
      "dependencyCount": 17,
      "dependentCount": 1,
      "importanceScore": 9
    },
    {
      "path": "components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx",
      "imports": [
        "ink",
        "react",
        "components\\CustomSelect\\select.tsx",
        "path",
        "utils\\theme.ts",
        "utils\\unaryLogging.ts",
        "utils\\env.ts",
        "permissions.ts",
        "fs",
        "chalk",
        "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
        "hooks\\useTerminalSize.ts"
      ],
      "importedBy": [
        "components\\permissions\\PermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../../utils/unaryLogging",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\unaryLogging.ts",
          "relativePath": "utils\\unaryLogging.ts"
        },
        {
          "importPath": "../../../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "../../../permissions",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\permissions.ts",
          "relativePath": "permissions.ts"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "./FileWriteToolDiff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
          "relativePath": "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx"
        },
        {
          "importPath": "../../../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        }
      ],
      "dependencyCount": 12,
      "dependentCount": 1,
      "importanceScore": 9
    },
    {
      "path": "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
      "imports": [
        "react",
        "fs",
        "react",
        "components\\StructuredDiff.tsx",
        "ink",
        "utils\\theme.ts",
        "utils\\array.ts",
        "utils\\state.ts",
        "path",
        "utils\\file.ts",
        "components\\HighlightedCode.tsx",
        "utils\\diff.ts"
      ],
      "importedBy": [
        "components\\binary-feedback\\BinaryFeedbackOption.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../StructuredDiff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\StructuredDiff.tsx",
          "relativePath": "components\\StructuredDiff.tsx"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../../utils/array",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\array.ts",
          "relativePath": "utils\\array.ts"
        },
        {
          "importPath": "../../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../../../utils/file",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\file.ts",
          "relativePath": "utils\\file.ts"
        },
        {
          "importPath": "../../HighlightedCode",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\HighlightedCode.tsx",
          "relativePath": "components\\HighlightedCode.tsx"
        },
        {
          "importPath": "../../../utils/diff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\diff.ts",
          "relativePath": "utils\\diff.ts"
        }
      ],
      "dependencyCount": 12,
      "dependentCount": 2,
      "importanceScore": 12
    },
    {
      "path": "components\\permissions\\hooks.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\hooks.ts",
      "imports": [
        "react",
        "utils\\unaryLogging.ts",
        "components\\permissions\\PermissionRequest.tsx",
        "utils\\env.ts"
      ],
      "importedBy": [
        "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../utils/unaryLogging",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\unaryLogging.ts",
          "relativePath": "utils\\unaryLogging.ts"
        },
        {
          "importPath": "../../components/permissions/PermissionRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\PermissionRequest.tsx",
          "relativePath": "components\\permissions\\PermissionRequest.tsx"
        },
        {
          "importPath": "../../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\permissions\\PermissionRequest.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\PermissionRequest.tsx",
      "imports": [
        "ink",
        "react",
        "Tool.ts",
        "query.ts",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
        "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx",
        "components\\permissions\\FallbackPermissionRequest.tsx",
        "hooks\\useNotifyAfterTimeout.ts",
        "components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx",
        "utils\\commands.ts",
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\GrepTool\\GrepTool.tsx",
        "tools\\lsTool\\lsTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\NotebookReadTool\\NotebookReadTool.tsx",
        "constants\\product.ts"
      ],
      "importedBy": [
        "components\\permissions\\hooks.ts",
        "components\\permissions\\utils.ts",
        "hooks\\useCancelRequest.ts",
        "hooks\\useCanUseTool.ts",
        "hooks\\usePermissionRequestLogging.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../../tools/FileEditTool/FileEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\FileEditTool.tsx",
          "relativePath": "tools\\FileEditTool\\FileEditTool.tsx"
        },
        {
          "importPath": "../../tools/FileWriteTool/FileWriteTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileWriteTool\\FileWriteTool.tsx",
          "relativePath": "tools\\FileWriteTool\\FileWriteTool.tsx"
        },
        {
          "importPath": "../../tools/BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        },
        {
          "importPath": "./FileEditPermissionRequest/FileEditPermissionRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
          "relativePath": "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx"
        },
        {
          "importPath": "./BashPermissionRequest/BashPermissionRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx",
          "relativePath": "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx"
        },
        {
          "importPath": "./FallbackPermissionRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FallbackPermissionRequest.tsx",
          "relativePath": "components\\permissions\\FallbackPermissionRequest.tsx"
        },
        {
          "importPath": "../../hooks/useNotifyAfterTimeout",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useNotifyAfterTimeout.ts",
          "relativePath": "hooks\\useNotifyAfterTimeout.ts"
        },
        {
          "importPath": "./FileWritePermissionRequest/FileWritePermissionRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx",
          "relativePath": "components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx"
        },
        {
          "importPath": "../../utils/commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\commands.ts",
          "relativePath": "utils\\commands.ts"
        },
        {
          "importPath": "./FilesystemPermissionRequest/FilesystemPermissionRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
          "relativePath": "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx"
        },
        {
          "importPath": "../../tools/NotebookEditTool/NotebookEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\NotebookEditTool.tsx",
          "relativePath": "tools\\NotebookEditTool\\NotebookEditTool.tsx"
        },
        {
          "importPath": "../../tools/GlobTool/GlobTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GlobTool\\GlobTool.tsx",
          "relativePath": "tools\\GlobTool\\GlobTool.tsx"
        },
        {
          "importPath": "../../tools/GrepTool/GrepTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GrepTool\\GrepTool.tsx",
          "relativePath": "tools\\GrepTool\\GrepTool.tsx"
        },
        {
          "importPath": "../../tools/lsTool/lsTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\lsTool\\lsTool.tsx",
          "relativePath": "tools\\lsTool\\lsTool.tsx"
        },
        {
          "importPath": "../../tools/FileReadTool/FileReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileReadTool\\FileReadTool.tsx",
          "relativePath": "tools\\FileReadTool\\FileReadTool.tsx"
        },
        {
          "importPath": "../../tools/NotebookReadTool/NotebookReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookReadTool\\NotebookReadTool.tsx",
          "relativePath": "tools\\NotebookReadTool\\NotebookReadTool.tsx"
        },
        {
          "importPath": "../../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 21,
      "dependentCount": 5,
      "importanceScore": 22
    },
    {
      "path": "components\\permissions\\PermissionRequestTitle.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\PermissionRequestTitle.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\permissions\\toolUseOptions.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\toolUseOptions.ts",
      "imports": [
        "chalk",
        "utils\\commands.ts",
        "utils\\state.ts",
        "utils\\theme.ts",
        "components\\CustomSelect\\select.tsx"
      ],
      "importedBy": [
        "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx"
      ],
      "externalImports": [
        "@inkjs/ui"
      ],
      "internalImports": [
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "../../utils/commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\commands.ts",
          "relativePath": "utils\\commands.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\permissions\\utils.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\utils.ts",
      "imports": [
        "utils\\env.ts",
        "utils\\unaryLogging.ts",
        "components\\permissions\\PermissionRequest.tsx"
      ],
      "importedBy": [
        "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "../../utils/unaryLogging",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\unaryLogging.ts",
          "relativePath": "utils\\unaryLogging.ts"
        },
        {
          "importPath": "./PermissionRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\PermissionRequest.tsx",
          "relativePath": "components\\permissions\\PermissionRequest.tsx"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "components\\PressEnterToContinue.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\PressEnterToContinue.tsx",
      "imports": [
        "react",
        "utils\\theme.ts",
        "ink"
      ],
      "importedBy": [
        "components\\Help.tsx",
        "components\\Onboarding.tsx",
        "screens\\Doctor.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "components\\PromptInput.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\PromptInput.tsx",
      "imports": [
        "ink",
        "lodash-es",
        "utils\\exampleCommands.ts",
        "react",
        "query.ts",
        "utils\\messages.tsx",
        "hooks\\useArrowKeyHistory.ts",
        "hooks\\useUnifiedCompletion.ts",
        "history.ts",
        "components\\TextInput.tsx",
        "react",
        "utils\\tokens.ts",
        "components\\SentryErrorBoundary.ts",
        "commands",
        "Tool.ts",
        "components\\TokenWarning.tsx",
        "hooks\\useTerminalSize.ts",
        "utils\\theme.ts",
        "utils\\model.ts",
        "utils\\config.ts",
        "utils\\terminal.ts",
        "context\\PermissionContext.tsx"
      ],
      "importedBy": [
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "../utils/exampleCommands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\exampleCommands.ts",
          "relativePath": "utils\\exampleCommands.ts"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "../hooks/useArrowKeyHistory",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useArrowKeyHistory.ts",
          "relativePath": "hooks\\useArrowKeyHistory.ts"
        },
        {
          "importPath": "../hooks/useUnifiedCompletion",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useUnifiedCompletion.ts",
          "relativePath": "hooks\\useUnifiedCompletion.ts"
        },
        {
          "importPath": "../history",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\history.ts",
          "relativePath": "history.ts"
        },
        {
          "importPath": "./TextInput",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\TextInput.tsx",
          "relativePath": "components\\TextInput.tsx"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/tokens",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\tokens.ts",
          "relativePath": "utils\\tokens.ts"
        },
        {
          "importPath": "./SentryErrorBoundary",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\SentryErrorBoundary.ts",
          "relativePath": "components\\SentryErrorBoundary.ts"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "./TokenWarning",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\TokenWarning.tsx",
          "relativePath": "components\\TokenWarning.tsx"
        },
        {
          "importPath": "../hooks/useTerminalSize",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
          "relativePath": "hooks\\useTerminalSize.ts"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../utils/terminal",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
          "relativePath": "utils\\terminal.ts"
        },
        {
          "importPath": "../context/PermissionContext",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context\\PermissionContext.tsx",
          "relativePath": "context\\PermissionContext.tsx"
        }
      ],
      "dependencyCount": 22,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\SentryErrorBoundary.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\SentryErrorBoundary.ts",
      "imports": [
        "react",
        "services\\sentry.ts"
      ],
      "importedBy": [
        "components\\PromptInput.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../services/sentry",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\sentry.ts",
          "relativePath": "services\\sentry.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\Spinner.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Spinner.tsx",
      "imports": [
        "ink",
        "react",
        "react",
        "utils\\theme.ts",
        "lodash-es",
        "utils\\sessionState.ts"
      ],
      "importedBy": [
        "components\\ConsoleOAuthFlow.tsx",
        "screens\\REPL.tsx",
        "utils\\messages.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "../utils/sessionState",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\sessionState.ts",
          "relativePath": "utils\\sessionState.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "components\\StickerRequestForm.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\StickerRequestForm.tsx",
      "imports": [
        "react"
      ],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "components\\StructuredDiff.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\StructuredDiff.tsx",
      "imports": [
        "ink",
        "react",
        "diff",
        "utils\\theme.ts",
        "react",
        "utils\\format.tsx"
      ],
      "importedBy": [
        "components\\FileEditToolUpdatedMessage.tsx",
        "components\\Onboarding.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "diff",
          "resolvedPath": null,
          "relativePath": "diff"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/format",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\format.tsx",
          "relativePath": "utils\\format.tsx"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 7,
      "importanceScore": 29
    },
    {
      "path": "components\\TextInput.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\TextInput.tsx",
      "imports": [
        "react",
        "ink",
        "chalk",
        "hooks\\useTextInput.ts",
        "utils\\theme.ts",
        "ink"
      ],
      "importedBy": [
        "components\\Bug.tsx",
        "components\\ConsoleOAuthFlow.tsx",
        "components\\ModelSelector.tsx",
        "components\\PromptInput.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "../hooks/useTextInput",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTextInput.ts",
          "relativePath": "hooks\\useTextInput.ts"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 4,
      "importanceScore": 20
    },
    {
      "path": "components\\TodoItem.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\TodoItem.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\todoStorage.ts"
      ],
      "importedBy": [
        "tools\\TodoWriteTool\\TodoWriteTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/todoStorage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\todoStorage.ts",
          "relativePath": "utils\\todoStorage.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\TokenWarning.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\TokenWarning.tsx",
      "imports": [
        "ink",
        "react",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "components\\PromptInput.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\ToolUseLoader.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ToolUseLoader.tsx",
      "imports": [
        "ink",
        "react",
        "hooks\\useInterval.ts",
        "utils\\theme.ts",
        "constants\\figures.ts"
      ],
      "importedBy": [
        "components\\messages\\AssistantToolUseMessage.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../hooks/useInterval",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useInterval.ts",
          "relativePath": "hooks\\useInterval.ts"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../constants/figures",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\figures.ts",
          "relativePath": "constants\\figures.ts"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "components\\TrustDialog.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\TrustDialog.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\theme.ts",
        "components\\CustomSelect\\select.tsx",
        "constants\\product.ts",
        "hooks\\useExitOnCtrlCD.ts",
        "os",
        "utils\\state.ts",
        "components\\Link.tsx"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./CustomSelect/select",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CustomSelect\\select.tsx",
          "relativePath": "components\\CustomSelect\\select.tsx"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "../hooks/useExitOnCtrlCD",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
          "relativePath": "hooks\\useExitOnCtrlCD.ts"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "./Link",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Link.tsx",
          "relativePath": "components\\Link.tsx"
        }
      ],
      "dependencyCount": 9,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "constants\\claude-asterisk-ascii-art.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\claude-asterisk-ascii-art.tsx",
      "imports": [],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "constants\\figures.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\figures.ts",
      "imports": [
        "utils\\env.ts"
      ],
      "importedBy": [
        "components\\messages\\AssistantTextMessage.tsx",
        "components\\messages\\AssistantToolUseMessage.tsx",
        "components\\ToolUseLoader.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "constants\\macros.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
      "imports": [
        "module",
        "..\\package.json"
      ],
      "importedBy": [
        "components\\Bug.tsx",
        "components\\Help.tsx",
        "components\\Logo.tsx",
        "constants\\prompts.ts",
        "entrypoints\\cli.tsx",
        "entrypoints\\mcp.ts",
        "ProjectOnboarding.tsx",
        "screens\\REPL.tsx",
        "utils\\autoUpdater.ts",
        "utils\\http.ts",
        "utils\\log.ts",
        "utils\\user.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "module",
          "resolvedPath": null,
          "relativePath": "module"
        },
        {
          "importPath": "../../package.json",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\package.json",
          "relativePath": "..\\package.json"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 12,
      "importanceScore": 44
    },
    {
      "path": "constants\\modelCapabilities.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\modelCapabilities.ts",
      "imports": [
        "types\\modelCapabilities.ts"
      ],
      "importedBy": [
        "services\\modelAdapterFactory.ts",
        "test\\testAdapters.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../types/modelCapabilities",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\modelCapabilities.ts",
          "relativePath": "types\\modelCapabilities.ts"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "constants\\models.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\models.ts",
      "imports": [],
      "importedBy": [
        "components\\ModelSelector.tsx",
        "services\\claude.ts"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "constants\\oauth.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\oauth.ts",
      "imports": [],
      "importedBy": [
        "services\\oauth.ts"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "constants\\product.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
      "imports": [],
      "importedBy": [
        "commands\\bug.tsx",
        "commands\\ctx_viz.ts",
        "commands\\doctor.ts",
        "commands\\init.ts",
        "commands\\mcp.ts",
        "components\\AsciiLogo.tsx",
        "components\\binary-feedback\\BinaryFeedback.tsx",
        "components\\binary-feedback\\BinaryFeedbackView.tsx",
        "components\\Bug.tsx",
        "components\\Bug.tsx",
        "components\\ConsoleOAuthFlow.tsx",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "components\\Help.tsx",
        "components\\Logo.tsx",
        "components\\MCPServerDialogCopy.tsx",
        "components\\ModelSelector.tsx",
        "components\\Onboarding.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "components\\TrustDialog.tsx",
        "constants\\prompts.ts",
        "context.ts",
        "entrypoints\\cli.tsx",
        "permissions.ts",
        "ProjectOnboarding.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\BashTool\\prompt.ts",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx",
        "utils\\autoUpdater.ts",
        "utils\\commands.ts",
        "utils\\debugLogger.ts",
        "utils\\env.ts",
        "utils\\http.ts",
        "utils\\log.ts",
        "utils\\PersistentShell.ts",
        "utils\\style.ts"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 37,
      "importanceScore": 119
    },
    {
      "path": "constants\\prompts.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\prompts.ts",
      "imports": [
        "utils\\env.ts",
        "utils\\git.ts",
        "utils\\state.ts",
        "constants\\product.ts",
        "tools\\BashTool\\BashTool.tsx",
        "constants\\macros.ts"
      ],
      "importedBy": [
        "commands\\ctx_viz.ts",
        "screens\\REPL.tsx",
        "services\\claude.ts",
        "tools\\TaskTool\\TaskTool.tsx",
        "utils\\ask.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "../utils/git",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\git.ts",
          "relativePath": "utils\\git.ts"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "./product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "../tools/BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        },
        {
          "importPath": "./macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 5,
      "importanceScore": 23
    },
    {
      "path": "constants\\releaseNotes.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\releaseNotes.ts",
      "imports": [],
      "importedBy": [
        "commands\\release-notes.ts",
        "ProjectOnboarding.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "context\\PermissionContext.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context\\PermissionContext.tsx",
      "imports": [],
      "importedBy": [
        "components\\ModeIndicator.tsx",
        "components\\PromptInput.tsx",
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "context.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context.ts",
      "imports": [
        "utils\\log.ts",
        "utils\\style.ts",
        "utils\\state.ts",
        "lodash-es",
        "tools\\lsTool\\lsTool.tsx",
        "utils\\git.ts",
        "utils\\ripgrep.ts",
        "path",
        "utils\\execFileNoThrow.ts",
        "path",
        "fs/promises",
        "fs",
        "utils\\model.ts",
        "utils\\generators.ts",
        "utils\\user.ts",
        "constants\\product.ts"
      ],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "./utils/style",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\style.ts",
          "relativePath": "utils\\style.ts"
        },
        {
          "importPath": "./utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "./tools/lsTool/lsTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\lsTool\\lsTool.tsx",
          "relativePath": "tools\\lsTool\\lsTool.tsx"
        },
        {
          "importPath": "./utils/git",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\git.ts",
          "relativePath": "utils\\git.ts"
        },
        {
          "importPath": "./utils/ripgrep",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\ripgrep.ts",
          "relativePath": "utils\\ripgrep.ts"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "./utils/execFileNoThrow",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\execFileNoThrow.ts",
          "relativePath": "utils\\execFileNoThrow.ts"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "fs/promises",
          "resolvedPath": null,
          "relativePath": "fs/promises"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "./utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "./utils/generators",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\generators.ts",
          "relativePath": "utils\\generators.ts"
        },
        {
          "importPath": "./utils/user",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\user.ts",
          "relativePath": "utils\\user.ts"
        },
        {
          "importPath": "./constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 16,
      "dependentCount": 0,
      "importanceScore": 9
    },
    {
      "path": "cost-tracker.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\cost-tracker.ts",
      "imports": [
        "chalk",
        "react",
        "utils\\format.tsx",
        "utils\\log.ts"
      ],
      "importedBy": [
        "commands\\cost.ts",
        "screens\\REPL.tsx",
        "services\\claude.ts",
        "utils\\ask.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "./utils/format",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\format.tsx",
          "relativePath": "utils\\format.tsx"
        },
        {
          "importPath": "./utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 4,
      "importanceScore": 21
    },
    {
      "path": "entrypoints\\cli.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\entrypoints\\cli.tsx",
      "imports": [
        "node:url",
        "node:path",
        "node:fs",
        "services\\sentry.ts",
        "constants\\product.ts",
        "react",
        "tty",
        "fs",
        "ink",
        "history.ts",
        "context",
        "utils\\ask.tsx",
        "permissions.ts",
        "tools",
        "process",
        "utils\\log.ts",
        "utils\\debugLogger.ts",
        "components\\Onboarding.tsx",
        "screens\\Doctor.tsx",
        "components\\ApproveApiKey.tsx",
        "components\\TrustDialog.tsx",
        "utils\\config.ts",
        "utils\\model.ts",
        "screens\\LogList.tsx",
        "screens\\ResumeConversation.tsx",
        "entrypoints\\mcp.ts",
        "utils\\env.ts",
        "utils\\state.ts",
        "lodash-es",
        "commands",
        "utils\\log.ts",
        "utils\\conversationRecovery.ts",
        "utils\\cleanup.ts",
        "services\\mcpServerApproval.tsx",
        "utils\\exampleCommands.ts",
        "ansi-escapes",
        "utils\\autoUpdater.ts",
        "semver",
        "utils\\log.ts",
        "utils\\PersistentShell.ts",
        "utils\\terminal.ts",
        "components\\InvalidConfigDialog.tsx",
        "utils\\errors.ts",
        "utils\\permissions\\filesystem.ts",
        "constants\\macros.ts"
      ],
      "importedBy": [],
      "externalImports": [
        "@anthropic-ai/sdk/shims/node",
        "@commander-js/extra-typings"
      ],
      "internalImports": [
        {
          "importPath": "node:url",
          "resolvedPath": null,
          "relativePath": "node:url"
        },
        {
          "importPath": "node:path",
          "resolvedPath": null,
          "relativePath": "node:path"
        },
        {
          "importPath": "node:fs",
          "resolvedPath": null,
          "relativePath": "node:fs"
        },
        {
          "importPath": "../services/sentry",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\sentry.ts",
          "relativePath": "services\\sentry.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "tty",
          "resolvedPath": null,
          "relativePath": "tty"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../history",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\history.ts",
          "relativePath": "history.ts"
        },
        {
          "importPath": "../context",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context",
          "relativePath": "context"
        },
        {
          "importPath": "../utils/ask",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\ask.tsx",
          "relativePath": "utils\\ask.tsx"
        },
        {
          "importPath": "../permissions",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\permissions.ts",
          "relativePath": "permissions.ts"
        },
        {
          "importPath": "../tools",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools",
          "relativePath": "tools"
        },
        {
          "importPath": "process",
          "resolvedPath": null,
          "relativePath": "process"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../utils/debugLogger",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\debugLogger.ts",
          "relativePath": "utils\\debugLogger.ts"
        },
        {
          "importPath": "../components/Onboarding",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Onboarding.tsx",
          "relativePath": "components\\Onboarding.tsx"
        },
        {
          "importPath": "../screens/Doctor",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\screens\\Doctor.tsx",
          "relativePath": "screens\\Doctor.tsx"
        },
        {
          "importPath": "../components/ApproveApiKey",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ApproveApiKey.tsx",
          "relativePath": "components\\ApproveApiKey.tsx"
        },
        {
          "importPath": "../components/TrustDialog",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\TrustDialog.tsx",
          "relativePath": "components\\TrustDialog.tsx"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../screens/LogList",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\screens\\LogList.tsx",
          "relativePath": "screens\\LogList.tsx"
        },
        {
          "importPath": "../screens/ResumeConversation",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\screens\\ResumeConversation.tsx",
          "relativePath": "screens\\ResumeConversation.tsx"
        },
        {
          "importPath": "./mcp",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\entrypoints\\mcp.ts",
          "relativePath": "entrypoints\\mcp.ts"
        },
        {
          "importPath": "../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../utils/conversationRecovery",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\conversationRecovery.ts",
          "relativePath": "utils\\conversationRecovery.ts"
        },
        {
          "importPath": "../utils/cleanup",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\cleanup.ts",
          "relativePath": "utils\\cleanup.ts"
        },
        {
          "importPath": "../services/mcpServerApproval",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\mcpServerApproval.tsx",
          "relativePath": "services\\mcpServerApproval.tsx"
        },
        {
          "importPath": "../utils/exampleCommands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\exampleCommands.ts",
          "relativePath": "utils\\exampleCommands.ts"
        },
        {
          "importPath": "ansi-escapes",
          "resolvedPath": null,
          "relativePath": "ansi-escapes"
        },
        {
          "importPath": "../utils/autoUpdater",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\autoUpdater.ts",
          "relativePath": "utils\\autoUpdater.ts"
        },
        {
          "importPath": "semver",
          "resolvedPath": null,
          "relativePath": "semver"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../utils/PersistentShell",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\PersistentShell.ts",
          "relativePath": "utils\\PersistentShell.ts"
        },
        {
          "importPath": "../utils/terminal",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
          "relativePath": "utils\\terminal.ts"
        },
        {
          "importPath": "../components/InvalidConfigDialog",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\InvalidConfigDialog.tsx",
          "relativePath": "components\\InvalidConfigDialog.tsx"
        },
        {
          "importPath": "../utils/errors",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\errors.ts",
          "relativePath": "utils\\errors.ts"
        },
        {
          "importPath": "../utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        },
        {
          "importPath": "../constants/macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        }
      ],
      "dependencyCount": 45,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "entrypoints\\mcp.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\entrypoints\\mcp.ts",
      "imports": [
        "zod",
        "zod-to-json-schema",
        "tools\\TaskTool\\TaskTool.tsx",
        "permissions.ts",
        "utils\\state.ts",
        "utils\\model.ts",
        "utils\\log.ts",
        "tools\\lsTool\\lsTool.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\GrepTool\\GrepTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "Tool.ts",
        "commands",
        "commands\\review.ts",
        "utils\\generators.ts",
        "constants\\macros.ts"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [
        "@modelcontextprotocol/sdk/server/index.js",
        "@modelcontextprotocol/sdk/server/stdio.js"
      ],
      "internalImports": [
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "zod-to-json-schema",
          "resolvedPath": null,
          "relativePath": "zod-to-json-schema"
        },
        {
          "importPath": "../tools/TaskTool/TaskTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TaskTool\\TaskTool.tsx",
          "relativePath": "tools\\TaskTool\\TaskTool.tsx"
        },
        {
          "importPath": "../permissions",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\permissions.ts",
          "relativePath": "permissions.ts"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../tools/lsTool/lsTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\lsTool\\lsTool.tsx",
          "relativePath": "tools\\lsTool\\lsTool.tsx"
        },
        {
          "importPath": "../tools/BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        },
        {
          "importPath": "../tools/FileEditTool/FileEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\FileEditTool.tsx",
          "relativePath": "tools\\FileEditTool\\FileEditTool.tsx"
        },
        {
          "importPath": "../tools/FileReadTool/FileReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileReadTool\\FileReadTool.tsx",
          "relativePath": "tools\\FileReadTool\\FileReadTool.tsx"
        },
        {
          "importPath": "../tools/GlobTool/GlobTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GlobTool\\GlobTool.tsx",
          "relativePath": "tools\\GlobTool\\GlobTool.tsx"
        },
        {
          "importPath": "../tools/GrepTool/GrepTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GrepTool\\GrepTool.tsx",
          "relativePath": "tools\\GrepTool\\GrepTool.tsx"
        },
        {
          "importPath": "../tools/FileWriteTool/FileWriteTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileWriteTool\\FileWriteTool.tsx",
          "relativePath": "tools\\FileWriteTool\\FileWriteTool.tsx"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../commands/review",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\review.ts",
          "relativePath": "commands\\review.ts"
        },
        {
          "importPath": "../utils/generators",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\generators.ts",
          "relativePath": "utils\\generators.ts"
        },
        {
          "importPath": "../constants/macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        }
      ],
      "dependencyCount": 19,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "history.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\history.ts",
      "imports": [],
      "importedBy": [
        "components\\PromptInput.tsx",
        "entrypoints\\cli.tsx",
        "hooks\\useArrowKeyHistory.ts",
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 4,
      "importanceScore": 21
    },
    {
      "path": "hooks\\useApiKeyVerification.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useApiKeyVerification.ts",
      "imports": [
        "react",
        "services\\claude.ts",
        "utils\\config.ts"
      ],
      "importedBy": [
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "hooks\\useArrowKeyHistory.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useArrowKeyHistory.ts",
      "imports": [
        "react",
        "history.ts"
      ],
      "importedBy": [
        "components\\PromptInput.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../history",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\history.ts",
          "relativePath": "history.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "hooks\\useCancelRequest.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useCancelRequest.ts",
      "imports": [
        "ink",
        "components\\permissions\\PermissionRequest.tsx",
        "screens\\REPL.tsx",
        "Tool.ts"
      ],
      "importedBy": [
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../components/permissions/PermissionRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\PermissionRequest.tsx",
          "relativePath": "components\\permissions\\PermissionRequest.tsx"
        },
        {
          "importPath": "../screens/REPL",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\screens\\REPL.tsx",
          "relativePath": "screens\\REPL.tsx"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "hooks\\useCanUseTool.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useCanUseTool.ts",
      "imports": [
        "react",
        "permissions.ts",
        "tools\\BashTool\\BashTool.tsx",
        "utils\\commands.ts",
        "utils\\messages.tsx",
        "Tool.ts",
        "query.ts",
        "components\\permissions\\PermissionRequest.tsx",
        "utils\\errors.ts",
        "utils\\log.ts"
      ],
      "importedBy": [
        "permissions.ts",
        "query.ts",
        "screens\\REPL.tsx",
        "utils\\ask.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../permissions",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\permissions.ts",
          "relativePath": "permissions.ts"
        },
        {
          "importPath": "../tools/BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        },
        {
          "importPath": "../utils/commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\commands.ts",
          "relativePath": "utils\\commands.ts"
        },
        {
          "importPath": "../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../components/permissions/PermissionRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\PermissionRequest.tsx",
          "relativePath": "components\\permissions\\PermissionRequest.tsx"
        },
        {
          "importPath": "../utils/errors",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\errors.ts",
          "relativePath": "utils\\errors.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 10,
      "dependentCount": 4,
      "importanceScore": 20
    },
    {
      "path": "hooks\\useDoublePress.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useDoublePress.ts",
      "imports": [
        "react"
      ],
      "importedBy": [
        "hooks\\useExitOnCtrlCD.ts",
        "hooks\\useTextInput.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "hooks\\useExitOnCtrlCD.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useExitOnCtrlCD.ts",
      "imports": [
        "ink",
        "hooks\\useDoublePress.ts",
        "react"
      ],
      "importedBy": [
        "commands\\login.tsx",
        "components\\ApproveApiKey.tsx",
        "components\\binary-feedback\\BinaryFeedbackView.tsx",
        "components\\Bug.tsx",
        "components\\Config.tsx",
        "components\\InvalidConfigDialog.tsx",
        "components\\MCPServerApprovalDialog.tsx",
        "components\\MCPServerMultiselectDialog.tsx",
        "components\\MessageSelector.tsx",
        "components\\ModelConfig.tsx",
        "components\\ModelListManager.tsx",
        "components\\ModelSelector.tsx",
        "components\\ModelStatusDisplay.tsx",
        "components\\Onboarding.tsx",
        "components\\TrustDialog.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "./useDoublePress",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useDoublePress.ts",
          "relativePath": "hooks\\useDoublePress.ts"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 15,
      "importanceScore": 53
    },
    {
      "path": "hooks\\useInterval.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useInterval.ts",
      "imports": [
        "react"
      ],
      "importedBy": [
        "components\\ToolUseLoader.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "hooks\\useLogMessages.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useLogMessages.ts",
      "imports": [
        "react",
        "query.ts",
        "utils\\log.ts"
      ],
      "importedBy": [
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "hooks\\useLogStartupTime.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useLogStartupTime.ts",
      "imports": [
        "react"
      ],
      "importedBy": [
        "screens\\REPL.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "hooks\\useNotifyAfterTimeout.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useNotifyAfterTimeout.ts",
      "imports": [
        "react",
        "services\\notifier.ts",
        "lodash-es"
      ],
      "importedBy": [
        "components\\binary-feedback\\BinaryFeedback.tsx",
        "components\\permissions\\PermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../services/notifier",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\notifier.ts",
          "relativePath": "services\\notifier.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "hooks\\usePermissionRequestLogging.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\usePermissionRequestLogging.ts",
      "imports": [
        "react",
        "utils\\unaryLogging.ts",
        "components\\permissions\\PermissionRequest.tsx",
        "utils\\env.ts"
      ],
      "importedBy": [
        "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/unaryLogging",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\unaryLogging.ts",
          "relativePath": "utils\\unaryLogging.ts"
        },
        {
          "importPath": "../components/permissions/PermissionRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\permissions\\PermissionRequest.tsx",
          "relativePath": "components\\permissions\\PermissionRequest.tsx"
        },
        {
          "importPath": "../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "hooks\\useTerminalSize.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTerminalSize.ts",
      "imports": [
        "react"
      ],
      "importedBy": [
        "components\\binary-feedback\\BinaryFeedbackOption.tsx",
        "components\\Bug.tsx",
        "components\\ConsoleOAuthFlow.tsx",
        "components\\FileEditToolUpdatedMessage.tsx",
        "components\\LogSelector.tsx",
        "components\\Message.tsx",
        "components\\messages\\AssistantTextMessage.tsx",
        "components\\messages\\UserPromptMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolRejectMessage.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx",
        "components\\PromptInput.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 12,
      "importanceScore": 44
    },
    {
      "path": "hooks\\useTextInput.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useTextInput.ts",
      "imports": [
        "react",
        "ink",
        "hooks\\useDoublePress.ts",
        "utils\\Cursor.ts"
      ],
      "importedBy": [
        "components\\TextInput.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "./useDoublePress",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useDoublePress.ts",
          "relativePath": "hooks\\useDoublePress.ts"
        },
        {
          "importPath": "../utils/Cursor",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\Cursor.ts",
          "relativePath": "utils\\Cursor.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "hooks\\useUnifiedCompletion.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useUnifiedCompletion.ts",
      "imports": [
        "react",
        "ink",
        "fs",
        "path",
        "utils\\state.ts",
        "commands",
        "utils\\agentLoader.ts",
        "utils\\model.ts",
        "glob",
        "utils\\fuzzyMatcher.ts",
        "commands"
      ],
      "importedBy": [
        "components\\PromptInput.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../utils/agentLoader",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentLoader.ts",
          "relativePath": "utils\\agentLoader.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "glob",
          "resolvedPath": null,
          "relativePath": "glob"
        },
        {
          "importPath": "../utils/fuzzyMatcher",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\fuzzyMatcher.ts",
          "relativePath": "utils\\fuzzyMatcher.ts"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        }
      ],
      "dependencyCount": 11,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "index.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\index.ts",
      "imports": [
        "module",
        "..\\package.json"
      ],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "module",
          "resolvedPath": null,
          "relativePath": "module"
        },
        {
          "importPath": "../package.json",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\package.json",
          "relativePath": "..\\package.json"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 0,
      "importanceScore": 9
    },
    {
      "path": "messages.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\messages.ts",
      "imports": [
        "react",
        "query.ts"
      ],
      "importedBy": [
        "commands\\clear.ts",
        "commands\\compact.ts",
        "commands\\ctx_viz.ts",
        "commands\\model.tsx",
        "components\\Bug.tsx",
        "utils\\autoCompactCore.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "./query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 6,
      "importanceScore": 27
    },
    {
      "path": "permissions.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\permissions.ts",
      "imports": [
        "hooks\\useCanUseTool.ts",
        "Tool.ts",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "utils\\commands.ts",
        "utils\\errors.ts",
        "utils\\log.ts",
        "utils\\permissions\\filesystem.ts",
        "utils\\state.ts",
        "constants\\product.ts"
      ],
      "importedBy": [
        "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx",
        "components\\permissions\\FallbackPermissionRequest.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx",
        "entrypoints\\cli.tsx",
        "entrypoints\\mcp.ts",
        "hooks\\useCanUseTool.ts",
        "tools\\TaskTool\\TaskTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./hooks/useCanUseTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useCanUseTool.ts",
          "relativePath": "hooks\\useCanUseTool.ts"
        },
        {
          "importPath": "./Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "./tools/BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        },
        {
          "importPath": "./tools/FileEditTool/FileEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\FileEditTool.tsx",
          "relativePath": "tools\\FileEditTool\\FileEditTool.tsx"
        },
        {
          "importPath": "./tools/FileWriteTool/FileWriteTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileWriteTool\\FileWriteTool.tsx",
          "relativePath": "tools\\FileWriteTool\\FileWriteTool.tsx"
        },
        {
          "importPath": "./tools/NotebookEditTool/NotebookEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\NotebookEditTool.tsx",
          "relativePath": "tools\\NotebookEditTool\\NotebookEditTool.tsx"
        },
        {
          "importPath": "./utils/commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\commands.ts",
          "relativePath": "utils\\commands.ts"
        },
        {
          "importPath": "./utils/errors",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\errors.ts",
          "relativePath": "utils\\errors.ts"
        },
        {
          "importPath": "./utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "./utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        },
        {
          "importPath": "./utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "./constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 12,
      "dependentCount": 8,
      "importanceScore": 33
    },
    {
      "path": "ProjectOnboarding.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\ProjectOnboarding.tsx",
      "imports": [
        "react",
        "ink",
        "fs",
        "path",
        "os",
        "commands\\terminalSetup.ts",
        "utils\\theme.ts",
        "constants\\releaseNotes.ts",
        "semver",
        "utils\\file.ts",
        "constants\\macros.ts",
        "constants\\product.ts"
      ],
      "importedBy": [
        "commands\\init.ts",
        "commands\\terminalSetup.ts"
      ],
      "externalImports": [
        "@inkjs/ui"
      ],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "./commands/terminalSetup",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\terminalSetup.ts",
          "relativePath": "commands\\terminalSetup.ts"
        },
        {
          "importPath": "./utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./constants/releaseNotes",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\releaseNotes.ts",
          "relativePath": "constants\\releaseNotes.ts"
        },
        {
          "importPath": "semver",
          "resolvedPath": null,
          "relativePath": "semver"
        },
        {
          "importPath": "./utils/file",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\file.ts",
          "relativePath": "utils\\file.ts"
        },
        {
          "importPath": "./constants/macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        },
        {
          "importPath": "./constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 12,
      "dependentCount": 2,
      "importanceScore": 15
    },
    {
      "path": "query.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
      "imports": [
        "Tool.ts",
        "hooks\\useCanUseTool.ts",
        "services\\systemReminder.ts",
        "utils\\generators.ts",
        "utils\\log.ts",
        "utils\\toolExecutionController.ts",
        "tools\\BashTool\\BashTool.tsx",
        "utils\\state.ts",
        "utils\\autoCompactCore.ts"
      ],
      "importedBy": [
        "commands\\clear.ts",
        "commands.ts",
        "components\\binary-feedback\\BinaryFeedback.tsx",
        "components\\binary-feedback\\BinaryFeedbackOption.tsx",
        "components\\binary-feedback\\BinaryFeedbackView.tsx",
        "components\\binary-feedback\\utils.ts",
        "components\\Bug.tsx",
        "components\\Message.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolRejectMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolSuccessMessage.tsx",
        "components\\messages\\UserToolResultMessage\\utils.tsx",
        "components\\MessageSelector.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "components\\PromptInput.tsx",
        "hooks\\useCanUseTool.ts",
        "hooks\\useLogMessages.ts",
        "messages.ts",
        "services\\claude.ts",
        "services\\vcr.ts",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools\\TaskTool\\TaskTool.tsx",
        "utils\\ask.tsx",
        "utils\\autoCompactCore.ts",
        "utils\\messageContextManager.ts",
        "utils\\thinking.ts",
        "utils\\tokens.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "./hooks/useCanUseTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useCanUseTool.ts",
          "relativePath": "hooks\\useCanUseTool.ts"
        },
        {
          "importPath": "./services/systemReminder",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
          "relativePath": "services\\systemReminder.ts"
        },
        {
          "importPath": "./utils/generators",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\generators.ts",
          "relativePath": "utils\\generators.ts"
        },
        {
          "importPath": "./utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "./utils/toolExecutionController",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\toolExecutionController.ts",
          "relativePath": "utils\\toolExecutionController.ts"
        },
        {
          "importPath": "./tools/BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        },
        {
          "importPath": "./utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "./utils/autoCompactCore",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\autoCompactCore.ts",
          "relativePath": "utils\\autoCompactCore.ts"
        }
      ],
      "dependencyCount": 9,
      "dependentCount": 27,
      "importanceScore": 90
    },
    {
      "path": "screens\\Doctor.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\screens\\Doctor.tsx",
      "imports": [
        "react",
        "ink",
        "utils\\theme.ts",
        "components\\PressEnterToContinue.tsx"
      ],
      "importedBy": [
        "commands\\doctor.ts",
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../components/PressEnterToContinue",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\PressEnterToContinue.tsx",
          "relativePath": "components\\PressEnterToContinue.tsx"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "screens\\LogList.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\screens\\LogList.tsx",
      "imports": [
        "react",
        "utils\\log.ts",
        "components\\LogSelector.tsx",
        "types\\logs.ts",
        "utils\\log.ts",
        "utils\\log.ts"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../components/LogSelector",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\LogSelector.tsx",
          "relativePath": "components\\LogSelector.tsx"
        },
        {
          "importPath": "../types/logs",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\logs.ts",
          "relativePath": "types\\logs.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "screens\\REPL.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\screens\\REPL.tsx",
      "imports": [
        "ink",
        "components\\CostThresholdDialog.tsx",
        "react",
        "react",
        "commands",
        "components\\Logo.tsx",
        "components\\Message.tsx",
        "components\\MessageResponse.tsx",
        "components\\MessageSelector.tsx",
        "components\\PromptInput.tsx",
        "components\\Spinner.tsx",
        "constants\\prompts.ts",
        "context",
        "cost-tracker.ts",
        "hooks\\useLogStartupTime.ts",
        "history.ts",
        "hooks\\useApiKeyVerification.ts",
        "hooks\\useCancelRequest.ts",
        "hooks\\useCanUseTool.ts",
        "hooks\\useLogMessages.ts",
        "context\\PermissionContext.tsx",
        "components\\ModeIndicator.tsx",
        "services\\mcpClient.ts",
        "Tool.ts",
        "utils\\config.ts",
        "constants\\macros.ts",
        "utils\\log.ts",
        "utils\\model.ts",
        "utils\\terminal.ts",
        "components\\binary-feedback\\BinaryFeedback.tsx",
        "utils\\thinking.ts",
        "utils\\state.ts",
        "commands\\terminalSetup.ts",
        "utils\\debugLogger.ts"
      ],
      "importedBy": [
        "hooks\\useCancelRequest.ts",
        "screens\\ResumeConversation.tsx"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../components/CostThresholdDialog",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\CostThresholdDialog.tsx",
          "relativePath": "components\\CostThresholdDialog.tsx"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../components/Logo",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Logo.tsx",
          "relativePath": "components\\Logo.tsx"
        },
        {
          "importPath": "../components/Message",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Message.tsx",
          "relativePath": "components\\Message.tsx"
        },
        {
          "importPath": "../components/MessageResponse",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MessageResponse.tsx",
          "relativePath": "components\\MessageResponse.tsx"
        },
        {
          "importPath": "../components/MessageSelector",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MessageSelector.tsx",
          "relativePath": "components\\MessageSelector.tsx"
        },
        {
          "importPath": "../components/PromptInput",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\PromptInput.tsx",
          "relativePath": "components\\PromptInput.tsx"
        },
        {
          "importPath": "../components/Spinner",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Spinner.tsx",
          "relativePath": "components\\Spinner.tsx"
        },
        {
          "importPath": "../constants/prompts",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\prompts.ts",
          "relativePath": "constants\\prompts.ts"
        },
        {
          "importPath": "../context",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context",
          "relativePath": "context"
        },
        {
          "importPath": "../cost-tracker",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\cost-tracker.ts",
          "relativePath": "cost-tracker.ts"
        },
        {
          "importPath": "../hooks/useLogStartupTime",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useLogStartupTime.ts",
          "relativePath": "hooks\\useLogStartupTime.ts"
        },
        {
          "importPath": "../history",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\history.ts",
          "relativePath": "history.ts"
        },
        {
          "importPath": "../hooks/useApiKeyVerification",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useApiKeyVerification.ts",
          "relativePath": "hooks\\useApiKeyVerification.ts"
        },
        {
          "importPath": "../hooks/useCancelRequest",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useCancelRequest.ts",
          "relativePath": "hooks\\useCancelRequest.ts"
        },
        {
          "importPath": "../hooks/useCanUseTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useCanUseTool.ts",
          "relativePath": "hooks\\useCanUseTool.ts"
        },
        {
          "importPath": "../hooks/useLogMessages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useLogMessages.ts",
          "relativePath": "hooks\\useLogMessages.ts"
        },
        {
          "importPath": "../context/PermissionContext",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context\\PermissionContext.tsx",
          "relativePath": "context\\PermissionContext.tsx"
        },
        {
          "importPath": "../components/ModeIndicator",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\ModeIndicator.tsx",
          "relativePath": "components\\ModeIndicator.tsx"
        },
        {
          "importPath": "../services/mcpClient",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\mcpClient.ts",
          "relativePath": "services\\mcpClient.ts"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../constants/macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../utils/terminal",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
          "relativePath": "utils\\terminal.ts"
        },
        {
          "importPath": "../components/binary-feedback/BinaryFeedback",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\binary-feedback\\BinaryFeedback.tsx",
          "relativePath": "components\\binary-feedback\\BinaryFeedback.tsx"
        },
        {
          "importPath": "../utils/thinking",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\thinking.ts",
          "relativePath": "utils\\thinking.ts"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../commands/terminalSetup",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands\\terminalSetup.ts",
          "relativePath": "commands\\terminalSetup.ts"
        },
        {
          "importPath": "../utils/debugLogger",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\debugLogger.ts",
          "relativePath": "utils\\debugLogger.ts"
        }
      ],
      "dependencyCount": 34,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "screens\\ResumeConversation.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\screens\\ResumeConversation.tsx",
      "imports": [
        "react",
        "ink",
        "screens\\REPL.tsx",
        "utils\\conversationRecovery.ts",
        "components\\LogSelector.tsx",
        "types\\logs.ts",
        "utils\\log.ts",
        "Tool.ts",
        "commands",
        "utils\\model.ts"
      ],
      "importedBy": [
        "commands\\resume.tsx",
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "./REPL",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\screens\\REPL.tsx",
          "relativePath": "screens\\REPL.tsx"
        },
        {
          "importPath": "../utils/conversationRecovery",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\conversationRecovery.ts",
          "relativePath": "utils\\conversationRecovery.ts"
        },
        {
          "importPath": "../components/LogSelector",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\LogSelector.tsx",
          "relativePath": "components\\LogSelector.tsx"
        },
        {
          "importPath": "../types/logs",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\logs.ts",
          "relativePath": "types\\logs.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        }
      ],
      "dependencyCount": 10,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "services\\adapters\\base.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\adapters\\base.ts",
      "imports": [
        "types\\modelCapabilities.ts",
        "utils\\config.ts",
        "Tool.ts"
      ],
      "importedBy": [
        "services\\adapters\\chatCompletions.ts",
        "services\\adapters\\responsesAPI.ts",
        "services\\modelAdapterFactory.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../../types/modelCapabilities",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\modelCapabilities.ts",
          "relativePath": "types\\modelCapabilities.ts"
        },
        {
          "importPath": "../../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 3,
      "importanceScore": 16
    },
    {
      "path": "services\\adapters\\chatCompletions.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\adapters\\chatCompletions.ts",
      "imports": [
        "services\\adapters\\base.ts",
        "types\\modelCapabilities.ts",
        "Tool.ts",
        "zod-to-json-schema"
      ],
      "importedBy": [
        "services\\modelAdapterFactory.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./base",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\adapters\\base.ts",
          "relativePath": "services\\adapters\\base.ts"
        },
        {
          "importPath": "../../types/modelCapabilities",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\modelCapabilities.ts",
          "relativePath": "types\\modelCapabilities.ts"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "zod-to-json-schema",
          "resolvedPath": null,
          "relativePath": "zod-to-json-schema"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "services\\adapters\\responsesAPI.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\adapters\\responsesAPI.ts",
      "imports": [
        "services\\adapters\\base.ts",
        "types\\modelCapabilities.ts",
        "Tool.ts",
        "zod-to-json-schema"
      ],
      "importedBy": [
        "services\\modelAdapterFactory.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./base",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\adapters\\base.ts",
          "relativePath": "services\\adapters\\base.ts"
        },
        {
          "importPath": "../../types/modelCapabilities",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\modelCapabilities.ts",
          "relativePath": "types\\modelCapabilities.ts"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "zod-to-json-schema",
          "resolvedPath": null,
          "relativePath": "zod-to-json-schema"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "services\\browserMocks.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\browserMocks.ts",
      "imports": [],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "services\\claude.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
      "imports": [
        "chalk",
        "crypto",
        "cost-tracker.ts",
        "constants\\models.ts",
        "query.ts",
        "Tool.ts",
        "context",
        "utils\\log.ts",
        "utils\\http.ts",
        "utils\\tokens.ts",
        "services\\vcr.ts",
        "utils\\model.ts",
        "zod-to-json-schema",
        "services\\modelAdapterFactory.ts",
        "types\\modelCapabilities.ts",
        "services\\responseStateManager.ts",
        "Tool.ts",
        "utils\\model.ts",
        "constants\\prompts.ts",
        "utils\\model.ts",
        "openai",
        "openai/lib/ChatCompletionStream",
        "nanoid",
        "services\\openai.ts",
        "utils\\thinking.ts",
        "services\\systemReminder.ts",
        "dotenv/config"
      ],
      "importedBy": [
        "commands\\compact.ts",
        "components\\binary-feedback\\utils.ts",
        "components\\Bug.tsx",
        "components\\messages\\UserTextMessage.tsx",
        "components\\ModelSelector.tsx",
        "hooks\\useApiKeyVerification.ts",
        "services\\oauth.ts",
        "tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\BashTool\\utils.ts",
        "tools\\URLFetcherTool\\URLFetcherTool.tsx",
        "utils\\autoCompactCore.ts",
        "utils\\commands.ts",
        "utils\\exampleCommands.ts",
        "utils\\messages.tsx",
        "utils\\terminal.ts"
      ],
      "externalImports": [
        "@anthropic-ai/sdk",
        "@anthropic-ai/bedrock-sdk",
        "@anthropic-ai/vertex-sdk",
        "@anthropic-ai/sdk/resources/beta/messages/messages.mjs",
        "@anthropic-ai/sdk/lib/BetaMessageStream.mjs",
        "@anthropic-ai/sdk/resources/messages/messages",
        "@anthropic-ai/sdk/shims/node"
      ],
      "internalImports": [
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        },
        {
          "importPath": "../cost-tracker",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\cost-tracker.ts",
          "relativePath": "cost-tracker.ts"
        },
        {
          "importPath": "../constants/models",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\models.ts",
          "relativePath": "constants\\models.ts"
        },
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../context",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context",
          "relativePath": "context"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../utils/http",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\http.ts",
          "relativePath": "utils\\http.ts"
        },
        {
          "importPath": "../utils/tokens",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\tokens.ts",
          "relativePath": "utils\\tokens.ts"
        },
        {
          "importPath": "./vcr",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\vcr.ts",
          "relativePath": "services\\vcr.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "zod-to-json-schema",
          "resolvedPath": null,
          "relativePath": "zod-to-json-schema"
        },
        {
          "importPath": "./modelAdapterFactory",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\modelAdapterFactory.ts",
          "relativePath": "services\\modelAdapterFactory.ts"
        },
        {
          "importPath": "../types/modelCapabilities",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\modelCapabilities.ts",
          "relativePath": "types\\modelCapabilities.ts"
        },
        {
          "importPath": "./responseStateManager",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\responseStateManager.ts",
          "relativePath": "services\\responseStateManager.ts"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../constants/prompts",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\prompts.ts",
          "relativePath": "constants\\prompts.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "openai",
          "resolvedPath": null,
          "relativePath": "openai"
        },
        {
          "importPath": "openai/lib/ChatCompletionStream",
          "resolvedPath": null,
          "relativePath": "openai/lib/ChatCompletionStream"
        },
        {
          "importPath": "nanoid",
          "resolvedPath": null,
          "relativePath": "nanoid"
        },
        {
          "importPath": "./openai",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\openai.ts",
          "relativePath": "services\\openai.ts"
        },
        {
          "importPath": "../utils/thinking",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\thinking.ts",
          "relativePath": "utils\\thinking.ts"
        },
        {
          "importPath": "./systemReminder",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
          "relativePath": "services\\systemReminder.ts"
        },
        {
          "importPath": "dotenv/config",
          "resolvedPath": null,
          "relativePath": "dotenv/config"
        }
      ],
      "dependencyCount": 27,
      "dependentCount": 16,
      "importanceScore": 56
    },
    {
      "path": "services\\customCommands.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\customCommands.ts",
      "imports": [
        "fs",
        "path",
        "os",
        "lodash-es",
        "commands",
        "utils\\state.ts",
        "child_process",
        "util"
      ],
      "importedBy": [
        "commands\\refreshCommands.ts",
        "commands.ts"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "child_process",
          "resolvedPath": null,
          "relativePath": "child_process"
        },
        {
          "importPath": "util",
          "resolvedPath": null,
          "relativePath": "util"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "services\\fileFreshness.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\fileFreshness.ts",
      "imports": [
        "fs",
        "utils\\agentStorage.ts"
      ],
      "importedBy": [
        "commands\\clear.ts",
        "commands\\compact.ts",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\MemoryWriteTool\\MemoryWriteTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "tools\\TodoWriteTool\\TodoWriteTool.tsx",
        "utils\\autoCompactCore.ts",
        "utils\\fileRecoveryCore.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "../utils/agentStorage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentStorage.ts",
          "relativePath": "utils\\agentStorage.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 10,
      "importanceScore": 38
    },
    {
      "path": "services\\gpt5ConnectionTest.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\gpt5ConnectionTest.ts",
      "imports": [
        "services\\openai.ts"
      ],
      "importedBy": [
        "components\\ModelSelector.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./openai",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\openai.ts",
          "relativePath": "services\\openai.ts"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "services\\mcpClient.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\mcpClient.ts",
      "imports": [
        "lodash-es",
        "fs",
        "path",
        "utils\\state.ts",
        "utils\\json.ts",
        "lodash-es",
        "Tool.ts",
        "tools\\MCPTool\\MCPTool.tsx",
        "utils\\log.ts",
        "commands"
      ],
      "importedBy": [
        "commands\\agents.tsx",
        "commands\\mcp.ts",
        "commands.ts",
        "components\\Logo.tsx",
        "screens\\REPL.tsx",
        "services\\mcpServerApproval.tsx",
        "tools.ts"
      ],
      "externalImports": [
        "@modelcontextprotocol/sdk/client/index.js",
        "@modelcontextprotocol/sdk/client/stdio.js",
        "@modelcontextprotocol/sdk/client/sse.js"
      ],
      "internalImports": [
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../utils/json",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\json.ts",
          "relativePath": "utils\\json.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../tools/MCPTool/MCPTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MCPTool\\MCPTool.tsx",
          "relativePath": "tools\\MCPTool\\MCPTool.tsx"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        }
      ],
      "dependencyCount": 10,
      "dependentCount": 7,
      "importanceScore": 29
    },
    {
      "path": "services\\mcpServerApproval.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\mcpServerApproval.tsx",
      "imports": [
        "react",
        "ink",
        "components\\MCPServerMultiselectDialog.tsx",
        "components\\MCPServerApprovalDialog.tsx",
        "services\\mcpClient.ts",
        "utils\\config.ts"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../components/MCPServerMultiselectDialog",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MCPServerMultiselectDialog.tsx",
          "relativePath": "components\\MCPServerMultiselectDialog.tsx"
        },
        {
          "importPath": "../components/MCPServerApprovalDialog",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MCPServerApprovalDialog.tsx",
          "relativePath": "components\\MCPServerApprovalDialog.tsx"
        },
        {
          "importPath": "./mcpClient",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\mcpClient.ts",
          "relativePath": "services\\mcpClient.ts"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "services\\mentionProcessor.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\mentionProcessor.ts",
      "imports": [
        "services\\systemReminder.ts",
        "utils\\agentLoader.ts",
        "fs",
        "path",
        "utils\\state.ts"
      ],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./systemReminder",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
          "relativePath": "services\\systemReminder.ts"
        },
        {
          "importPath": "../utils/agentLoader",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentLoader.ts",
          "relativePath": "utils\\agentLoader.ts"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "services\\modelAdapterFactory.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\modelAdapterFactory.ts",
      "imports": [
        "services\\adapters\\base.ts",
        "services\\adapters\\responsesAPI.ts",
        "services\\adapters\\chatCompletions.ts",
        "constants\\modelCapabilities.ts",
        "utils\\config.ts",
        "types\\modelCapabilities.ts"
      ],
      "importedBy": [
        "services\\claude.ts",
        "test\\testAdapters.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./adapters/base",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\adapters\\base.ts",
          "relativePath": "services\\adapters\\base.ts"
        },
        {
          "importPath": "./adapters/responsesAPI",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\adapters\\responsesAPI.ts",
          "relativePath": "services\\adapters\\responsesAPI.ts"
        },
        {
          "importPath": "./adapters/chatCompletions",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\adapters\\chatCompletions.ts",
          "relativePath": "services\\adapters\\chatCompletions.ts"
        },
        {
          "importPath": "../constants/modelCapabilities",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\modelCapabilities.ts",
          "relativePath": "constants\\modelCapabilities.ts"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../types/modelCapabilities",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\modelCapabilities.ts",
          "relativePath": "types\\modelCapabilities.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "services\\notifier.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\notifier.ts",
      "imports": [
        "utils\\config.ts"
      ],
      "importedBy": [
        "components\\ConsoleOAuthFlow.tsx",
        "hooks\\useNotifyAfterTimeout.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "services\\oauth.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\oauth.ts",
      "imports": [
        "crypto",
        "http",
        "http",
        "url",
        "constants\\oauth.ts",
        "utils\\browser.ts",
        "utils\\log.ts",
        "services\\claude.ts"
      ],
      "importedBy": [
        "components\\ConsoleOAuthFlow.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        },
        {
          "importPath": "http",
          "resolvedPath": null,
          "relativePath": "http"
        },
        {
          "importPath": "http",
          "resolvedPath": null,
          "relativePath": "http"
        },
        {
          "importPath": "url",
          "resolvedPath": null,
          "relativePath": "url"
        },
        {
          "importPath": "../constants/oauth",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\oauth.ts",
          "relativePath": "constants\\oauth.ts"
        },
        {
          "importPath": "../utils/browser",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\browser.ts",
          "relativePath": "utils\\browser.ts"
        },
        {
          "importPath": "../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "./claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "services\\openai.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\openai.ts",
      "imports": [
        "openai",
        "utils\\config.ts",
        "undici",
        "utils\\sessionState.ts",
        "utils\\debugLogger.ts"
      ],
      "importedBy": [
        "components\\ModelSelector.tsx",
        "services\\claude.ts",
        "services\\gpt5ConnectionTest.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "openai",
          "resolvedPath": null,
          "relativePath": "openai"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "undici",
          "resolvedPath": null,
          "relativePath": "undici"
        },
        {
          "importPath": "../utils/sessionState",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\sessionState.ts",
          "relativePath": "utils\\sessionState.ts"
        },
        {
          "importPath": "../utils/debugLogger",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\debugLogger.ts",
          "relativePath": "utils\\debugLogger.ts"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "services\\responseStateManager.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\responseStateManager.ts",
      "imports": [],
      "importedBy": [
        "services\\claude.ts"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "services\\sentry.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\sentry.ts",
      "imports": [],
      "importedBy": [
        "components\\SentryErrorBoundary.ts",
        "entrypoints\\cli.tsx",
        "utils\\log.ts"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "services\\systemReminder.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
      "imports": [
        "utils\\todoStorage.ts"
      ],
      "importedBy": [
        "commands\\clear.ts",
        "commands\\compact.ts",
        "query.ts",
        "services\\claude.ts",
        "services\\mentionProcessor.ts",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "tools\\TodoWriteTool\\TodoWriteTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../utils/todoStorage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\todoStorage.ts",
          "relativePath": "utils\\todoStorage.ts"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 11,
      "importanceScore": 41
    },
    {
      "path": "services\\vcr.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\vcr.ts",
      "imports": [
        "crypto",
        "fs",
        "path",
        "query.ts",
        "fs",
        "utils\\env.ts",
        "utils\\state.ts",
        "path",
        "lodash-es"
      ],
      "importedBy": [
        "services\\claude.ts"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        }
      ],
      "dependencyCount": 9,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "test\\testAdapters.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\test\\testAdapters.ts",
      "imports": [
        "services\\modelAdapterFactory.ts",
        "constants\\modelCapabilities.ts",
        "utils\\config.ts"
      ],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../services/modelAdapterFactory",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\modelAdapterFactory.ts",
          "relativePath": "services\\modelAdapterFactory.ts"
        },
        {
          "importPath": "../constants/modelCapabilities",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\modelCapabilities.ts",
          "relativePath": "constants\\modelCapabilities.ts"
        },
        {
          "importPath": "../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "Tool.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
      "imports": [
        "zod",
        "react"
      ],
      "importedBy": [
        "commands\\ctx_viz.ts",
        "commands.ts",
        "components\\binary-feedback\\BinaryFeedback.tsx",
        "components\\binary-feedback\\BinaryFeedbackOption.tsx",
        "components\\binary-feedback\\BinaryFeedbackView.tsx",
        "components\\Message.tsx",
        "components\\messages\\AssistantToolUseMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolRejectMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolSuccessMessage.tsx",
        "components\\messages\\UserToolResultMessage\\utils.tsx",
        "components\\MessageSelector.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "components\\PromptInput.tsx",
        "entrypoints\\mcp.ts",
        "hooks\\useCancelRequest.ts",
        "hooks\\useCanUseTool.ts",
        "permissions.ts",
        "query.ts",
        "screens\\REPL.tsx",
        "screens\\ResumeConversation.tsx",
        "services\\adapters\\base.ts",
        "services\\adapters\\chatCompletions.ts",
        "services\\adapters\\responsesAPI.ts",
        "services\\claude.ts",
        "services\\claude.ts",
        "services\\mcpClient.ts",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\GrepTool\\GrepTool.tsx",
        "tools\\lsTool\\lsTool.tsx",
        "tools\\MCPTool\\MCPTool.tsx",
        "tools\\MemoryReadTool\\MemoryReadTool.tsx",
        "tools\\MemoryWriteTool\\MemoryWriteTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "tools\\NotebookReadTool\\NotebookReadTool.tsx",
        "tools\\StickerRequestTool\\StickerRequestTool.tsx",
        "tools\\TaskTool\\prompt.ts",
        "tools\\TaskTool\\TaskTool.tsx",
        "tools\\ThinkTool\\ThinkTool.tsx",
        "tools\\TodoWriteTool\\TodoWriteTool.tsx",
        "tools\\URLFetcherTool\\URLFetcherTool.tsx",
        "tools\\WebSearchTool\\WebSearchTool.tsx",
        "tools.ts",
        "utils\\ask.tsx",
        "utils\\conversationRecovery.ts",
        "utils\\messages.tsx",
        "utils\\toolExecutionController.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 54,
      "importanceScore": 191
    },
    {
      "path": "tools\\ArchitectTool\\ArchitectTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\ArchitectTool\\ArchitectTool.tsx",
      "imports": [
        "ink",
        "react",
        "zod",
        "Tool.ts",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "components\\HighlightedCode.tsx",
        "context",
        "query.ts",
        "utils\\generators.ts",
        "utils\\messages.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\GrepTool\\GrepTool.tsx",
        "tools\\lsTool\\lsTool.tsx",
        "tools\\ArchitectTool\\prompt.ts"
      ],
      "importedBy": [
        "tools.ts"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../components/HighlightedCode",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\HighlightedCode.tsx",
          "relativePath": "components\\HighlightedCode.tsx"
        },
        {
          "importPath": "../../context",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context",
          "relativePath": "context"
        },
        {
          "importPath": "../../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../../utils/generators",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\generators.ts",
          "relativePath": "utils\\generators.ts"
        },
        {
          "importPath": "../../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "../BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        },
        {
          "importPath": "../FileReadTool/FileReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileReadTool\\FileReadTool.tsx",
          "relativePath": "tools\\FileReadTool\\FileReadTool.tsx"
        },
        {
          "importPath": "../FileWriteTool/FileWriteTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileWriteTool\\FileWriteTool.tsx",
          "relativePath": "tools\\FileWriteTool\\FileWriteTool.tsx"
        },
        {
          "importPath": "../GlobTool/GlobTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GlobTool\\GlobTool.tsx",
          "relativePath": "tools\\GlobTool\\GlobTool.tsx"
        },
        {
          "importPath": "../GrepTool/GrepTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GrepTool\\GrepTool.tsx",
          "relativePath": "tools\\GrepTool\\GrepTool.tsx"
        },
        {
          "importPath": "../lsTool/lsTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\lsTool\\lsTool.tsx",
          "relativePath": "tools\\lsTool\\lsTool.tsx"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\ArchitectTool\\prompt.ts",
          "relativePath": "tools\\ArchitectTool\\prompt.ts"
        }
      ],
      "dependencyCount": 17,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\ArchitectTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\ArchitectTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\ArchitectTool\\ArchitectTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
      "imports": [
        "react",
        "ink",
        "zod",
        "Tool.ts",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "utils\\model.ts",
        "utils\\theme.ts",
        "utils\\log.ts",
        "services\\claude.ts",
        "utils\\debugLogger.ts",
        "utils\\markdown.ts"
      ],
      "importedBy": [
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        },
        {
          "importPath": "../../utils/debugLogger",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\debugLogger.ts",
          "relativePath": "utils\\debugLogger.ts"
        },
        {
          "importPath": "../../utils/markdown",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\markdown.ts",
          "relativePath": "utils\\markdown.ts"
        }
      ],
      "dependencyCount": 11,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\BashTool\\BashTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
      "imports": [
        "fs",
        "os",
        "path",
        "react",
        "zod",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "constants\\product.ts",
        "services\\claude.ts",
        "Tool.ts",
        "utils\\commands.ts",
        "utils\\file.ts",
        "utils\\log.ts",
        "utils\\PersistentShell.ts",
        "utils\\state.ts",
        "utils\\config.ts",
        "utils\\model.ts",
        "tools\\BashTool\\BashToolResultMessage.tsx",
        "tools\\BashTool\\prompt.ts",
        "tools\\BashTool\\utils.ts"
      ],
      "importedBy": [
        "commands\\review.ts",
        "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "constants\\prompts.ts",
        "entrypoints\\mcp.ts",
        "hooks\\useCanUseTool.ts",
        "permissions.ts",
        "query.ts",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools\\BashTool\\BashToolResultMessage.tsx",
        "tools\\TaskTool\\prompt.ts",
        "tools.ts",
        "utils\\messages.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "../../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\commands.ts",
          "relativePath": "utils\\commands.ts"
        },
        {
          "importPath": "../../utils/file",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\file.ts",
          "relativePath": "utils\\file.ts"
        },
        {
          "importPath": "../../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../../utils/PersistentShell",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\PersistentShell.ts",
          "relativePath": "utils\\PersistentShell.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../../utils/config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "../../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "./BashToolResultMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashToolResultMessage.tsx",
          "relativePath": "tools\\BashTool\\BashToolResultMessage.tsx"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\prompt.ts",
          "relativePath": "tools\\BashTool\\prompt.ts"
        },
        {
          "importPath": "./utils",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\utils.ts",
          "relativePath": "tools\\BashTool\\utils.ts"
        }
      ],
      "dependencyCount": 19,
      "dependentCount": 13,
      "importanceScore": 46
    },
    {
      "path": "tools\\BashTool\\BashToolResultMessage.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashToolResultMessage.tsx",
      "imports": [
        "ink",
        "tools\\BashTool\\OutputLine.tsx",
        "react",
        "utils\\theme.ts",
        "tools\\BashTool\\BashTool.tsx"
      ],
      "importedBy": [
        "components\\messages\\AssistantBashOutputMessage.tsx",
        "tools\\BashTool\\BashTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "./OutputLine",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\OutputLine.tsx",
          "relativePath": "tools\\BashTool\\OutputLine.tsx"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "tools\\BashTool\\OutputLine.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\OutputLine.tsx",
      "imports": [
        "ink",
        "react",
        "utils\\theme.ts",
        "tools\\BashTool\\prompt.ts",
        "chalk"
      ],
      "importedBy": [
        "tools\\BashTool\\BashToolResultMessage.tsx",
        "tools\\MCPTool\\MCPTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\prompt.ts",
          "relativePath": "tools\\BashTool\\prompt.ts"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "tools\\BashTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\prompt.ts",
      "imports": [
        "constants\\product.ts",
        "tools\\TaskTool\\constants.ts",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\GlobTool\\prompt.ts",
        "tools\\GrepTool\\prompt.ts",
        "tools\\lsTool\\lsTool.tsx"
      ],
      "importedBy": [
        "tools\\BashTool\\BashTool.tsx",
        "tools\\BashTool\\OutputLine.tsx",
        "tools\\BashTool\\utils.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "../TaskTool/constants",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TaskTool\\constants.ts",
          "relativePath": "tools\\TaskTool\\constants.ts"
        },
        {
          "importPath": "../FileReadTool/FileReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileReadTool\\FileReadTool.tsx",
          "relativePath": "tools\\FileReadTool\\FileReadTool.tsx"
        },
        {
          "importPath": "../GlobTool/prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GlobTool\\prompt.ts",
          "relativePath": "tools\\GlobTool\\prompt.ts"
        },
        {
          "importPath": "../GrepTool/prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GrepTool\\prompt.ts",
          "relativePath": "tools\\GrepTool\\prompt.ts"
        },
        {
          "importPath": "../lsTool/lsTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\lsTool\\lsTool.tsx",
          "relativePath": "tools\\lsTool\\lsTool.tsx"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 3,
      "importanceScore": 16
    },
    {
      "path": "tools\\BashTool\\utils.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\utils.ts",
      "imports": [
        "services\\claude.ts",
        "utils\\messages.tsx",
        "tools\\BashTool\\prompt.ts"
      ],
      "importedBy": [
        "tools\\BashTool\\BashTool.tsx",
        "tools\\NotebookReadTool\\NotebookReadTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        },
        {
          "importPath": "../../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\prompt.ts",
          "relativePath": "tools\\BashTool\\prompt.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "tools\\FileEditTool\\FileEditTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\FileEditTool.tsx",
      "imports": [
        "diff",
        "fs",
        "ink",
        "path",
        "react",
        "zod",
        "components\\FileEditToolUpdatedMessage.tsx",
        "components\\StructuredDiff.tsx",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "Tool.ts",
        "utils\\array.ts",
        "utils\\log.ts",
        "utils\\state.ts",
        "utils\\theme.ts",
        "services\\systemReminder.ts",
        "services\\fileFreshness.ts",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "tools\\FileEditTool\\prompt.ts",
        "tools\\FileEditTool\\utils.ts",
        "utils\\permissions\\filesystem.ts",
        "constants\\product.ts"
      ],
      "importedBy": [
        "components\\binary-feedback\\BinaryFeedbackOption.tsx",
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "entrypoints\\mcp.ts",
        "permissions.ts",
        "tools\\TaskTool\\prompt.ts",
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "diff",
          "resolvedPath": null,
          "relativePath": "diff"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FileEditToolUpdatedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FileEditToolUpdatedMessage.tsx",
          "relativePath": "components\\FileEditToolUpdatedMessage.tsx"
        },
        {
          "importPath": "../../components/StructuredDiff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\StructuredDiff.tsx",
          "relativePath": "components\\StructuredDiff.tsx"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/array",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\array.ts",
          "relativePath": "utils\\array.ts"
        },
        {
          "importPath": "../../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../services/systemReminder",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
          "relativePath": "services\\systemReminder.ts"
        },
        {
          "importPath": "../../services/fileFreshness",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\fileFreshness.ts",
          "relativePath": "services\\fileFreshness.ts"
        },
        {
          "importPath": "../NotebookEditTool/NotebookEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\NotebookEditTool.tsx",
          "relativePath": "tools\\NotebookEditTool\\NotebookEditTool.tsx"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\prompt.ts",
          "relativePath": "tools\\FileEditTool\\prompt.ts"
        },
        {
          "importPath": "./utils",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\utils.ts",
          "relativePath": "tools\\FileEditTool\\utils.ts"
        },
        {
          "importPath": "../../utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        },
        {
          "importPath": "../../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 21,
      "dependentCount": 7,
      "importanceScore": 28
    },
    {
      "path": "tools\\FileEditTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\prompt.ts",
      "imports": [
        "tools\\NotebookEditTool\\NotebookEditTool.tsx"
      ],
      "importedBy": [
        "tools\\FileEditTool\\FileEditTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../NotebookEditTool/NotebookEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\NotebookEditTool.tsx",
          "relativePath": "tools\\NotebookEditTool\\NotebookEditTool.tsx"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\FileEditTool\\utils.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\utils.ts",
      "imports": [
        "path",
        "utils\\state.ts",
        "fs",
        "utils\\file.ts",
        "diff",
        "utils\\diff.ts"
      ],
      "importedBy": [
        "tools\\FileEditTool\\FileEditTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "../../utils/file",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\file.ts",
          "relativePath": "utils\\file.ts"
        },
        {
          "importPath": "diff",
          "resolvedPath": null,
          "relativePath": "diff"
        },
        {
          "importPath": "../../utils/diff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\diff.ts",
          "relativePath": "utils\\diff.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\FileReadTool\\FileReadTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileReadTool\\FileReadTool.tsx",
      "imports": [
        "node:fs",
        "ink",
        "node:path",
        "node:path",
        "react",
        "zod",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "components\\HighlightedCode.tsx",
        "Tool.ts",
        "utils\\state.ts",
        "utils\\log.ts",
        "utils\\theme.ts",
        "services\\systemReminder.ts",
        "tools\\FileReadTool\\prompt.ts",
        "utils\\permissions\\filesystem.ts",
        "utils\\secureFile.ts"
      ],
      "importedBy": [
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "entrypoints\\mcp.ts",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools\\BashTool\\prompt.ts",
        "tools\\TaskTool\\prompt.ts",
        "tools.ts"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "node:fs",
          "resolvedPath": null,
          "relativePath": "node:fs"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "node:path",
          "resolvedPath": null,
          "relativePath": "node:path"
        },
        {
          "importPath": "node:path",
          "resolvedPath": null,
          "relativePath": "node:path"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../components/HighlightedCode",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\HighlightedCode.tsx",
          "relativePath": "components\\HighlightedCode.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../services/systemReminder",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
          "relativePath": "services\\systemReminder.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileReadTool\\prompt.ts",
          "relativePath": "tools\\FileReadTool\\prompt.ts"
        },
        {
          "importPath": "../../utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        },
        {
          "importPath": "../../utils/secureFile",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\secureFile.ts",
          "relativePath": "utils\\secureFile.ts"
        }
      ],
      "dependencyCount": 16,
      "dependentCount": 7,
      "importanceScore": 28
    },
    {
      "path": "tools\\FileReadTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileReadTool\\prompt.ts",
      "imports": [
        "tools\\NotebookReadTool\\NotebookReadTool.tsx"
      ],
      "importedBy": [
        "tools\\FileReadTool\\FileReadTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../NotebookReadTool/NotebookReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookReadTool\\NotebookReadTool.tsx",
          "relativePath": "tools\\NotebookReadTool\\NotebookReadTool.tsx"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\FileWriteTool\\FileWriteTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileWriteTool\\FileWriteTool.tsx",
      "imports": [
        "diff",
        "fs",
        "ink",
        "os",
        "path",
        "react",
        "zod",
        "components\\FileEditToolUpdatedMessage.tsx",
        "components\\HighlightedCode.tsx",
        "components\\StructuredDiff.tsx",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "Tool.ts",
        "utils\\array.ts",
        "utils\\log.ts",
        "utils\\state.ts",
        "utils\\theme.ts",
        "tools\\FileWriteTool\\prompt.ts",
        "utils\\permissions\\filesystem.ts",
        "utils\\diff.ts",
        "constants\\product.ts",
        "services\\systemReminder.ts",
        "services\\fileFreshness.ts"
      ],
      "importedBy": [
        "components\\binary-feedback\\BinaryFeedbackOption.tsx",
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "entrypoints\\mcp.ts",
        "permissions.ts",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools\\TaskTool\\prompt.ts",
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "diff",
          "resolvedPath": null,
          "relativePath": "diff"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FileEditToolUpdatedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FileEditToolUpdatedMessage.tsx",
          "relativePath": "components\\FileEditToolUpdatedMessage.tsx"
        },
        {
          "importPath": "../../components/HighlightedCode",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\HighlightedCode.tsx",
          "relativePath": "components\\HighlightedCode.tsx"
        },
        {
          "importPath": "../../components/StructuredDiff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\StructuredDiff.tsx",
          "relativePath": "components\\StructuredDiff.tsx"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/array",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\array.ts",
          "relativePath": "utils\\array.ts"
        },
        {
          "importPath": "../../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileWriteTool\\prompt.ts",
          "relativePath": "tools\\FileWriteTool\\prompt.ts"
        },
        {
          "importPath": "../../utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        },
        {
          "importPath": "../../utils/diff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\diff.ts",
          "relativePath": "utils\\diff.ts"
        },
        {
          "importPath": "../../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "../../services/systemReminder",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
          "relativePath": "services\\systemReminder.ts"
        },
        {
          "importPath": "../../services/fileFreshness",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\fileFreshness.ts",
          "relativePath": "services\\fileFreshness.ts"
        }
      ],
      "dependencyCount": 22,
      "dependentCount": 8,
      "importanceScore": 31
    },
    {
      "path": "tools\\FileWriteTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileWriteTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\FileWriteTool\\FileWriteTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\GlobTool\\GlobTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GlobTool\\GlobTool.tsx",
      "imports": [
        "ink",
        "react",
        "zod",
        "components\\Cost.tsx",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "Tool.ts",
        "utils\\state.ts",
        "utils\\file.ts",
        "tools\\GlobTool\\prompt.ts",
        "path",
        "utils\\permissions\\filesystem.ts"
      ],
      "importedBy": [
        "components\\messages\\UserToolResultMessage\\utils.tsx",
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "entrypoints\\mcp.ts",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools\\TaskTool\\prompt.ts",
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/Cost",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Cost.tsx",
          "relativePath": "components\\Cost.tsx"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../../utils/file",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\file.ts",
          "relativePath": "utils\\file.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GlobTool\\prompt.ts",
          "relativePath": "tools\\GlobTool\\prompt.ts"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../../utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        }
      ],
      "dependencyCount": 11,
      "dependentCount": 7,
      "importanceScore": 28
    },
    {
      "path": "tools\\GlobTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GlobTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\BashTool\\prompt.ts",
        "tools\\GlobTool\\GlobTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "tools\\GrepTool\\GrepTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GrepTool\\GrepTool.tsx",
      "imports": [
        "fs/promises",
        "ink",
        "react",
        "zod",
        "components\\Cost.tsx",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "Tool.ts",
        "utils\\state.ts",
        "utils\\ripgrep.ts",
        "tools\\GrepTool\\prompt.ts",
        "utils\\permissions\\filesystem.ts"
      ],
      "importedBy": [
        "components\\messages\\UserToolResultMessage\\utils.tsx",
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "entrypoints\\mcp.ts",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs/promises",
          "resolvedPath": null,
          "relativePath": "fs/promises"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/Cost",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Cost.tsx",
          "relativePath": "components\\Cost.tsx"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../../utils/ripgrep",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\ripgrep.ts",
          "relativePath": "utils\\ripgrep.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GrepTool\\prompt.ts",
          "relativePath": "tools\\GrepTool\\prompt.ts"
        },
        {
          "importPath": "../../utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        }
      ],
      "dependencyCount": 11,
      "dependentCount": 6,
      "importanceScore": 25
    },
    {
      "path": "tools\\GrepTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GrepTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\BashTool\\prompt.ts",
        "tools\\GrepTool\\GrepTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "tools\\lsTool\\lsTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\lsTool\\lsTool.tsx",
      "imports": [
        "fs",
        "ink",
        "path",
        "react",
        "zod",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "Tool.ts",
        "utils\\log.ts",
        "utils\\state.ts",
        "utils\\theme.ts",
        "tools\\lsTool\\prompt.ts",
        "utils\\permissions\\filesystem.ts"
      ],
      "importedBy": [
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "context.ts",
        "entrypoints\\mcp.ts",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools\\BashTool\\prompt.ts",
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\lsTool\\prompt.ts",
          "relativePath": "tools\\lsTool\\prompt.ts"
        },
        {
          "importPath": "../../utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        }
      ],
      "dependencyCount": 12,
      "dependentCount": 7,
      "importanceScore": 28
    },
    {
      "path": "tools\\lsTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\lsTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\lsTool\\lsTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\MCPTool\\MCPTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MCPTool\\MCPTool.tsx",
      "imports": [
        "ink",
        "react",
        "zod",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "Tool.ts",
        "utils\\theme.ts",
        "tools\\MCPTool\\prompt.ts",
        "tools\\BashTool\\OutputLine.tsx"
      ],
      "importedBy": [
        "services\\mcpClient.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MCPTool\\prompt.ts",
          "relativePath": "tools\\MCPTool\\prompt.ts"
        },
        {
          "importPath": "../BashTool/OutputLine",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\OutputLine.tsx",
          "relativePath": "tools\\BashTool\\OutputLine.tsx"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\MCPTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MCPTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\MCPTool\\MCPTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\MemoryReadTool\\MemoryReadTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MemoryReadTool\\MemoryReadTool.tsx",
      "imports": [
        "fs",
        "ink",
        "path",
        "react",
        "zod",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "Tool.ts",
        "utils\\env.ts",
        "utils\\agentStorage.ts",
        "tools\\MemoryReadTool\\prompt.ts"
      ],
      "importedBy": [
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "../../utils/agentStorage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentStorage.ts",
          "relativePath": "utils\\agentStorage.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MemoryReadTool\\prompt.ts",
          "relativePath": "tools\\MemoryReadTool\\prompt.ts"
        }
      ],
      "dependencyCount": 10,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\MemoryReadTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MemoryReadTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\MemoryReadTool\\MemoryReadTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\MemoryWriteTool\\MemoryWriteTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MemoryWriteTool\\MemoryWriteTool.tsx",
      "imports": [
        "fs",
        "ink",
        "path",
        "react",
        "zod",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "Tool.ts",
        "utils\\env.ts",
        "utils\\agentStorage.ts",
        "services\\fileFreshness.ts",
        "tools\\MemoryWriteTool\\prompt.ts"
      ],
      "importedBy": [
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "../../utils/agentStorage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentStorage.ts",
          "relativePath": "utils\\agentStorage.ts"
        },
        {
          "importPath": "../../services/fileFreshness",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\fileFreshness.ts",
          "relativePath": "services\\fileFreshness.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MemoryWriteTool\\prompt.ts",
          "relativePath": "tools\\MemoryWriteTool\\prompt.ts"
        }
      ],
      "dependencyCount": 11,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\MemoryWriteTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MemoryWriteTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\MemoryWriteTool\\MemoryWriteTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\MultiEditTool\\MultiEditTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MultiEditTool\\MultiEditTool.tsx",
      "imports": [
        "fs",
        "ink",
        "path",
        "react",
        "zod",
        "components\\FileEditToolUpdatedMessage.tsx",
        "components\\StructuredDiff.tsx",
        "Tool.ts",
        "utils\\array.ts",
        "utils\\log.ts",
        "utils\\state.ts",
        "utils\\theme.ts",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "utils\\permissions\\filesystem.ts",
        "constants\\product.ts",
        "tools\\MultiEditTool\\prompt.ts",
        "services\\systemReminder.ts",
        "services\\fileFreshness.ts",
        "utils\\diff.ts"
      ],
      "importedBy": [
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FileEditToolUpdatedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FileEditToolUpdatedMessage.tsx",
          "relativePath": "components\\FileEditToolUpdatedMessage.tsx"
        },
        {
          "importPath": "../../components/StructuredDiff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\StructuredDiff.tsx",
          "relativePath": "components\\StructuredDiff.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/array",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\array.ts",
          "relativePath": "utils\\array.ts"
        },
        {
          "importPath": "../../utils/log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../NotebookEditTool/NotebookEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\NotebookEditTool.tsx",
          "relativePath": "tools\\NotebookEditTool\\NotebookEditTool.tsx"
        },
        {
          "importPath": "../../utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        },
        {
          "importPath": "../../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MultiEditTool\\prompt.ts",
          "relativePath": "tools\\MultiEditTool\\prompt.ts"
        },
        {
          "importPath": "../../services/systemReminder",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
          "relativePath": "services\\systemReminder.ts"
        },
        {
          "importPath": "../../services/fileFreshness",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\fileFreshness.ts",
          "relativePath": "services\\fileFreshness.ts"
        },
        {
          "importPath": "../../utils/diff",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\diff.ts",
          "relativePath": "utils\\diff.ts"
        }
      ],
      "dependencyCount": 19,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\MultiEditTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MultiEditTool\\prompt.ts",
      "imports": [
        "tools\\NotebookEditTool\\NotebookEditTool.tsx"
      ],
      "importedBy": [
        "tools\\MultiEditTool\\MultiEditTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../NotebookEditTool/NotebookEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\NotebookEditTool.tsx",
          "relativePath": "tools\\NotebookEditTool\\NotebookEditTool.tsx"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\NotebookEditTool\\NotebookEditTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\NotebookEditTool.tsx",
      "imports": [
        "fs",
        "ink",
        "path",
        "react",
        "zod",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "components\\HighlightedCode.tsx",
        "Tool.ts",
        "types\\notebook.ts",
        "utils\\json.ts",
        "utils\\state.ts",
        "tools\\NotebookEditTool\\prompt.ts",
        "utils\\permissions\\filesystem.ts",
        "services\\systemReminder.ts",
        "services\\fileFreshness.ts"
      ],
      "importedBy": [
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "permissions.ts",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileEditTool\\prompt.ts",
        "tools\\MultiEditTool\\MultiEditTool.tsx",
        "tools\\MultiEditTool\\prompt.ts",
        "tools\\TaskTool\\prompt.ts",
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../components/HighlightedCode",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\HighlightedCode.tsx",
          "relativePath": "components\\HighlightedCode.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../types/notebook",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\notebook.ts",
          "relativePath": "types\\notebook.ts"
        },
        {
          "importPath": "../../utils/json",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\json.ts",
          "relativePath": "utils\\json.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\prompt.ts",
          "relativePath": "tools\\NotebookEditTool\\prompt.ts"
        },
        {
          "importPath": "../../utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        },
        {
          "importPath": "../../services/systemReminder",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
          "relativePath": "services\\systemReminder.ts"
        },
        {
          "importPath": "../../services/fileFreshness",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\fileFreshness.ts",
          "relativePath": "services\\fileFreshness.ts"
        }
      ],
      "dependencyCount": 15,
      "dependentCount": 9,
      "importanceScore": 34
    },
    {
      "path": "tools\\NotebookEditTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\NotebookEditTool\\NotebookEditTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\NotebookReadTool\\NotebookReadTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookReadTool\\NotebookReadTool.tsx",
      "imports": [
        "fs",
        "ink",
        "path",
        "react",
        "zod",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "Tool.ts",
        "tools\\BashTool\\utils.ts",
        "utils\\state.ts",
        "utils\\file.ts",
        "tools\\NotebookReadTool\\prompt.ts",
        "utils\\permissions\\filesystem.ts"
      ],
      "importedBy": [
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\PermissionRequest.tsx",
        "tools\\FileReadTool\\prompt.ts",
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../BashTool/utils",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\utils.ts",
          "relativePath": "tools\\BashTool\\utils.ts"
        },
        {
          "importPath": "../../utils/state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../../utils/file",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\file.ts",
          "relativePath": "utils\\file.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookReadTool\\prompt.ts",
          "relativePath": "tools\\NotebookReadTool\\prompt.ts"
        },
        {
          "importPath": "../../utils/permissions/filesystem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
          "relativePath": "utils\\permissions\\filesystem.ts"
        }
      ],
      "dependencyCount": 12,
      "dependentCount": 4,
      "importanceScore": 19
    },
    {
      "path": "tools\\NotebookReadTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookReadTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\NotebookReadTool\\NotebookReadTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\StickerRequestTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\StickerRequestTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\StickerRequestTool\\StickerRequestTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\StickerRequestTool\\StickerRequestTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\StickerRequestTool\\StickerRequestTool.tsx",
      "imports": [
        "zod",
        "react",
        "ink",
        "Tool.ts",
        "tools\\StickerRequestTool\\prompt.ts",
        "utils\\theme.ts"
      ],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\StickerRequestTool\\prompt.ts",
          "relativePath": "tools\\StickerRequestTool\\prompt.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 0,
      "importanceScore": 7
    },
    {
      "path": "tools\\TaskTool\\constants.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TaskTool\\constants.ts",
      "imports": [],
      "importedBy": [
        "tools\\BashTool\\prompt.ts",
        "tools\\TaskTool\\TaskTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 2,
      "importanceScore": 13
    },
    {
      "path": "tools\\TaskTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TaskTool\\prompt.ts",
      "imports": [
        "Tool.ts",
        "tools",
        "tools\\TaskTool\\TaskTool.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "utils\\model.ts",
        "utils\\agentLoader.ts"
      ],
      "importedBy": [
        "tools\\TaskTool\\TaskTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../tools",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools",
          "relativePath": "tools"
        },
        {
          "importPath": "./TaskTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TaskTool\\TaskTool.tsx",
          "relativePath": "tools\\TaskTool\\TaskTool.tsx"
        },
        {
          "importPath": "../BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        },
        {
          "importPath": "../FileWriteTool/FileWriteTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileWriteTool\\FileWriteTool.tsx",
          "relativePath": "tools\\FileWriteTool\\FileWriteTool.tsx"
        },
        {
          "importPath": "../FileEditTool/FileEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\FileEditTool.tsx",
          "relativePath": "tools\\FileEditTool\\FileEditTool.tsx"
        },
        {
          "importPath": "../NotebookEditTool/NotebookEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\NotebookEditTool.tsx",
          "relativePath": "tools\\NotebookEditTool\\NotebookEditTool.tsx"
        },
        {
          "importPath": "../GlobTool/GlobTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GlobTool\\GlobTool.tsx",
          "relativePath": "tools\\GlobTool\\GlobTool.tsx"
        },
        {
          "importPath": "../FileReadTool/FileReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileReadTool\\FileReadTool.tsx",
          "relativePath": "tools\\FileReadTool\\FileReadTool.tsx"
        },
        {
          "importPath": "../../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../../utils/agentLoader",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentLoader.ts",
          "relativePath": "utils\\agentLoader.ts"
        }
      ],
      "dependencyCount": 11,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\TaskTool\\TaskTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TaskTool\\TaskTool.tsx",
      "imports": [
        "chalk",
        "lodash-es",
        "os",
        "react",
        "ink",
        "zod",
        "Tool.ts",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "constants\\prompts.ts",
        "context",
        "permissions.ts",
        "query.ts",
        "utils\\format.tsx",
        "utils\\markdown.ts",
        "utils\\model.ts",
        "utils\\thinking.ts",
        "utils\\theme.ts",
        "utils\\agentStorage.ts",
        "utils\\debugLogger.ts",
        "tools\\TaskTool\\prompt.ts",
        "tools\\TaskTool\\constants.ts",
        "utils\\agentLoader.ts"
      ],
      "importedBy": [
        "entrypoints\\mcp.ts",
        "tools\\TaskTool\\prompt.ts",
        "tools.ts"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../constants/prompts",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\prompts.ts",
          "relativePath": "constants\\prompts.ts"
        },
        {
          "importPath": "../../context",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context",
          "relativePath": "context"
        },
        {
          "importPath": "../../permissions",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\permissions.ts",
          "relativePath": "permissions.ts"
        },
        {
          "importPath": "../../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../../utils/format",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\format.tsx",
          "relativePath": "utils\\format.tsx"
        },
        {
          "importPath": "../../utils/markdown",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\markdown.ts",
          "relativePath": "utils\\markdown.ts"
        },
        {
          "importPath": "../../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "../../utils/thinking",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\thinking.ts",
          "relativePath": "utils\\thinking.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../utils/agentStorage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentStorage.ts",
          "relativePath": "utils\\agentStorage.ts"
        },
        {
          "importPath": "../../utils/debugLogger",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\debugLogger.ts",
          "relativePath": "utils\\debugLogger.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TaskTool\\prompt.ts",
          "relativePath": "tools\\TaskTool\\prompt.ts"
        },
        {
          "importPath": "./constants",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TaskTool\\constants.ts",
          "relativePath": "tools\\TaskTool\\constants.ts"
        },
        {
          "importPath": "../../utils/agentLoader",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentLoader.ts",
          "relativePath": "utils\\agentLoader.ts"
        }
      ],
      "dependencyCount": 22,
      "dependentCount": 3,
      "importanceScore": 16
    },
    {
      "path": "tools\\ThinkTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\ThinkTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\ThinkTool\\ThinkTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\ThinkTool\\ThinkTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\ThinkTool\\ThinkTool.tsx",
      "imports": [
        "zod",
        "react",
        "ink",
        "Tool.ts",
        "tools\\ThinkTool\\prompt.ts",
        "utils\\theme.ts",
        "components\\MessageResponse.tsx",
        "utils\\model.ts"
      ],
      "importedBy": [
        "components\\messages\\AssistantToolUseMessage.tsx",
        "tools.ts",
        "utils\\thinking.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\ThinkTool\\prompt.ts",
          "relativePath": "tools\\ThinkTool\\prompt.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "../../components/MessageResponse",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\MessageResponse.tsx",
          "relativePath": "components\\MessageResponse.tsx"
        },
        {
          "importPath": "../../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 3,
      "importanceScore": 16
    },
    {
      "path": "tools\\TodoWriteTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TodoWriteTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\TodoWriteTool\\TodoWriteTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\TodoWriteTool\\TodoWriteTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TodoWriteTool\\TodoWriteTool.tsx",
      "imports": [
        "ink",
        "react",
        "zod",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "components\\TodoItem.tsx",
        "Tool.ts",
        "utils\\todoStorage.ts",
        "services\\systemReminder.ts",
        "services\\fileFreshness.ts",
        "tools\\TodoWriteTool\\prompt.ts",
        "utils\\theme.ts"
      ],
      "importedBy": [
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../components/TodoItem",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\TodoItem.tsx",
          "relativePath": "components\\TodoItem.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../../utils/todoStorage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\todoStorage.ts",
          "relativePath": "utils\\todoStorage.ts"
        },
        {
          "importPath": "../../services/systemReminder",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\systemReminder.ts",
          "relativePath": "services\\systemReminder.ts"
        },
        {
          "importPath": "../../services/fileFreshness",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\fileFreshness.ts",
          "relativePath": "services\\fileFreshness.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TodoWriteTool\\prompt.ts",
          "relativePath": "tools\\TodoWriteTool\\prompt.ts"
        },
        {
          "importPath": "../../utils/theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        }
      ],
      "dependencyCount": 11,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\URLFetcherTool\\cache.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\URLFetcherTool\\cache.ts",
      "imports": [],
      "importedBy": [
        "tools\\URLFetcherTool\\URLFetcherTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\URLFetcherTool\\htmlToMarkdown.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\URLFetcherTool\\htmlToMarkdown.ts",
      "imports": [
        "turndown"
      ],
      "importedBy": [
        "tools\\URLFetcherTool\\URLFetcherTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "turndown",
          "resolvedPath": null,
          "relativePath": "turndown"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\URLFetcherTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\URLFetcherTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\URLFetcherTool\\URLFetcherTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\URLFetcherTool\\URLFetcherTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\URLFetcherTool\\URLFetcherTool.tsx",
      "imports": [
        "ink",
        "react",
        "zod",
        "node-fetch",
        "components\\Cost.tsx",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "Tool.ts",
        "tools\\URLFetcherTool\\prompt.ts",
        "tools\\URLFetcherTool\\htmlToMarkdown.ts",
        "tools\\URLFetcherTool\\cache.ts",
        "services\\claude.ts"
      ],
      "importedBy": [
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "node-fetch",
          "resolvedPath": null,
          "relativePath": "node-fetch"
        },
        {
          "importPath": "../../components/Cost",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Cost.tsx",
          "relativePath": "components\\Cost.tsx"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\URLFetcherTool\\prompt.ts",
          "relativePath": "tools\\URLFetcherTool\\prompt.ts"
        },
        {
          "importPath": "./htmlToMarkdown",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\URLFetcherTool\\htmlToMarkdown.ts",
          "relativePath": "tools\\URLFetcherTool\\htmlToMarkdown.ts"
        },
        {
          "importPath": "./cache",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\URLFetcherTool\\cache.ts",
          "relativePath": "tools\\URLFetcherTool\\cache.ts"
        },
        {
          "importPath": "../../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        }
      ],
      "dependencyCount": 11,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\WebSearchTool\\prompt.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\WebSearchTool\\prompt.ts",
      "imports": [],
      "importedBy": [
        "tools\\WebSearchTool\\WebSearchTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\WebSearchTool\\searchProviders.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\WebSearchTool\\searchProviders.ts",
      "imports": [
        "node-fetch",
        "node-html-parser"
      ],
      "importedBy": [
        "tools\\WebSearchTool\\WebSearchTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "node-fetch",
          "resolvedPath": null,
          "relativePath": "node-fetch"
        },
        {
          "importPath": "node-html-parser",
          "resolvedPath": null,
          "relativePath": "node-html-parser"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools\\WebSearchTool\\WebSearchTool.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\WebSearchTool\\WebSearchTool.tsx",
      "imports": [
        "ink",
        "react",
        "zod",
        "components\\Cost.tsx",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "Tool.ts",
        "tools\\WebSearchTool\\prompt.ts",
        "tools\\WebSearchTool\\searchProviders.ts"
      ],
      "importedBy": [
        "tools.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "zod",
          "resolvedPath": null,
          "relativePath": "zod"
        },
        {
          "importPath": "../../components/Cost",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Cost.tsx",
          "relativePath": "components\\Cost.tsx"
        },
        {
          "importPath": "../../components/FallbackToolUseRejectedMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\FallbackToolUseRejectedMessage.tsx",
          "relativePath": "components\\FallbackToolUseRejectedMessage.tsx"
        },
        {
          "importPath": "../../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "./prompt",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\WebSearchTool\\prompt.ts",
          "relativePath": "tools\\WebSearchTool\\prompt.ts"
        },
        {
          "importPath": "./searchProviders",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\WebSearchTool\\searchProviders.ts",
          "relativePath": "tools\\WebSearchTool\\searchProviders.ts"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 1,
      "importanceScore": 10
    },
    {
      "path": "tools.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools.ts",
      "imports": [
        "Tool.ts",
        "tools\\TaskTool\\TaskTool.tsx",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\GrepTool\\GrepTool.tsx",
        "tools\\lsTool\\lsTool.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "tools\\NotebookReadTool\\NotebookReadTool.tsx",
        "tools\\MemoryReadTool\\MemoryReadTool.tsx",
        "tools\\MemoryWriteTool\\MemoryWriteTool.tsx",
        "tools\\ThinkTool\\ThinkTool.tsx",
        "tools\\TodoWriteTool\\TodoWriteTool.tsx",
        "tools\\WebSearchTool\\WebSearchTool.tsx",
        "tools\\URLFetcherTool\\URLFetcherTool.tsx",
        "services\\mcpClient.ts",
        "lodash-es"
      ],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "./tools/TaskTool/TaskTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TaskTool\\TaskTool.tsx",
          "relativePath": "tools\\TaskTool\\TaskTool.tsx"
        },
        {
          "importPath": "./tools/ArchitectTool/ArchitectTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\ArchitectTool\\ArchitectTool.tsx",
          "relativePath": "tools\\ArchitectTool\\ArchitectTool.tsx"
        },
        {
          "importPath": "./tools/BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        },
        {
          "importPath": "./tools/AskExpertModelTool/AskExpertModelTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
          "relativePath": "tools\\AskExpertModelTool\\AskExpertModelTool.tsx"
        },
        {
          "importPath": "./tools/FileEditTool/FileEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileEditTool\\FileEditTool.tsx",
          "relativePath": "tools\\FileEditTool\\FileEditTool.tsx"
        },
        {
          "importPath": "./tools/FileReadTool/FileReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileReadTool\\FileReadTool.tsx",
          "relativePath": "tools\\FileReadTool\\FileReadTool.tsx"
        },
        {
          "importPath": "./tools/FileWriteTool/FileWriteTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\FileWriteTool\\FileWriteTool.tsx",
          "relativePath": "tools\\FileWriteTool\\FileWriteTool.tsx"
        },
        {
          "importPath": "./tools/MultiEditTool/MultiEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MultiEditTool\\MultiEditTool.tsx",
          "relativePath": "tools\\MultiEditTool\\MultiEditTool.tsx"
        },
        {
          "importPath": "./tools/GlobTool/GlobTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GlobTool\\GlobTool.tsx",
          "relativePath": "tools\\GlobTool\\GlobTool.tsx"
        },
        {
          "importPath": "./tools/GrepTool/GrepTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\GrepTool\\GrepTool.tsx",
          "relativePath": "tools\\GrepTool\\GrepTool.tsx"
        },
        {
          "importPath": "./tools/lsTool/lsTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\lsTool\\lsTool.tsx",
          "relativePath": "tools\\lsTool\\lsTool.tsx"
        },
        {
          "importPath": "./tools/NotebookEditTool/NotebookEditTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookEditTool\\NotebookEditTool.tsx",
          "relativePath": "tools\\NotebookEditTool\\NotebookEditTool.tsx"
        },
        {
          "importPath": "./tools/NotebookReadTool/NotebookReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\NotebookReadTool\\NotebookReadTool.tsx",
          "relativePath": "tools\\NotebookReadTool\\NotebookReadTool.tsx"
        },
        {
          "importPath": "./tools/MemoryReadTool/MemoryReadTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MemoryReadTool\\MemoryReadTool.tsx",
          "relativePath": "tools\\MemoryReadTool\\MemoryReadTool.tsx"
        },
        {
          "importPath": "./tools/MemoryWriteTool/MemoryWriteTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\MemoryWriteTool\\MemoryWriteTool.tsx",
          "relativePath": "tools\\MemoryWriteTool\\MemoryWriteTool.tsx"
        },
        {
          "importPath": "./tools/ThinkTool/ThinkTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\ThinkTool\\ThinkTool.tsx",
          "relativePath": "tools\\ThinkTool\\ThinkTool.tsx"
        },
        {
          "importPath": "./tools/TodoWriteTool/TodoWriteTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\TodoWriteTool\\TodoWriteTool.tsx",
          "relativePath": "tools\\TodoWriteTool\\TodoWriteTool.tsx"
        },
        {
          "importPath": "./tools/WebSearchTool/WebSearchTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\WebSearchTool\\WebSearchTool.tsx",
          "relativePath": "tools\\WebSearchTool\\WebSearchTool.tsx"
        },
        {
          "importPath": "./tools/URLFetcherTool/URLFetcherTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\URLFetcherTool\\URLFetcherTool.tsx",
          "relativePath": "tools\\URLFetcherTool\\URLFetcherTool.tsx"
        },
        {
          "importPath": "./services/mcpClient",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\mcpClient.ts",
          "relativePath": "services\\mcpClient.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        }
      ],
      "dependencyCount": 22,
      "dependentCount": 0,
      "importanceScore": 9
    },
    {
      "path": "types\\conversation.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\conversation.ts",
      "imports": [
        "crypto"
      ],
      "importedBy": [
        "utils\\debugLogger.ts"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs",
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "types\\logs.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\logs.ts",
      "imports": [
        "crypto"
      ],
      "importedBy": [
        "components\\LogSelector.tsx",
        "screens\\LogList.tsx",
        "screens\\ResumeConversation.tsx",
        "utils\\log.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 4,
      "importanceScore": 20
    },
    {
      "path": "types\\modelCapabilities.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\modelCapabilities.ts",
      "imports": [],
      "importedBy": [
        "constants\\modelCapabilities.ts",
        "services\\adapters\\base.ts",
        "services\\adapters\\chatCompletions.ts",
        "services\\adapters\\responsesAPI.ts",
        "services\\claude.ts",
        "services\\modelAdapterFactory.ts"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 6,
      "importanceScore": 26
    },
    {
      "path": "types\\notebook.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\notebook.ts",
      "imports": [],
      "importedBy": [
        "tools\\NotebookEditTool\\NotebookEditTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "types\\PermissionMode.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\PermissionMode.ts",
      "imports": [],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "types\\RequestContext.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\RequestContext.ts",
      "imports": [],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "utils\\advancedFuzzyMatcher.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\advancedFuzzyMatcher.ts",
      "imports": [],
      "importedBy": [
        "utils\\fuzzyMatcher.ts"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "utils\\agentLoader.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentLoader.ts",
      "imports": [
        "fs",
        "path",
        "os",
        "gray-matter",
        "utils\\state.ts",
        "lodash-es"
      ],
      "importedBy": [
        "commands\\agents.tsx",
        "commands\\agents.tsx",
        "components\\messages\\TaskToolMessage.tsx",
        "hooks\\useUnifiedCompletion.ts",
        "services\\mentionProcessor.ts",
        "tools\\TaskTool\\prompt.ts",
        "tools\\TaskTool\\TaskTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "gray-matter",
          "resolvedPath": null,
          "relativePath": "gray-matter"
        },
        {
          "importPath": "./state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 7,
      "importanceScore": 29
    },
    {
      "path": "utils\\agentStorage.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentStorage.ts",
      "imports": [
        "fs",
        "path",
        "os",
        "crypto"
      ],
      "importedBy": [
        "services\\fileFreshness.ts",
        "tools\\MemoryReadTool\\MemoryReadTool.tsx",
        "tools\\MemoryWriteTool\\MemoryWriteTool.tsx",
        "tools\\TaskTool\\TaskTool.tsx",
        "utils\\todoStorage.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 5,
      "importanceScore": 23
    },
    {
      "path": "utils\\array.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\array.ts",
      "imports": [],
      "importedBy": [
        "components\\FileEditToolUpdatedMessage.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 6,
      "importanceScore": 26
    },
    {
      "path": "utils\\ask.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\ask.tsx",
      "imports": [
        "lodash-es",
        "commands",
        "constants\\prompts.ts",
        "context",
        "cost-tracker.ts",
        "query.ts",
        "hooks\\useCanUseTool.ts",
        "Tool.ts",
        "utils\\model.ts",
        "utils\\state.ts",
        "utils\\log.ts",
        "utils\\messages.tsx"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "../constants/prompts",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\prompts.ts",
          "relativePath": "constants\\prompts.ts"
        },
        {
          "importPath": "../context",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context",
          "relativePath": "context"
        },
        {
          "importPath": "../cost-tracker",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\cost-tracker.ts",
          "relativePath": "cost-tracker.ts"
        },
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "../hooks/useCanUseTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\hooks\\useCanUseTool.ts",
          "relativePath": "hooks\\useCanUseTool.ts"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../utils/model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "./state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "./messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        }
      ],
      "dependencyCount": 12,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "utils\\auth.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\auth.ts",
      "imports": [
        "utils\\model.ts",
        "utils\\config.ts"
      ],
      "importedBy": [
        "commands\\login.tsx",
        "commands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        },
        {
          "importPath": "./config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "utils\\autoCompactCore.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\autoCompactCore.ts",
      "imports": [
        "query.ts",
        "utils\\tokens.ts",
        "messages.ts",
        "context",
        "utils\\style.ts",
        "utils\\terminal.ts",
        "services\\fileFreshness.ts",
        "utils\\messages.tsx",
        "services\\claude.ts",
        "utils\\fileRecoveryCore.ts",
        "utils\\file.ts",
        "utils\\model.ts"
      ],
      "importedBy": [
        "query.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "./tokens",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\tokens.ts",
          "relativePath": "utils\\tokens.ts"
        },
        {
          "importPath": "../messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\messages.ts",
          "relativePath": "messages.ts"
        },
        {
          "importPath": "../context",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\context",
          "relativePath": "context"
        },
        {
          "importPath": "../utils/style",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\style.ts",
          "relativePath": "utils\\style.ts"
        },
        {
          "importPath": "../utils/terminal",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
          "relativePath": "utils\\terminal.ts"
        },
        {
          "importPath": "../services/fileFreshness",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\fileFreshness.ts",
          "relativePath": "services\\fileFreshness.ts"
        },
        {
          "importPath": "../utils/messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        },
        {
          "importPath": "./fileRecoveryCore",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\fileRecoveryCore.ts",
          "relativePath": "utils\\fileRecoveryCore.ts"
        },
        {
          "importPath": "./file",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\file.ts",
          "relativePath": "utils\\file.ts"
        },
        {
          "importPath": "./model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        }
      ],
      "dependencyCount": 12,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "utils\\autoUpdater.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\autoUpdater.ts",
      "imports": [
        "utils\\execFileNoThrow.ts",
        "utils\\log.ts",
        "semver",
        "constants\\macros.ts",
        "constants\\product.ts",
        "utils\\config.ts",
        "utils\\env.ts"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./execFileNoThrow",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\execFileNoThrow.ts",
          "relativePath": "utils\\execFileNoThrow.ts"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "semver",
          "resolvedPath": null,
          "relativePath": "semver"
        },
        {
          "importPath": "../constants/macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "./config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "./env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        }
      ],
      "dependencyCount": 7,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "utils\\browser.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\browser.ts",
      "imports": [
        "utils\\execFileNoThrow.ts"
      ],
      "importedBy": [
        "components\\Bug.tsx",
        "services\\oauth.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./execFileNoThrow",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\execFileNoThrow.ts",
          "relativePath": "utils\\execFileNoThrow.ts"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "utils\\cleanup.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\cleanup.ts",
      "imports": [
        "fs",
        "path",
        "utils\\log.ts",
        "utils\\log.ts"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "utils\\commands.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\commands.ts",
      "imports": [
        "lodash-es",
        "services\\claude.ts",
        "shell-quote",
        "constants\\product.ts"
      ],
      "importedBy": [
        "components\\permissions\\PermissionRequest.tsx",
        "components\\permissions\\toolUseOptions.ts",
        "hooks\\useCanUseTool.ts",
        "permissions.ts",
        "tools\\BashTool\\BashTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        },
        {
          "importPath": "shell-quote",
          "resolvedPath": null,
          "relativePath": "shell-quote"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 5,
      "importanceScore": 23
    },
    {
      "path": "utils\\commonUnixCommands.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\commonUnixCommands.ts",
      "imports": [],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "utils\\config.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
      "imports": [
        "fs",
        "path",
        "lodash-es",
        "os",
        "utils\\env.ts",
        "utils\\state.ts",
        "crypto",
        "utils\\json.ts",
        "utils\\errors.ts",
        "utils\\theme.ts",
        "utils\\debugLogger.ts",
        "utils\\sessionState.ts"
      ],
      "importedBy": [
        "commands\\logout.tsx",
        "commands\\model.tsx",
        "commands\\onboarding.tsx",
        "commands\\terminalSetup.ts",
        "components\\ApproveApiKey.tsx",
        "components\\Bug.tsx",
        "components\\Logo.tsx",
        "components\\ModelStatusDisplay.tsx",
        "components\\PromptInput.tsx",
        "entrypoints\\cli.tsx",
        "hooks\\useApiKeyVerification.ts",
        "screens\\REPL.tsx",
        "services\\adapters\\base.ts",
        "services\\mcpServerApproval.tsx",
        "services\\modelAdapterFactory.ts",
        "services\\notifier.ts",
        "services\\openai.ts",
        "test\\testAdapters.ts",
        "tools\\BashTool\\BashTool.tsx",
        "utils\\auth.ts",
        "utils\\autoUpdater.ts",
        "utils\\theme.ts",
        "utils\\user.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "./env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "./state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        },
        {
          "importPath": "./json",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\json.ts",
          "relativePath": "utils\\json.ts"
        },
        {
          "importPath": "./errors",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\errors.ts",
          "relativePath": "utils\\errors.ts"
        },
        {
          "importPath": "./theme",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
          "relativePath": "utils\\theme.ts"
        },
        {
          "importPath": "./debugLogger",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\debugLogger.ts",
          "relativePath": "utils\\debugLogger.ts"
        },
        {
          "importPath": "./sessionState",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\sessionState.ts",
          "relativePath": "utils\\sessionState.ts"
        }
      ],
      "dependencyCount": 12,
      "dependentCount": 23,
      "importanceScore": 77
    },
    {
      "path": "utils\\conversationRecovery.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\conversationRecovery.ts",
      "imports": [
        "fs/promises",
        "utils\\log.ts",
        "Tool.ts"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx",
        "screens\\ResumeConversation.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs/promises",
          "resolvedPath": null,
          "relativePath": "fs/promises"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "utils\\Cursor.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\Cursor.ts",
      "imports": [
        "wrap-ansi"
      ],
      "importedBy": [
        "hooks\\useTextInput.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "wrap-ansi",
          "resolvedPath": null,
          "relativePath": "wrap-ansi"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "utils\\debugLogger.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\debugLogger.ts",
      "imports": [
        "fs",
        "path",
        "os",
        "crypto",
        "chalk",
        "env-paths",
        "constants\\product.ts",
        "utils\\log.ts",
        "types\\conversation.ts"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx",
        "screens\\REPL.tsx",
        "services\\openai.ts",
        "tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
        "tools\\TaskTool\\TaskTool.tsx",
        "utils\\config.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "env-paths",
          "resolvedPath": null,
          "relativePath": "env-paths"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../types/conversation",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\conversation.ts",
          "relativePath": "types\\conversation.ts"
        }
      ],
      "dependencyCount": 9,
      "dependentCount": 6,
      "importanceScore": 26
    },
    {
      "path": "utils\\diff.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\diff.ts",
      "imports": [
        "diff"
      ],
      "importedBy": [
        "components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
        "tools\\FileEditTool\\utils.ts",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "diff",
          "resolvedPath": null,
          "relativePath": "diff"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 5,
      "importanceScore": 23
    },
    {
      "path": "utils\\env.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
      "imports": [
        "utils\\execFileNoThrow.ts",
        "lodash-es",
        "path",
        "os",
        "constants\\product.ts"
      ],
      "importedBy": [
        "commands\\terminalSetup.ts",
        "components\\Bug.tsx",
        "components\\Link.tsx",
        "components\\permissions\\FallbackPermissionRequest.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx",
        "components\\permissions\\hooks.ts",
        "components\\permissions\\utils.ts",
        "constants\\figures.ts",
        "constants\\prompts.ts",
        "entrypoints\\cli.tsx",
        "hooks\\usePermissionRequestLogging.ts",
        "services\\vcr.ts",
        "tools\\MemoryReadTool\\MemoryReadTool.tsx",
        "tools\\MemoryWriteTool\\MemoryWriteTool.tsx",
        "utils\\autoUpdater.ts",
        "utils\\config.ts",
        "utils\\exampleCommands.ts",
        "utils\\user.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./execFileNoThrow",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\execFileNoThrow.ts",
          "relativePath": "utils\\execFileNoThrow.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 20,
      "importanceScore": 68
    },
    {
      "path": "utils\\errors.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\errors.ts",
      "imports": [],
      "importedBy": [
        "components\\InvalidConfigDialog.tsx",
        "entrypoints\\cli.tsx",
        "hooks\\useCanUseTool.ts",
        "permissions.ts",
        "utils\\config.ts",
        "utils\\messages.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 6,
      "importanceScore": 26
    },
    {
      "path": "utils\\exampleCommands.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\exampleCommands.ts",
      "imports": [
        "utils\\env.ts",
        "utils\\state.ts",
        "child_process",
        "utils\\log.ts",
        "lodash-es",
        "util",
        "utils\\git.ts",
        "services\\claude.ts"
      ],
      "importedBy": [
        "components\\PromptInput.tsx",
        "entrypoints\\cli.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "./state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "child_process",
          "resolvedPath": null,
          "relativePath": "child_process"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "util",
          "resolvedPath": null,
          "relativePath": "util"
        },
        {
          "importPath": "./git",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\git.ts",
          "relativePath": "utils\\git.ts"
        },
        {
          "importPath": "../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "utils\\execFileNoThrow.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\execFileNoThrow.ts",
      "imports": [
        "child_process",
        "utils\\state.ts",
        "utils\\log.ts"
      ],
      "importedBy": [
        "commands\\listen.ts",
        "commands\\terminalSetup.ts",
        "context.ts",
        "utils\\autoUpdater.ts",
        "utils\\browser.ts",
        "utils\\env.ts",
        "utils\\git.ts",
        "utils\\ripgrep.ts",
        "utils\\user.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "child_process",
          "resolvedPath": null,
          "relativePath": "child_process"
        },
        {
          "importPath": "./state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 9,
      "importanceScore": 35
    },
    {
      "path": "utils\\expertChatStorage.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\expertChatStorage.ts",
      "imports": [
        "fs",
        "path",
        "os",
        "crypto"
      ],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        }
      ],
      "dependencyCount": 4,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "utils\\file.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\file.ts",
      "imports": [
        "utils\\log.ts",
        "glob",
        "process",
        "utils\\ripgrep.ts",
        "lru-cache",
        "utils\\state.ts"
      ],
      "importedBy": [
        "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
        "ProjectOnboarding.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\FileEditTool\\utils.ts",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\NotebookReadTool\\NotebookReadTool.tsx",
        "utils\\autoCompactCore.ts",
        "utils\\fileRecoveryCore.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "glob",
          "resolvedPath": null,
          "relativePath": "glob"
        },
        {
          "importPath": "process",
          "resolvedPath": null,
          "relativePath": "process"
        },
        {
          "importPath": "./ripgrep",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\ripgrep.ts",
          "relativePath": "utils\\ripgrep.ts"
        },
        {
          "importPath": "lru-cache",
          "resolvedPath": null,
          "relativePath": "lru-cache"
        },
        {
          "importPath": "./state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 8,
      "importanceScore": 32
    },
    {
      "path": "utils\\fileRecoveryCore.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\fileRecoveryCore.ts",
      "imports": [
        "utils\\file.ts",
        "services\\fileFreshness.ts"
      ],
      "importedBy": [
        "utils\\autoCompactCore.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./file",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\file.ts",
          "relativePath": "utils\\file.ts"
        },
        {
          "importPath": "../services/fileFreshness",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\fileFreshness.ts",
          "relativePath": "services\\fileFreshness.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "utils\\format.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\format.tsx",
      "imports": [],
      "importedBy": [
        "components\\StructuredDiff.tsx",
        "cost-tracker.ts",
        "tools\\TaskTool\\TaskTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "utils\\fuzzyMatcher.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\fuzzyMatcher.ts",
      "imports": [
        "utils\\advancedFuzzyMatcher.ts"
      ],
      "importedBy": [
        "hooks\\useUnifiedCompletion.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./advancedFuzzyMatcher",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\advancedFuzzyMatcher.ts",
          "relativePath": "utils\\advancedFuzzyMatcher.ts"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "utils\\generators.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\generators.ts",
      "imports": [],
      "importedBy": [
        "context.ts",
        "entrypoints\\mcp.ts",
        "query.ts",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "utils\\messages.tsx"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 5,
      "importanceScore": 23
    },
    {
      "path": "utils\\git.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\git.ts",
      "imports": [
        "lodash-es",
        "utils\\execFileNoThrow.ts"
      ],
      "importedBy": [
        "components\\binary-feedback\\utils.ts",
        "components\\Bug.tsx",
        "constants\\prompts.ts",
        "context.ts",
        "utils\\exampleCommands.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "./execFileNoThrow",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\execFileNoThrow.ts",
          "relativePath": "utils\\execFileNoThrow.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 5,
      "importanceScore": 23
    },
    {
      "path": "utils\\globalLogger.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\globalLogger.ts",
      "imports": [],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "utils\\http.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\http.ts",
      "imports": [
        "constants\\macros.ts",
        "constants\\product.ts"
      ],
      "importedBy": [
        "components\\Bug.tsx",
        "services\\claude.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../constants/macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 2,
      "importanceScore": 14
    },
    {
      "path": "utils\\imagePaste.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\imagePaste.ts",
      "imports": [
        "child_process",
        "fs"
      ],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "child_process",
          "resolvedPath": null,
          "relativePath": "child_process"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "utils\\json.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\json.ts",
      "imports": [
        "utils\\log.ts"
      ],
      "importedBy": [
        "commands\\terminalSetup.ts",
        "services\\mcpClient.ts",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "utils\\config.ts",
        "utils\\terminal.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 5,
      "importanceScore": 23
    },
    {
      "path": "utils\\log.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
      "imports": [
        "fs",
        "path",
        "fs",
        "services\\sentry.ts",
        "crypto",
        "env-paths",
        "fs",
        "types\\logs.ts",
        "constants\\macros.ts",
        "constants\\product.ts"
      ],
      "importedBy": [
        "commands\\listen.ts",
        "commands\\resume.tsx",
        "commands\\terminalSetup.ts",
        "components\\Bug.tsx",
        "components\\ConsoleOAuthFlow.tsx",
        "components\\HighlightedCode.tsx",
        "components\\LogSelector.tsx",
        "components\\Message.tsx",
        "components\\messages\\AssistantToolUseMessage.tsx",
        "components\\messages\\UserPromptMessage.tsx",
        "context.ts",
        "cost-tracker.ts",
        "entrypoints\\cli.tsx",
        "entrypoints\\cli.tsx",
        "entrypoints\\cli.tsx",
        "entrypoints\\mcp.ts",
        "hooks\\useCanUseTool.ts",
        "hooks\\useLogMessages.ts",
        "permissions.ts",
        "query.ts",
        "screens\\LogList.tsx",
        "screens\\LogList.tsx",
        "screens\\LogList.tsx",
        "screens\\REPL.tsx",
        "screens\\ResumeConversation.tsx",
        "services\\claude.ts",
        "services\\mcpClient.ts",
        "services\\oauth.ts",
        "tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\lsTool\\lsTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx",
        "utils\\ask.tsx",
        "utils\\autoUpdater.ts",
        "utils\\cleanup.ts",
        "utils\\cleanup.ts",
        "utils\\conversationRecovery.ts",
        "utils\\debugLogger.ts",
        "utils\\exampleCommands.ts",
        "utils\\execFileNoThrow.ts",
        "utils\\file.ts",
        "utils\\json.ts",
        "utils\\markdown.ts",
        "utils\\messages.tsx",
        "utils\\model.ts",
        "utils\\PersistentShell.ts",
        "utils\\ripgrep.ts",
        "utils\\terminal.ts",
        "utils\\user.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "../services/sentry",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\sentry.ts",
          "relativePath": "services\\sentry.ts"
        },
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        },
        {
          "importPath": "env-paths",
          "resolvedPath": null,
          "relativePath": "env-paths"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "../types/logs",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\types\\logs.ts",
          "relativePath": "types\\logs.ts"
        },
        {
          "importPath": "../constants/macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 10,
      "dependentCount": 52,
      "importanceScore": 164
    },
    {
      "path": "utils\\markdown.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\markdown.ts",
      "imports": [
        "marked",
        "utils\\messages.tsx",
        "chalk",
        "os",
        "cli-highlight",
        "utils\\log.ts"
      ],
      "importedBy": [
        "components\\messages\\AssistantTextMessage.tsx",
        "components\\messages\\AssistantThinkingMessage.tsx",
        "tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
        "tools\\TaskTool\\TaskTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "marked",
          "resolvedPath": null,
          "relativePath": "marked"
        },
        {
          "importPath": "./messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "cli-highlight",
          "resolvedPath": null,
          "relativePath": "cli-highlight"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 4,
      "importanceScore": 20
    },
    {
      "path": "utils\\messageContextManager.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messageContextManager.ts",
      "imports": [
        "query.ts",
        "utils\\tokens.ts",
        "crypto"
      ],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "./tokens",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\tokens.ts",
          "relativePath": "utils\\tokens.ts"
        },
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "utils\\messages.tsx",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
      "imports": [
        "crypto",
        "ink",
        "commands",
        "utils\\errors.ts",
        "utils\\log.ts",
        "path",
        "lodash-es",
        "Tool.ts",
        "utils\\generators.ts",
        "services\\claude.ts",
        "utils\\state.ts",
        "utils\\state.ts",
        "chalk",
        "react",
        "components\\messages\\UserBashInputMessage.tsx",
        "components\\Spinner.tsx",
        "tools\\BashTool\\BashTool.tsx"
      ],
      "importedBy": [
        "components\\binary-feedback\\BinaryFeedback.tsx",
        "components\\binary-feedback\\BinaryFeedbackView.tsx",
        "components\\Message.tsx",
        "components\\messages\\AssistantBashOutputMessage.tsx",
        "components\\messages\\AssistantLocalCommandOutputMessage.tsx",
        "components\\messages\\UserBashInputMessage.tsx",
        "components\\messages\\UserCommandMessage.tsx",
        "components\\messages\\UserKodingInputMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx",
        "components\\PromptInput.tsx",
        "hooks\\useCanUseTool.ts",
        "tools\\ArchitectTool\\ArchitectTool.tsx",
        "tools\\BashTool\\utils.ts",
        "utils\\ask.tsx",
        "utils\\autoCompactCore.ts",
        "utils\\markdown.ts",
        "utils\\thinking.ts",
        "utils\\tokens.ts"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "crypto",
          "resolvedPath": null,
          "relativePath": "crypto"
        },
        {
          "importPath": "ink",
          "resolvedPath": null,
          "relativePath": "ink"
        },
        {
          "importPath": "../commands",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\commands",
          "relativePath": "commands"
        },
        {
          "importPath": "./errors",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\errors.ts",
          "relativePath": "utils\\errors.ts"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        },
        {
          "importPath": "../utils/generators",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\generators.ts",
          "relativePath": "utils\\generators.ts"
        },
        {
          "importPath": "../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        },
        {
          "importPath": "./state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "./state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "chalk",
          "resolvedPath": null,
          "relativePath": "chalk"
        },
        {
          "importPath": "react",
          "resolvedPath": null,
          "relativePath": "react"
        },
        {
          "importPath": "../components/messages/UserBashInputMessage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\messages\\UserBashInputMessage.tsx",
          "relativePath": "components\\messages\\UserBashInputMessage.tsx"
        },
        {
          "importPath": "../components/Spinner",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\components\\Spinner.tsx",
          "relativePath": "components\\Spinner.tsx"
        },
        {
          "importPath": "../tools/BashTool/BashTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\BashTool\\BashTool.tsx",
          "relativePath": "tools\\BashTool\\BashTool.tsx"
        }
      ],
      "dependencyCount": 17,
      "dependentCount": 18,
      "importanceScore": 62
    },
    {
      "path": "utils\\model.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
      "imports": [
        "lodash-es",
        "utils\\log.ts"
      ],
      "importedBy": [
        "commands\\agents.tsx",
        "components\\Config.tsx",
        "components\\Logo.tsx",
        "components\\ModelConfig.tsx",
        "components\\ModelListManager.tsx",
        "components\\ModelSelector.tsx",
        "components\\ModelStatusDisplay.tsx",
        "components\\PromptInput.tsx",
        "context.ts",
        "entrypoints\\cli.tsx",
        "entrypoints\\mcp.ts",
        "hooks\\useUnifiedCompletion.ts",
        "screens\\REPL.tsx",
        "screens\\ResumeConversation.tsx",
        "services\\claude.ts",
        "services\\claude.ts",
        "services\\claude.ts",
        "tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\TaskTool\\prompt.ts",
        "tools\\TaskTool\\TaskTool.tsx",
        "tools\\ThinkTool\\ThinkTool.tsx",
        "utils\\ask.tsx",
        "utils\\auth.ts",
        "utils\\autoCompactCore.ts",
        "utils\\thinking.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 26,
      "importanceScore": 86
    },
    {
      "path": "utils\\permissions\\filesystem.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\permissions\\filesystem.ts",
      "imports": [
        "path",
        "utils\\state.ts"
      ],
      "importedBy": [
        "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
        "entrypoints\\cli.tsx",
        "permissions.ts",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\GrepTool\\GrepTool.tsx",
        "tools\\lsTool\\lsTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "tools\\NotebookReadTool\\NotebookReadTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "../state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 12,
      "importanceScore": 43
    },
    {
      "path": "utils\\PersistentShell.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\PersistentShell.ts",
      "imports": [
        "fs",
        "os",
        "fs",
        "shell-quote",
        "child_process",
        "path",
        "utils\\log.ts",
        "os",
        "constants\\product.ts"
      ],
      "importedBy": [
        "entrypoints\\cli.tsx",
        "tools\\BashTool\\BashTool.tsx",
        "utils\\state.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "shell-quote",
          "resolvedPath": null,
          "relativePath": "shell-quote"
        },
        {
          "importPath": "child_process",
          "resolvedPath": null,
          "relativePath": "child_process"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "os",
          "resolvedPath": null,
          "relativePath": "os"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 9,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "utils\\responseState.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\responseState.ts",
      "imports": [],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 0,
      "importanceScore": 8
    },
    {
      "path": "utils\\ripgrep.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\ripgrep.ts",
      "imports": [
        "spawn-rx",
        "lodash-es",
        "node:url",
        "path",
        "utils\\log.ts",
        "utils\\execFileNoThrow.ts",
        "child_process",
        "debug"
      ],
      "importedBy": [
        "context.ts",
        "tools\\GrepTool\\GrepTool.tsx",
        "utils\\file.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "spawn-rx",
          "resolvedPath": null,
          "relativePath": "spawn-rx"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "node:url",
          "resolvedPath": null,
          "relativePath": "node:url"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "./execFileNoThrow",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\execFileNoThrow.ts",
          "relativePath": "utils\\execFileNoThrow.ts"
        },
        {
          "importPath": "child_process",
          "resolvedPath": null,
          "relativePath": "child_process"
        },
        {
          "importPath": "debug",
          "resolvedPath": null,
          "relativePath": "debug"
        }
      ],
      "dependencyCount": 8,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "utils\\secureFile.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\secureFile.ts",
      "imports": [
        "node:fs",
        "node:path",
        "node:os"
      ],
      "importedBy": [
        "tools\\FileReadTool\\FileReadTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "node:fs",
          "resolvedPath": null,
          "relativePath": "node:fs"
        },
        {
          "importPath": "node:path",
          "resolvedPath": null,
          "relativePath": "node:path"
        },
        {
          "importPath": "node:os",
          "resolvedPath": null,
          "relativePath": "node:os"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "utils\\sessionState.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\sessionState.ts",
      "imports": [],
      "importedBy": [
        "components\\Spinner.tsx",
        "services\\openai.ts",
        "utils\\config.ts",
        "utils\\todoStorage.ts"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 4,
      "importanceScore": 20
    },
    {
      "path": "utils\\state.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
      "imports": [
        "process",
        "utils\\PersistentShell.ts"
      ],
      "importedBy": [
        "commands\\agents.tsx",
        "commands\\clear.ts",
        "components\\FileEditToolUpdatedMessage.tsx",
        "components\\Logo.tsx",
        "components\\permissions\\FallbackPermissionRequest.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
        "components\\permissions\\toolUseOptions.ts",
        "components\\TrustDialog.tsx",
        "constants\\prompts.ts",
        "context.ts",
        "entrypoints\\cli.tsx",
        "entrypoints\\mcp.ts",
        "hooks\\useUnifiedCompletion.ts",
        "permissions.ts",
        "query.ts",
        "screens\\REPL.tsx",
        "services\\customCommands.ts",
        "services\\mcpClient.ts",
        "services\\mentionProcessor.ts",
        "services\\vcr.ts",
        "tools\\BashTool\\BashTool.tsx",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileEditTool\\utils.ts",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\GlobTool\\GlobTool.tsx",
        "tools\\GrepTool\\GrepTool.tsx",
        "tools\\lsTool\\lsTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx",
        "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "tools\\NotebookReadTool\\NotebookReadTool.tsx",
        "utils\\agentLoader.ts",
        "utils\\ask.tsx",
        "utils\\config.ts",
        "utils\\exampleCommands.ts",
        "utils\\execFileNoThrow.ts",
        "utils\\file.ts",
        "utils\\messages.tsx",
        "utils\\messages.tsx",
        "utils\\permissions\\filesystem.ts",
        "utils\\style.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "process",
          "resolvedPath": null,
          "relativePath": "process"
        },
        {
          "importPath": "./PersistentShell",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\PersistentShell.ts",
          "relativePath": "utils\\PersistentShell.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 43,
      "importanceScore": 137
    },
    {
      "path": "utils\\style.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\style.ts",
      "imports": [
        "fs",
        "path",
        "lodash-es",
        "utils\\state.ts",
        "constants\\product.ts"
      ],
      "importedBy": [
        "commands\\clear.ts",
        "commands\\compact.ts",
        "context.ts",
        "utils\\autoCompactCore.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "fs",
          "resolvedPath": null,
          "relativePath": "fs"
        },
        {
          "importPath": "path",
          "resolvedPath": null,
          "relativePath": "path"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "./state",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\state.ts",
          "relativePath": "utils\\state.ts"
        },
        {
          "importPath": "../constants/product",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\product.ts",
          "relativePath": "constants\\product.ts"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 4,
      "importanceScore": 20
    },
    {
      "path": "utils\\terminal.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\terminal.ts",
      "imports": [
        "utils\\json.ts",
        "utils\\log.ts",
        "services\\claude.ts"
      ],
      "importedBy": [
        "commands\\clear.ts",
        "commands\\compact.ts",
        "commands\\login.tsx",
        "commands\\logout.tsx",
        "commands\\onboarding.tsx",
        "components\\ConsoleOAuthFlow.tsx",
        "components\\Onboarding.tsx",
        "components\\PromptInput.tsx",
        "entrypoints\\cli.tsx",
        "screens\\REPL.tsx",
        "utils\\autoCompactCore.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./json",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\json.ts",
          "relativePath": "utils\\json.ts"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../services/claude",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\services\\claude.ts",
          "relativePath": "services\\claude.ts"
        }
      ],
      "dependencyCount": 3,
      "dependentCount": 11,
      "importanceScore": 41
    },
    {
      "path": "utils\\theme.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\theme.ts",
      "imports": [
        "utils\\config.ts"
      ],
      "importedBy": [
        "commands\\agents.tsx",
        "commands\\mcp.ts",
        "commands\\terminalSetup.ts",
        "components\\ApproveApiKey.tsx",
        "components\\AsciiLogo.tsx",
        "components\\binary-feedback\\BinaryFeedbackView.tsx",
        "components\\Bug.tsx",
        "components\\Config.tsx",
        "components\\ConsoleOAuthFlow.tsx",
        "components\\CostThresholdDialog.tsx",
        "components\\CustomSelect\\select-option.tsx",
        "components\\CustomSelect\\select.tsx",
        "components\\FallbackToolUseRejectedMessage.tsx",
        "components\\FileEditToolUpdatedMessage.tsx",
        "components\\Help.tsx",
        "components\\InvalidConfigDialog.tsx",
        "components\\Logo.tsx",
        "components\\LogSelector.tsx",
        "components\\MCPServerApprovalDialog.tsx",
        "components\\MCPServerMultiselectDialog.tsx",
        "components\\messages\\AssistantLocalCommandOutputMessage.tsx",
        "components\\messages\\AssistantRedactedThinkingMessage.tsx",
        "components\\messages\\AssistantTextMessage.tsx",
        "components\\messages\\AssistantThinkingMessage.tsx",
        "components\\messages\\AssistantToolUseMessage.tsx",
        "components\\messages\\TaskProgressMessage.tsx",
        "components\\messages\\TaskToolMessage.tsx",
        "components\\messages\\UserBashInputMessage.tsx",
        "components\\messages\\UserCommandMessage.tsx",
        "components\\messages\\UserKodingInputMessage.tsx",
        "components\\messages\\UserPromptMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolCanceledMessage.tsx",
        "components\\messages\\UserToolResultMessage\\UserToolErrorMessage.tsx",
        "components\\MessageSelector.tsx",
        "components\\ModeIndicator.tsx",
        "components\\ModelConfig.tsx",
        "components\\ModelListManager.tsx",
        "components\\ModelSelector.tsx",
        "components\\ModelStatusDisplay.tsx",
        "components\\Onboarding.tsx",
        "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx",
        "components\\permissions\\FallbackPermissionRequest.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
        "components\\permissions\\PermissionRequestTitle.tsx",
        "components\\permissions\\toolUseOptions.ts",
        "components\\PressEnterToContinue.tsx",
        "components\\PromptInput.tsx",
        "components\\Spinner.tsx",
        "components\\StructuredDiff.tsx",
        "components\\TextInput.tsx",
        "components\\TokenWarning.tsx",
        "components\\ToolUseLoader.tsx",
        "components\\TrustDialog.tsx",
        "ProjectOnboarding.tsx",
        "screens\\Doctor.tsx",
        "tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
        "tools\\BashTool\\BashToolResultMessage.tsx",
        "tools\\BashTool\\OutputLine.tsx",
        "tools\\FileEditTool\\FileEditTool.tsx",
        "tools\\FileReadTool\\FileReadTool.tsx",
        "tools\\FileWriteTool\\FileWriteTool.tsx",
        "tools\\lsTool\\lsTool.tsx",
        "tools\\MCPTool\\MCPTool.tsx",
        "tools\\MultiEditTool\\MultiEditTool.tsx",
        "tools\\StickerRequestTool\\StickerRequestTool.tsx",
        "tools\\TaskTool\\TaskTool.tsx",
        "tools\\ThinkTool\\ThinkTool.tsx",
        "tools\\TodoWriteTool\\TodoWriteTool.tsx",
        "utils\\config.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 73,
      "importanceScore": 227
    },
    {
      "path": "utils\\thinking.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\thinking.ts",
      "imports": [
        "lodash-es",
        "query.ts",
        "utils\\messages.tsx",
        "tools\\ThinkTool\\ThinkTool.tsx",
        "utils\\model.ts"
      ],
      "importedBy": [
        "screens\\REPL.tsx",
        "services\\claude.ts",
        "tools\\TaskTool\\TaskTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "./messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        },
        {
          "importPath": "../tools/ThinkTool/ThinkTool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\tools\\ThinkTool\\ThinkTool.tsx",
          "relativePath": "tools\\ThinkTool\\ThinkTool.tsx"
        },
        {
          "importPath": "./model",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\model.ts",
          "relativePath": "utils\\model.ts"
        }
      ],
      "dependencyCount": 5,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "utils\\todoStorage.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\todoStorage.ts",
      "imports": [
        "utils\\sessionState.ts",
        "utils\\agentStorage.ts"
      ],
      "importedBy": [
        "components\\TodoItem.tsx",
        "services\\systemReminder.ts",
        "tools\\TodoWriteTool\\TodoWriteTool.tsx"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./sessionState",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\sessionState.ts",
          "relativePath": "utils\\sessionState.ts"
        },
        {
          "importPath": "./agentStorage",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\agentStorage.ts",
          "relativePath": "utils\\agentStorage.ts"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 3,
      "importanceScore": 17
    },
    {
      "path": "utils\\tokens.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\tokens.ts",
      "imports": [
        "query.ts",
        "utils\\messages.tsx"
      ],
      "importedBy": [
        "components\\PromptInput.tsx",
        "services\\claude.ts",
        "utils\\autoCompactCore.ts",
        "utils\\messageContextManager.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "../query",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\query.ts",
          "relativePath": "query.ts"
        },
        {
          "importPath": "./messages",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\messages.tsx",
          "relativePath": "utils\\messages.tsx"
        }
      ],
      "dependencyCount": 2,
      "dependentCount": 4,
      "importanceScore": 20
    },
    {
      "path": "utils\\toolExecutionController.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\toolExecutionController.ts",
      "imports": [
        "Tool.ts"
      ],
      "importedBy": [
        "query.ts"
      ],
      "externalImports": [
        "@anthropic-ai/sdk/resources/index.mjs"
      ],
      "internalImports": [
        {
          "importPath": "../Tool",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\Tool.ts",
          "relativePath": "Tool.ts"
        }
      ],
      "dependencyCount": 1,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "utils\\unaryLogging.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\unaryLogging.ts",
      "imports": [],
      "importedBy": [
        "components\\permissions\\FallbackPermissionRequest.tsx",
        "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
        "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx",
        "components\\permissions\\hooks.ts",
        "components\\permissions\\utils.ts",
        "hooks\\usePermissionRequestLogging.ts"
      ],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 7,
      "importanceScore": 29
    },
    {
      "path": "utils\\user.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\user.ts",
      "imports": [
        "utils\\config.ts",
        "lodash-es",
        "utils\\env.ts",
        "utils\\execFileNoThrow.ts",
        "utils\\log.ts",
        "constants\\macros.ts"
      ],
      "importedBy": [
        "context.ts"
      ],
      "externalImports": [],
      "internalImports": [
        {
          "importPath": "./config",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\config.ts",
          "relativePath": "utils\\config.ts"
        },
        {
          "importPath": "lodash-es",
          "resolvedPath": null,
          "relativePath": "lodash-es"
        },
        {
          "importPath": "./env",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\env.ts",
          "relativePath": "utils\\env.ts"
        },
        {
          "importPath": "./execFileNoThrow",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\execFileNoThrow.ts",
          "relativePath": "utils\\execFileNoThrow.ts"
        },
        {
          "importPath": "./log",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\log.ts",
          "relativePath": "utils\\log.ts"
        },
        {
          "importPath": "../constants/macros",
          "resolvedPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\constants\\macros.ts",
          "relativePath": "constants\\macros.ts"
        }
      ],
      "dependencyCount": 6,
      "dependentCount": 1,
      "importanceScore": 11
    },
    {
      "path": "utils\\validate.ts",
      "fullPath": "D:\\github\\2015\\09\\Kode-novel-worktrees\\local-dev\\src\\utils\\validate.ts",
      "imports": [],
      "importedBy": [],
      "externalImports": [],
      "internalImports": [],
      "dependencyCount": 0,
      "dependentCount": 0,
      "importanceScore": 8
    }
  ],
  "statistics": {
    "totalFiles": 273,
    "averageDependencies": "5.79",
    "averageDependents": "3.73",
    "maxDependencies": 45,
    "maxDependents": 73,
    "filesWithNoDependencies": 43,
    "filesWithNoDependents": 22,
    "topImportantFiles": [
      {
        "path": "utils\\theme.ts",
        "score": 227,
        "dependents": 73,
        "dependencies": 1
      },
      {
        "path": "Tool.ts",
        "score": 191,
        "dependents": 54,
        "dependencies": 2
      },
      {
        "path": "utils\\log.ts",
        "score": 164,
        "dependents": 52,
        "dependencies": 10
      },
      {
        "path": "utils\\state.ts",
        "score": 137,
        "dependents": 43,
        "dependencies": 2
      },
      {
        "path": "constants\\product.ts",
        "score": 119,
        "dependents": 37,
        "dependencies": 0
      },
      {
        "path": "query.ts",
        "score": 90,
        "dependents": 27,
        "dependencies": 9
      },
      {
        "path": "utils\\model.ts",
        "score": 86,
        "dependents": 26,
        "dependencies": 2
      },
      {
        "path": "utils\\config.ts",
        "score": 77,
        "dependents": 23,
        "dependencies": 12
      },
      {
        "path": "utils\\env.ts",
        "score": 68,
        "dependents": 20,
        "dependencies": 5
      },
      {
        "path": "components\\FallbackToolUseRejectedMessage.tsx",
        "score": 65,
        "dependents": 19,
        "dependencies": 4
      }
    ],
    "mostDependedFiles": [
      {
        "path": "utils\\theme.ts",
        "dependentCount": 73,
        "importanceScore": 227
      },
      {
        "path": "Tool.ts",
        "dependentCount": 54,
        "importanceScore": 191
      },
      {
        "path": "utils\\log.ts",
        "dependentCount": 52,
        "importanceScore": 164
      },
      {
        "path": "utils\\state.ts",
        "dependentCount": 43,
        "importanceScore": 137
      },
      {
        "path": "constants\\product.ts",
        "dependentCount": 37,
        "importanceScore": 119
      },
      {
        "path": "query.ts",
        "dependentCount": 27,
        "importanceScore": 90
      },
      {
        "path": "utils\\model.ts",
        "dependentCount": 26,
        "importanceScore": 86
      },
      {
        "path": "utils\\config.ts",
        "dependentCount": 23,
        "importanceScore": 77
      },
      {
        "path": "utils\\env.ts",
        "dependentCount": 20,
        "importanceScore": 68
      },
      {
        "path": "components\\FallbackToolUseRejectedMessage.tsx",
        "dependentCount": 19,
        "importanceScore": 65
      }
    ],
    "leafFiles": [
      "commands.ts",
      "context.ts",
      "index.ts",
      "tools.ts",
      "commands\\approvedTools.ts",
      "components\\StickerRequestForm.tsx",
      "constants\\claude-asterisk-ascii-art.tsx",
      "entrypoints\\cli.tsx",
      "services\\browserMocks.ts",
      "services\\mentionProcessor.ts",
      "test\\testAdapters.ts",
      "types\\PermissionMode.ts",
      "types\\RequestContext.ts",
      "utils\\commonUnixCommands.ts",
      "utils\\expertChatStorage.ts",
      "utils\\globalLogger.ts",
      "utils\\imagePaste.ts",
      "utils\\messageContextManager.ts",
      "utils\\responseState.ts",
      "utils\\validate.ts",
      "components\\messages\\TaskProgressMessage.tsx",
      "tools\\StickerRequestTool\\StickerRequestTool.tsx"
    ]
  },
  "annotationPriority": {
    "critical": [
      {
        "path": "utils\\theme.ts",
        "score": 227,
        "dependents": 73,
        "reason": "被73个文件依赖"
      },
      {
        "path": "Tool.ts",
        "score": 191,
        "dependents": 54,
        "reason": "被54个文件依赖, 项目入口点"
      },
      {
        "path": "utils\\log.ts",
        "score": 164,
        "dependents": 52,
        "reason": "被52个文件依赖"
      },
      {
        "path": "utils\\state.ts",
        "score": 137,
        "dependents": 43,
        "reason": "被43个文件依赖"
      },
      {
        "path": "constants\\product.ts",
        "score": 119,
        "dependents": 37,
        "reason": "被37个文件依赖"
      },
      {
        "path": "query.ts",
        "score": 90,
        "dependents": 27,
        "reason": "被27个文件依赖"
      },
      {
        "path": "utils\\model.ts",
        "score": 86,
        "dependents": 26,
        "reason": "被26个文件依赖"
      },
      {
        "path": "utils\\config.ts",
        "score": 77,
        "dependents": 23,
        "reason": "被23个文件依赖"
      },
      {
        "path": "utils\\env.ts",
        "score": 68,
        "dependents": 20,
        "reason": "被20个文件依赖"
      },
      {
        "path": "components\\FallbackToolUseRejectedMessage.tsx",
        "score": 65,
        "dependents": 19,
        "reason": "被19个文件依赖"
      },
      {
        "path": "utils\\messages.tsx",
        "score": 62,
        "dependents": 18,
        "reason": "被18个文件依赖"
      },
      {
        "path": "components\\CustomSelect\\select.tsx",
        "score": 58,
        "dependents": 17,
        "reason": "被17个文件依赖"
      },
      {
        "path": "services\\claude.ts",
        "score": 56,
        "dependents": 16,
        "reason": "被16个文件依赖"
      },
      {
        "path": "hooks\\useExitOnCtrlCD.ts",
        "score": 53,
        "dependents": 15,
        "reason": "被15个文件依赖"
      },
      {
        "path": "tools\\BashTool\\BashTool.tsx",
        "score": 46,
        "dependents": 13,
        "reason": "被13个文件依赖"
      },
      {
        "path": "constants\\macros.ts",
        "score": 44,
        "dependents": 12,
        "reason": "被12个文件依赖"
      },
      {
        "path": "hooks\\useTerminalSize.ts",
        "score": 44,
        "dependents": 12,
        "reason": "被12个文件依赖"
      },
      {
        "path": "utils\\permissions\\filesystem.ts",
        "score": 43,
        "dependents": 12,
        "reason": "被12个文件依赖"
      },
      {
        "path": "services\\systemReminder.ts",
        "score": 41,
        "dependents": 11,
        "reason": "被11个文件依赖"
      },
      {
        "path": "utils\\terminal.ts",
        "score": 41,
        "dependents": 11,
        "reason": "被11个文件依赖"
      },
      {
        "path": "services\\fileFreshness.ts",
        "score": 38,
        "dependents": 10,
        "reason": "被10个文件依赖"
      },
      {
        "path": "utils\\execFileNoThrow.ts",
        "score": 35,
        "dependents": 9,
        "reason": "被9个文件依赖"
      },
      {
        "path": "tools\\NotebookEditTool\\NotebookEditTool.tsx",
        "score": 34,
        "dependents": 9,
        "reason": "被9个文件依赖"
      },
      {
        "path": "permissions.ts",
        "score": 33,
        "dependents": 8,
        "reason": "被8个文件依赖"
      },
      {
        "path": "utils\\file.ts",
        "score": 32,
        "dependents": 8,
        "reason": "被8个文件依赖"
      },
      {
        "path": "tools\\FileWriteTool\\FileWriteTool.tsx",
        "score": 31,
        "dependents": 8,
        "reason": "被8个文件依赖"
      }
    ],
    "high": [
      {
        "path": "components\\StructuredDiff.tsx",
        "score": 29,
        "dependents": 7,
        "reason": "被7个文件依赖"
      },
      {
        "path": "services\\mcpClient.ts",
        "score": 29,
        "dependents": 7,
        "reason": "被7个文件依赖"
      },
      {
        "path": "utils\\agentLoader.ts",
        "score": 29,
        "dependents": 7,
        "reason": "被7个文件依赖"
      },
      {
        "path": "utils\\unaryLogging.ts",
        "score": 29,
        "dependents": 7,
        "reason": "被7个文件依赖"
      },
      {
        "path": "tools\\FileEditTool\\FileEditTool.tsx",
        "score": 28,
        "dependents": 7,
        "reason": "被7个文件依赖"
      },
      {
        "path": "tools\\FileReadTool\\FileReadTool.tsx",
        "score": 28,
        "dependents": 7,
        "reason": "被7个文件依赖"
      },
      {
        "path": "tools\\GlobTool\\GlobTool.tsx",
        "score": 28,
        "dependents": 7,
        "reason": "被7个文件依赖"
      },
      {
        "path": "tools\\lsTool\\lsTool.tsx",
        "score": 28,
        "dependents": 7,
        "reason": "被7个文件依赖"
      },
      {
        "path": "messages.ts",
        "score": 27,
        "dependents": 6,
        "reason": "被6个文件依赖"
      },
      {
        "path": "components\\Cost.tsx",
        "score": 26,
        "dependents": 6,
        "reason": "被6个文件依赖"
      },
      {
        "path": "types\\modelCapabilities.ts",
        "score": 26,
        "dependents": 6,
        "reason": "被6个文件依赖"
      },
      {
        "path": "utils\\array.ts",
        "score": 26,
        "dependents": 6,
        "reason": "被6个文件依赖"
      },
      {
        "path": "utils\\debugLogger.ts",
        "score": 26,
        "dependents": 6,
        "reason": "被6个文件依赖"
      },
      {
        "path": "utils\\errors.ts",
        "score": 26,
        "dependents": 6,
        "reason": "被6个文件依赖"
      },
      {
        "path": "tools\\GrepTool\\GrepTool.tsx",
        "score": 25,
        "dependents": 6,
        "reason": "被6个文件依赖"
      },
      {
        "path": "components\\HighlightedCode.tsx",
        "score": 23,
        "dependents": 5,
        "reason": "被5个文件依赖"
      },
      {
        "path": "constants\\prompts.ts",
        "score": 23,
        "dependents": 5,
        "reason": "被5个文件依赖"
      },
      {
        "path": "utils\\agentStorage.ts",
        "score": 23,
        "dependents": 5,
        "reason": "被5个文件依赖"
      },
      {
        "path": "utils\\commands.ts",
        "score": 23,
        "dependents": 5,
        "reason": "被5个文件依赖"
      },
      {
        "path": "utils\\diff.ts",
        "score": 23,
        "dependents": 5,
        "reason": "被5个文件依赖"
      },
      {
        "path": "utils\\generators.ts",
        "score": 23,
        "dependents": 5,
        "reason": "被5个文件依赖"
      },
      {
        "path": "utils\\git.ts",
        "score": 23,
        "dependents": 5,
        "reason": "被5个文件依赖"
      },
      {
        "path": "utils\\json.ts",
        "score": 23,
        "dependents": 5,
        "reason": "被5个文件依赖"
      },
      {
        "path": "components\\permissions\\PermissionRequest.tsx",
        "score": 22,
        "dependents": 5,
        "reason": "被5个文件依赖"
      },
      {
        "path": "cost-tracker.ts",
        "score": 21,
        "dependents": 4,
        "reason": "被4个文件依赖"
      },
      {
        "path": "history.ts",
        "score": 21,
        "dependents": 4,
        "reason": "被4个文件依赖"
      },
      {
        "path": "components\\TextInput.tsx",
        "score": 20,
        "dependents": 4,
        "reason": "被4个文件依赖"
      },
      {
        "path": "hooks\\useCanUseTool.ts",
        "score": 20,
        "dependents": 4,
        "reason": "被4个文件依赖"
      },
      {
        "path": "types\\logs.ts",
        "score": 20,
        "dependents": 4,
        "reason": "被4个文件依赖"
      },
      {
        "path": "utils\\markdown.ts",
        "score": 20,
        "dependents": 4,
        "reason": "被4个文件依赖"
      },
      {
        "path": "utils\\sessionState.ts",
        "score": 20,
        "dependents": 4,
        "reason": "被4个文件依赖"
      },
      {
        "path": "utils\\style.ts",
        "score": 20,
        "dependents": 4,
        "reason": "被4个文件依赖"
      },
      {
        "path": "utils\\tokens.ts",
        "score": 20,
        "dependents": 4,
        "reason": "被4个文件依赖"
      }
    ],
    "medium": [
      {
        "path": "tools\\NotebookReadTool\\NotebookReadTool.tsx",
        "score": 19,
        "dependents": 4,
        "reason": "被4个文件依赖"
      },
      {
        "path": "commands\\clear.ts",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "commands\\terminalSetup.ts",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "components\\FileEditToolUpdatedMessage.tsx",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "components\\Message.tsx",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "components\\ModelSelector.tsx",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "components\\Onboarding.tsx",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "components\\PressEnterToContinue.tsx",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "components\\Spinner.tsx",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "constants\\figures.ts",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "context\\PermissionContext.tsx",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "services\\openai.ts",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "services\\sentry.ts",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "utils\\format.tsx",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "utils\\PersistentShell.ts",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "utils\\ripgrep.ts",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "utils\\thinking.ts",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "utils\\todoStorage.ts",
        "score": 17,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "services\\adapters\\base.ts",
        "score": 16,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "tools\\BashTool\\prompt.ts",
        "score": 16,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "tools\\TaskTool\\TaskTool.tsx",
        "score": 16,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "tools\\ThinkTool\\ThinkTool.tsx",
        "score": 16,
        "dependents": 3,
        "reason": "被3个文件依赖"
      },
      {
        "path": "ProjectOnboarding.tsx",
        "score": 15,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "commands\\review.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\AsciiLogo.tsx",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\Link.tsx",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\Logo.tsx",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\LogSelector.tsx",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\MCPServerDialogCopy.tsx",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\MessageResponse.tsx",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "constants\\modelCapabilities.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "constants\\models.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "constants\\releaseNotes.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "hooks\\useDoublePress.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "hooks\\useNotifyAfterTimeout.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "screens\\Doctor.tsx",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "screens\\REPL.tsx",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "screens\\ResumeConversation.tsx",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "services\\customCommands.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "services\\modelAdapterFactory.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "services\\notifier.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "utils\\auth.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "utils\\browser.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "utils\\conversationRecovery.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "utils\\exampleCommands.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "utils\\http.ts",
        "score": 14,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\binary-feedback\\utils.ts",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\CustomSelect\\theme.ts",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\CustomSelect\\use-select-state.ts",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\messages\\AssistantThinkingMessage.tsx",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\messages\\UserBashInputMessage.tsx",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\permissions\\FallbackPermissionRequest.tsx",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "tools\\BashTool\\BashToolResultMessage.tsx",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "tools\\BashTool\\OutputLine.tsx",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "tools\\BashTool\\utils.ts",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "tools\\GlobTool\\prompt.ts",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "tools\\GrepTool\\prompt.ts",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "tools\\TaskTool\\constants.ts",
        "score": 13,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\messages\\UserToolResultMessage\\utils.tsx",
        "score": 12,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\permissions\\FileEditPermissionRequest\\FileEditToolDiff.tsx",
        "score": 12,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "components\\permissions\\FileWritePermissionRequest\\FileWriteToolDiff.tsx",
        "score": 12,
        "dependents": 2,
        "reason": "被2个文件依赖"
      },
      {
        "path": "commands\\agents.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\bug.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\compact.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\config.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\cost.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\ctx_viz.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\doctor.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\help.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\init.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\listen.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\login.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\logout.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\mcp.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\model.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\modelstatus.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\onboarding.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\pr_comments.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\refreshCommands.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\release-notes.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "commands\\resume.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\ApproveApiKey.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\Bug.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\Config.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\ConsoleOAuthFlow.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\CostThresholdDialog.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\Help.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\InvalidConfigDialog.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\MCPServerApprovalDialog.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\MCPServerMultiselectDialog.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\MessageSelector.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\ModeIndicator.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\ModelConfig.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\ModelListManager.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\ModelStatusDisplay.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\PromptInput.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\SentryErrorBoundary.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\TodoItem.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\TokenWarning.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\ToolUseLoader.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\TrustDialog.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "constants\\oauth.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "entrypoints\\mcp.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "hooks\\useApiKeyVerification.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "hooks\\useArrowKeyHistory.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "hooks\\useCancelRequest.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "hooks\\useInterval.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "hooks\\useLogMessages.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "hooks\\useLogStartupTime.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "hooks\\usePermissionRequestLogging.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "hooks\\useTextInput.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "hooks\\useUnifiedCompletion.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "screens\\LogList.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "services\\gpt5ConnectionTest.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "services\\mcpServerApproval.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "services\\oauth.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "services\\responseStateManager.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "services\\vcr.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "types\\conversation.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "types\\notebook.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "utils\\advancedFuzzyMatcher.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "utils\\ask.tsx",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "utils\\autoCompactCore.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "utils\\autoUpdater.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "utils\\cleanup.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "utils\\Cursor.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "utils\\fileRecoveryCore.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "utils\\fuzzyMatcher.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "utils\\secureFile.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "utils\\toolExecutionController.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "utils\\user.ts",
        "score": 11,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\binary-feedback\\BinaryFeedback.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\binary-feedback\\BinaryFeedbackOption.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\binary-feedback\\BinaryFeedbackView.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\CustomSelect\\option-map.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\CustomSelect\\select-option.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\CustomSelect\\use-select.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\AssistantBashOutputMessage.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\AssistantLocalCommandOutputMessage.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\AssistantRedactedThinkingMessage.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\AssistantTextMessage.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\AssistantToolUseMessage.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\TaskToolMessage.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\UserCommandMessage.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\UserKodingInputMessage.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\UserPromptMessage.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\UserTextMessage.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\permissions\\hooks.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\permissions\\PermissionRequestTitle.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\permissions\\toolUseOptions.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\permissions\\utils.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "services\\adapters\\chatCompletions.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "services\\adapters\\responsesAPI.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\ArchitectTool\\ArchitectTool.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\ArchitectTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\AskExpertModelTool\\AskExpertModelTool.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\FileEditTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\FileEditTool\\utils.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\FileReadTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\FileWriteTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\lsTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\MCPTool\\MCPTool.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\MCPTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\MemoryReadTool\\MemoryReadTool.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\MemoryReadTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\MemoryWriteTool\\MemoryWriteTool.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\MemoryWriteTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\MultiEditTool\\MultiEditTool.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\MultiEditTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\NotebookEditTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\NotebookReadTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\StickerRequestTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\TaskTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\ThinkTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\TodoWriteTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\TodoWriteTool\\TodoWriteTool.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\URLFetcherTool\\cache.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\URLFetcherTool\\htmlToMarkdown.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\URLFetcherTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\URLFetcherTool\\URLFetcherTool.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\WebSearchTool\\prompt.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\WebSearchTool\\searchProviders.ts",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "tools\\WebSearchTool\\WebSearchTool.tsx",
        "score": 10,
        "dependents": 1,
        "reason": "被1个文件依赖"
      }
    ],
    "low": [
      {
        "path": "commands.ts",
        "score": 9,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "components\\messages\\UserToolResultMessage\\UserToolCanceledMessage.tsx",
        "score": 9,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\UserToolResultMessage\\UserToolErrorMessage.tsx",
        "score": 9,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\UserToolResultMessage\\UserToolRejectMessage.tsx",
        "score": 9,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\UserToolResultMessage\\UserToolResultMessage.tsx",
        "score": 9,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\messages\\UserToolResultMessage\\UserToolSuccessMessage.tsx",
        "score": 9,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\permissions\\BashPermissionRequest\\BashPermissionRequest.tsx",
        "score": 9,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\permissions\\FileEditPermissionRequest\\FileEditPermissionRequest.tsx",
        "score": 9,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\permissions\\FilesystemPermissionRequest\\FilesystemPermissionRequest.tsx",
        "score": 9,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "components\\permissions\\FileWritePermissionRequest\\FileWritePermissionRequest.tsx",
        "score": 9,
        "dependents": 1,
        "reason": "被1个文件依赖"
      },
      {
        "path": "context.ts",
        "score": 9,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "index.ts",
        "score": 9,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "tools.ts",
        "score": 9,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "commands\\approvedTools.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "components\\StickerRequestForm.tsx",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "constants\\claude-asterisk-ascii-art.tsx",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "entrypoints\\cli.tsx",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "services\\browserMocks.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "services\\mentionProcessor.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "test\\testAdapters.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "types\\PermissionMode.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "types\\RequestContext.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "utils\\commonUnixCommands.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "utils\\expertChatStorage.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "utils\\globalLogger.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "utils\\imagePaste.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "utils\\messageContextManager.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "utils\\responseState.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "utils\\validate.ts",
        "score": 8,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "components\\messages\\TaskProgressMessage.tsx",
        "score": 7,
        "dependents": 0,
        "reason": "基础文件"
      },
      {
        "path": "tools\\StickerRequestTool\\StickerRequestTool.tsx",
        "score": 7,
        "dependents": 0,
        "reason": "基础文件"
      }
    ],
    "recommendedOrder": [
      {
        "path": "utils\\theme.ts",
        "score": 227,
        "category": "utilities"
      },
      {
        "path": "Tool.ts",
        "score": 191,
        "category": "entry_points"
      },
      {
        "path": "utils\\log.ts",
        "score": 164,
        "category": "utilities"
      },
      {
        "path": "utils\\state.ts",
        "score": 137,
        "category": "utilities"
      },
      {
        "path": "constants\\product.ts",
        "score": 119,
        "category": "utilities"
      },
      {
        "path": "query.ts",
        "score": 90,
        "category": "utilities"
      },
      {
        "path": "utils\\model.ts",
        "score": 86,
        "category": "utilities"
      },
      {
        "path": "utils\\config.ts",
        "score": 77,
        "category": "utilities"
      },
      {
        "path": "utils\\env.ts",
        "score": 68,
        "category": "utilities"
      },
      {
        "path": "components\\FallbackToolUseRejectedMessage.tsx",
        "score": 65,
        "category": "utilities"
      },
      {
        "path": "utils\\messages.tsx",
        "score": 62,
        "category": "utilities"
      },
      {
        "path": "components\\CustomSelect\\select.tsx",
        "score": 58,
        "category": "utilities"
      },
      {
        "path": "services\\claude.ts",
        "score": 56,
        "category": "utilities"
      },
      {
        "path": "hooks\\useExitOnCtrlCD.ts",
        "score": 53,
        "category": "utilities"
      },
      {
        "path": "tools\\BashTool\\BashTool.tsx",
        "score": 46,
        "category": "utilities"
      },
      {
        "path": "constants\\macros.ts",
        "score": 44,
        "category": "utilities"
      },
      {
        "path": "hooks\\useTerminalSize.ts",
        "score": 44,
        "category": "utilities"
      },
      {
        "path": "utils\\permissions\\filesystem.ts",
        "score": 43,
        "category": "utilities"
      },
      {
        "path": "services\\systemReminder.ts",
        "score": 41,
        "category": "utilities"
      },
      {
        "path": "utils\\terminal.ts",
        "score": 41,
        "category": "utilities"
      }
    ]
  }
}